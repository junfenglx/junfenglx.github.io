<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>jf.h</title><link href="http://blog.junfeng.ca/" rel="alternate"></link><link href="http://blog.junfeng.ca/feeds/all.atom.xml" rel="self"></link><id>http://blog.junfeng.ca/</id><updated>2015-06-28T20:20:58+08:00</updated><entry><title>C++ link and library usage</title><link href="http://blog.junfeng.ca/c-link-and-library-usage.html" rel="alternate"></link><updated>2015-06-28T20:20:58+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-06-28:c-link-and-library-usage.html</id><summary type="html">&lt;p&gt;When use a programming language produtively,
We need use third parties libraries.&lt;/p&gt;
&lt;p&gt;If we install libraries and header files in
/usr/lib, /usr/local/lib and /usr/include/,
/usr/local/include, compilers will find them automatically.
But when libraries and headers are not in system paths, How
do you tell compilers to find them.&lt;/p&gt;
&lt;p&gt;The answer is using compiler flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-I&lt;/code&gt; adds headers search paths&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt; adds lib search paths&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt; adds lib files, includes dynamic and static libs&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Wl,-rpath,shared_path&lt;/code&gt; adds shared_path to rpath&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These flags control compilers how to find libraries you use.
Just like Java's class path.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;note: when use dynamic link, you should set rpath(RUNTIME SEARCH PATH)&lt;/em&gt;
&lt;em&gt;proporly, otherwise when executes, your program would't find shared&lt;/em&gt;
&lt;em&gt;libraries not located in system link path.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;But the above way is a low level approach. More convenient way
is using Makefile with pkg-config tool. pkg-config can read config
files and provides compiler flags about a library.&lt;/p&gt;
&lt;p&gt;The most simple way is using CMake, CMake provides many commands to
find the library you are working with, and it is so convenient that
CMake provides lots of varaibles you can add paths for CMake to search.&lt;/p&gt;
&lt;p&gt;Some useful commands include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;include_directories&lt;/code&gt;, adds header files search path.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;find_library&lt;/code&gt;, find library files for linking.&lt;/li&gt;
&lt;li&gt;some varaibles about rpath:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_RPATH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMAKE_INSTALL_RPATH_USE_LINK_PATH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMAKE_BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://www.rapidtables.com/code/linux/gcc.htm"&gt;http://www.rapidtables.com/code/linux/gcc.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://manned.org/pkg-config.1"&gt;http://manned.org/pkg-config.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Rpath"&gt;https://en.wikipedia.org/wiki/Rpath&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cmake.org/documentation/"&gt;http://www.cmake.org/documentation/&lt;/a&gt;&lt;/p&gt;</summary><category term="C++"></category><category term="CMake"></category></entry><entry><title>backslash in C++</title><link href="http://blog.junfeng.ca/backslash-in-c.html" rel="alternate"></link><updated>2015-06-21T18:24:19+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-06-21:backslash-in-c.html</id><summary type="html">&lt;p&gt;Use backslash to format long long lines. Oops, I nerver use it in C++.&lt;/p&gt;
&lt;p&gt;How to use backslash?&lt;/p&gt;
&lt;p&gt;This is an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
            &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fffff&amp;quot;&lt;/span&gt; \
                     &lt;span class="s"&gt;&amp;quot;fffff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// right&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fffff&amp;quot;&lt;/span&gt;
        &lt;span class="s"&gt;&amp;quot;fffff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// right&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\u4f60\u597d&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/* std::string s3 = &amp;quot;\u4f60\u&amp;quot; \&lt;/span&gt;
&lt;span class="cm"&gt;                      &amp;quot;597d&amp;quot;; wrong&lt;/span&gt;
&lt;span class="cm"&gt;    std::string s3 = &amp;quot;\u4f60\u&amp;quot;&lt;/span&gt;
&lt;span class="cm"&gt;        &amp;quot;597d&amp;quot;; wrong&lt;/span&gt;
&lt;span class="cm"&gt;    */&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;s4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;你好&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;s2&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;s4&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Maybe from now I need write one variable in one line, and document every variable.&lt;/p&gt;
&lt;p&gt;Hope I can get &lt;em&gt;clean code&lt;/em&gt;&lt;/p&gt;</summary><category term="backslash"></category><category term="C++"></category></entry><entry><title>PEPS doc Kindle版本</title><link href="http://blog.junfeng.ca/peps-doc-kindleban-ben.html" rel="alternate"></link><updated>2015-06-09T22:07:32+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-06-09:peps-doc-kindleban-ben.html</id><summary type="html">&lt;h3&gt;介绍&lt;/h3&gt;
&lt;p&gt;Python上遇到的很多问题搜到最后经常链接到PEP, 觉得PEPS需要研读一下.
一时半会儿看不完的东西总想着放到Kindle里看(很有可能不会再看), 于是
就制作了这个mobi版本的Python Enhancement Proposals.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/grepcook/peps_mobi/master/Python%20Enhancement%20Proposals.mobi"&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;过程&lt;/h3&gt;
&lt;p&gt;hg clone下来, 然后转成html. 使用&lt;a href="https://github.com/grepcook/peps_mobi/blob/master/pep2mobi.py"&gt;代码&lt;/a&gt;解析html, 用kindlegen生成
mobi文件.&lt;/p&gt;
&lt;p&gt;吐槽:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Python官方积极推动代码移植到Python 3, 可peps中的转换代码都是
   老版本的Python 2&lt;/li&gt;
&lt;li&gt;kindlegen的&lt;code&gt;-c2&lt;/code&gt;选项很占用CPU, 且处理时间臭长, 但生成文件体积
   变化并不大&lt;/li&gt;
&lt;li&gt;PEP的两种格式处理起来带来不少麻烦, 并且其生成的html文档结构
   很简单, 没有程序处理需要的元信息.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;TODO&lt;/h3&gt;
&lt;p&gt;本来应该按照分类做成类似期刊格式的文档, 但时间不够用, 没有制作
期刊的模板, 以后有时间再做.&lt;/p&gt;
&lt;p&gt;应该免去转成html那一步, 直接利用原生格式, 需要学习PEP文档的两种
格式.&lt;/p&gt;
&lt;p&gt;Python应该统一PEP格式, 把两种格式使用程序转成一种.&lt;/p&gt;</summary><category term="Python"></category><category term="Kindle"></category></entry><entry><title>OAuth 2.0 Bearer Token Usage</title><link href="http://blog.junfeng.ca/oauth-20-bearer-token-usage.html" rel="alternate"></link><updated>2015-06-08T16:17:44+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-06-08:oauth-20-bearer-token-usage.html</id><summary type="html">&lt;h3&gt;引入&lt;/h3&gt;
&lt;p&gt;在给Tornado编写豆瓣API的类时, 在查看文档时, 发现其access_token
并不像其它网站那样是传在query或者body中的. 而是放入headers中.
即: &lt;code&gt;headers["Authorization"] = Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;搜索OAuth2.0 Bearer, 在RFC 6750中找到了详细介绍&lt;/p&gt;
&lt;h3&gt;使用access_token方法&lt;/h3&gt;
&lt;p&gt;标准中给出了3种access_token的使用方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用headers的Authorization字段(格式如上)&lt;/li&gt;
&lt;li&gt;form字段形式放入POST请求的body中&lt;/li&gt;
&lt;li&gt;query形式放入url中&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;标准推荐使用第一种方法. 第三种并不推荐, 因为access_token有可能泄漏.&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;http://self-issued.info/docs/draft-ietf-oauth-v2-bearer.html&lt;/p&gt;</summary><category term="OAuth2.0"></category><category term="Bearer"></category></entry><entry><title>right click menu items</title><link href="http://blog.junfeng.ca/right-click-menu-items.html" rel="alternate"></link><updated>2015-05-16T18:42:50+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-05-16:right-click-menu-items.html</id><summary type="html">&lt;p&gt;The list of program that is displayed when right-clicking on a file in PCManFM is the combination of:
mimeinfo.cache
mimeapps.list
The default program that is launched when you double-click on a file in PCManFM is (first match wins):
The one from ~/.local/share/applications/mimeapps.list
The one from ~/.local/share/applications/defaults.list
The one from /usr/local/share/applications/defaults.list
The one from /usr/share/applications/defaults.list
The first one from /usr/share/applications/mimeinfo.cache&lt;/p&gt;
&lt;p&gt;From https://lkubaski.wordpress.com/2012/10/29/understanding-file-associations-in-lxde-and-pcmanfm/&lt;/p&gt;</summary><category term="mime"></category><category term="desktop"></category></entry><entry><title>The Little Redis Book 笔记</title><link href="http://blog.junfeng.ca/the-little-redis-book-bi-ji.html" rel="alternate"></link><updated>2015-04-15T12:25:16+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2015-04-15:the-little-redis-book-bi-ji.html</id><summary type="html">&lt;p&gt;query limitations, data structures and Redis' way to store data in memory&lt;/p&gt;
&lt;h3&gt;strings&lt;/h3&gt;
&lt;p&gt;use cases: storing objects (complex or not) and counters&lt;/p&gt;
&lt;h3&gt;hashes&lt;/h3&gt;
&lt;p&gt;hash suits for structed objects
hash implemention&lt;/p&gt;
&lt;h3&gt;sets&lt;/h3&gt;
&lt;p&gt;in op is O(1)?&lt;/p&gt;
&lt;p&gt;use cases: Sets are great for tagging or tracking any other properties
of a value for which duplicates don't make any sense
(or where we want to apply set operations such as intersections and unions).&lt;/p&gt;
&lt;h3&gt;sorted sets&lt;/h3&gt;
&lt;p&gt;hashes are like strings but with fields,
then sorted sets are like sets but with a score&lt;/p&gt;
&lt;p&gt;use cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;leaderboard system&lt;/li&gt;
&lt;li&gt;anything you want sorted by an some integer,
  and be able to efficiently manipulate based on that score,&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Pseudo Multi Key Queries&lt;/h3&gt;
&lt;p&gt;using hashes to make querying a little easier&lt;/p&gt;
&lt;h3&gt;References and Indexes&lt;/h3&gt;
&lt;p&gt;manage/update/delete these references manually is defficult&lt;/p&gt;
&lt;h3&gt;Round Trips and Pipelining&lt;/h3&gt;
&lt;h3&gt;Transactions&lt;/h3&gt;
&lt;p&gt;Every Redis command is atomic, including the ones that do multiple things.
Additionally, Redis has support for transactions when using multiple commands.&lt;/p&gt;
&lt;p&gt;Redis is actually single-threaded,
which is how every command is guaranteed to be atomic&lt;/p&gt;
&lt;p&gt;starts &lt;em&gt;multi&lt;/em&gt; then some &lt;em&gt;commands&lt;/em&gt; ends with exec or discard&lt;/p&gt;
&lt;h3&gt;Expiration&lt;/h3&gt;
&lt;p&gt;commands:
- EXPIRE
- EXPIREAT
- TTL
- PERSIST
- SETEX&lt;/p&gt;
&lt;p&gt;ideal caching engine&lt;/p&gt;
&lt;h3&gt;Lua Scripting&lt;/h3&gt;
&lt;p&gt;keys with a TTL won't expire half-way through script execution&lt;/p&gt;
&lt;p&gt;&lt;em&gt;lua-time-limit&lt;/em&gt; defines how long a Lua script is allowed to
execute before being terminated. Default is 5 seconds.&lt;/p&gt;
&lt;h3&gt;Replication&lt;/h3&gt;
&lt;p&gt;Redis replication doesn't yet provide automated failover,
If the master dies, a slave needs to be manually promoted&lt;/p&gt;
&lt;p&gt;Some commands are more expensive than others (sort for example)
and offloading their execution to a slave can keep the overall
system responsive to incoming queries&lt;/p&gt;
&lt;h3&gt;Backups&lt;/h3&gt;
&lt;p&gt;disable both snapshotting and the append-only file (aof) on
the master and let a slave take care of this&lt;/p&gt;
&lt;h3&gt;Redis Cluster&lt;/h3&gt;
&lt;p&gt;Not only will this offer horizontal scaling, including rebalancing,
but it'll also provide automated failover for high availability.&lt;/p&gt;
&lt;h3&gt;End&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Redis is easy to learn&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;the real benefits Redis has to offer with its simplicity&lt;/em&gt;&lt;/p&gt;</summary><category term="Redis"></category><category term="learning"></category></entry><entry><title>天朝火车硬座的乱想</title><link href="http://blog.junfeng.ca/tian-zhao-huo-che-ying-zuo-de-luan-xiang.html" rel="alternate"></link><updated>2015-01-06T22:00:00+08:00</updated><author><name>junfeng_hu</name></author><id>tag:blog.junfeng.ca,2015-01-06:tian-zhao-huo-che-ying-zuo-de-luan-xiang.html</id><summary type="html">&lt;p&gt;明里着让你好好休息，然后光明正大的卖着什么租电影的服务，偏偏还有傻X,
愿意看“铁路工作人员”嘴里所谓的最新的电影。其实你想多了，让你好好休息
哪是对我们这些坐硬座的人说的。什么都有不一样，都有特权阶级。大家都想
着自己能成为所谓特权阶级的一分子，努力的往上爬，却丝毫不考虑这种设定
的合理不合理性。那人也整个是脑子里都是面糊，自己不睡觉，也不让大家睡觉。
自觉性，应该是与生俱来的品质了吧，但在大多数人身上却看不到一丁点。懊悔
自己没有超凡的能力，这样扰民的人就应该从火车上扔出去&lt;/p&gt;</summary><category term="火车"></category></entry><entry><title>换位置</title><link href="http://blog.junfeng.ca/huan-wei-zhi.html" rel="alternate"></link><updated>2014-12-22T10:07:00+08:00</updated><author><name>junfeng_hu</name></author><id>tag:blog.junfeng.ca,2014-12-22:huan-wei-zhi.html</id><summary type="html">&lt;p&gt;想着能在那个座位待到考研结束，也算是一种坚持。
但仅剩一个星期之际，却搞什么搬书移书，直接把
那间馆藏室给关了。又正值考试临近，换的位置感
觉不舒坦。图书馆里整个闹嗡嗡的，配上此天的心情，
也是一种滋味。&lt;/p&gt;</summary><category term="exams"></category></entry><entry><title>unpv13e chapter 3 notes</title><link href="http://blog.junfeng.ca/unpv13e-chapter-3-notes.html" rel="alternate"></link><updated>2014-07-03T14:45:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-07-03:unpv13e-chapter-3-notes.html</id><summary type="html">&lt;h3&gt;IPv4 Socket Address Structure&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sockaddr_in.png" src="./images/sockaddr_in.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Datatypes required by the POSIX specification&lt;/h3&gt;
&lt;p&gt;&lt;img alt="datatypes.png" src="./images/datatypes.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Generic Socket Address Structure&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sockaddr.png" src="./images/sockaddr.png" /&gt;&lt;/p&gt;
&lt;h3&gt;IPv6 Socket Address Structure&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sockaddr_in6.png" src="./images/sockaddr_in6.png" /&gt;&lt;/p&gt;
&lt;h3&gt;New Generic Socket Address Structure&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sockaddr_storage.png" src="./images/sockaddr_storage.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Comparison of various socket address structures.&lt;/h3&gt;
&lt;p&gt;&lt;img alt="sockaddr_comparison.png" src="./images/sockaddr_comparison.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Byte Ordering Functions&lt;/h3&gt;
&lt;p&gt;&lt;img alt="byte_ordering_functions.png" src="./images/byte_ordering_functions.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Convert Addresses Between ASCII Strings And Network Byte Ordered Binary Values&lt;/h3&gt;
&lt;h5&gt;Old Functions:&lt;/h5&gt;
&lt;p&gt;&lt;img alt="inet_aton-inet_addr-inet_ntoa.png" src="./images/inet_aton-inet_addr-inet_ntoa.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;note 1: INADDR_NONE is typically 32 one-bits, so inet_addr cannot convert string 255.255.255.255&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;note 2: inet_ntoa's return value is in static memory, so it is not reentrant&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;note 3: inet_ntoa takes structures as it's argument, not a point&lt;/em&gt;&lt;/p&gt;
&lt;h5&gt;New Functions:&lt;/h5&gt;
&lt;p&gt;&lt;img alt="inet_pton-inet_ntop.png" src="./images/inet_pton-inet_ntop.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#define INET_ADDRSTRLEN 16 /* for IPv4 dotted-decimal */&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;#define INET6_ADDRSTRLEN 46 /* for IPv6 hex string */&lt;/code&gt;&lt;/p&gt;
&lt;h5&gt;Summary of address conversion functions&lt;/h5&gt;
&lt;p&gt;&lt;img alt="address_conversion_functions.png" src="./images/address_conversion_functions.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Exercises&lt;/h2&gt;
&lt;p&gt;3.1 In C the function can modify arguments only if arguments passed by reference.&lt;/p&gt;
&lt;p&gt;3.2 because &lt;code&gt;sizeof(char)&lt;/code&gt; is one byte, read or write n chars equals n bytes data.&lt;/p&gt;
&lt;p&gt;3.3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/*inet_pton_loose&lt;/span&gt;
&lt;span class="cm"&gt; * author: junfeng*/&lt;/span&gt;

&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;string.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;inet_pton_loose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;strptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/*test*/&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in_addr&lt;/span&gt; &lt;span class="n"&gt;a_in4_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in6_addr&lt;/span&gt; &lt;span class="n"&gt;a_in6_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;str_addr4&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;INET_ADDRSTRLEN&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;str_addr6&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;INET6_ADDRSTRLEN&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Usage:&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;%s str_addr&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inet_pton_loose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a_in4_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;inet_ntop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a_in4_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_addr4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;INET_ADDRSTRLEN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a_in4_addr: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_addr4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inet_pton_loose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a_in6_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;inet_ntop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;a_in6_addr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_addr6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;INET6_ADDRSTRLEN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;a_in6_addr: %s&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_addr6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;inet_pton_loose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;strptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inet_pton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;addrptr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in_addr&lt;/span&gt; &lt;span class="n"&gt;in_val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inet_aton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;in_val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;in_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in_addr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;family&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;AF_INET6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;size_t&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in6_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in_addr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;\
                        &lt;span class="mh"&gt;0xff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="n"&gt;memcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;addrptr&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;in_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;in_addr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="unpv13e"></category><category term="notes"></category></entry><entry><title>mount and grep</title><link href="http://blog.junfeng.ca/mount-and-grep.html" rel="alternate"></link><updated>2014-06-08T21:45:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-08:mount-and-grep.html</id><summary type="html">&lt;h2&gt;mount options&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mount&lt;/code&gt;display current partions mount options.
Output like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/dev/sda2 on /home type ext4 (rw,relatime,data=ordered)
/dev/sda5 on /media/sda5 type ext4 (rw,nosuid,nodev,noexec,relatime,data=ordered,user)
/dev/sda7 on /media/sda7 type ext4 (rw,nosuid,nodev,noexec,relatime,data=ordered,user)
/dev/sda6 on /media/sda6 type ext4 (rw,nosuid,nodev,noexec,relatime,data=ordered,user)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;if you run a executable program on a partion with settiong noexec mount options, this program will not execute.&lt;/p&gt;
&lt;p&gt;And you got error message like &lt;code&gt;bash: ./a.out: Permission denied&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When you have a program that opens exec bit flag, but it can't run, even you have corret permission.&lt;/p&gt;
&lt;p&gt;then &lt;code&gt;mount&lt;/code&gt; check mount options of the partion the program run on. Maybe just because you didn't open exec mount option.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;if you set partions auto mount on /et/fstab, check whether you set user mount option.&lt;/p&gt;
&lt;p&gt;according the mount man page says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Allow an ordinary user to mount the filesystem.
  The name of the mounting user is written to mtab so that he can unmount the filesystem again.
  This option implies the options noexec, nosuid, and nodev (unless overridden by subsequent options,
  as in the option line user,exec,dev,suid).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So if you want programs can run on these auto mount partions, add exec option if you setted user option.&lt;/p&gt;
&lt;h2&gt;grep options&lt;/h2&gt;
&lt;p&gt;If you want to search some words like &lt;code&gt;X-Forwarded-For&lt;/code&gt; recursively, you type
&lt;code&gt;grep -i "X-Forwarded-For" -r *&lt;/code&gt;. It works, but search every type files.&lt;/p&gt;
&lt;p&gt;Maybe you want to recursively search just some type files like "*.py".&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;grep -i "X-Forwarded-For" -r *.py&lt;/code&gt; is a naturaly derivation. But It doesn't work.
It equals to &lt;code&gt;grep -i "X-Forwarded-For" *.py&lt;/code&gt;, just search current directory "*.py" files.&lt;/p&gt;
&lt;p&gt;The right solution is:
&lt;code&gt;grep -i "X-Forwarded-For" --include=*.py -r&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;recursively search *.py files for &lt;code&gt;X-Forwarded-For&lt;/code&gt;&lt;/p&gt;</summary><category term="mount"></category><category term="grep"></category></entry><entry><title>unpv13e chapter 2 notes</title><link href="http://blog.junfeng.ca/unpv13e-chapter-2-notes.html" rel="alternate"></link><updated>2014-06-08T15:41:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-08:unpv13e-chapter-2-notes.html</id><summary type="html">&lt;h2&gt;Overview of TCP/IP protocols.&lt;/h2&gt;
&lt;p&gt;&lt;img alt="unpv1_overview_TCP_IP_protocols.png" src="./images/unpv1_overview_TCP_IP_protocols.png" /&gt;&lt;/p&gt;
&lt;h2&gt;TCP&lt;/h2&gt;
&lt;h3&gt;Three-Way Handshake&lt;/h3&gt;
&lt;p&gt;&lt;img alt="TCP_three_way_handshake.png" src="./images/TCP_three_way_handshake.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Packets exchanged when a TCP connection is closed.&lt;/h3&gt;
&lt;p&gt;&lt;img alt="packets_exchange_when_TCP_connections_terminal.png" src="./images/packets_exchange_when_TCP_connections_terminal.png" /&gt;&lt;/p&gt;
&lt;h3&gt;TCP State Transition Diagram&lt;/h3&gt;
&lt;p&gt;&lt;img alt="TCP_State_Transition_Diagram.png" src="./images/TCP_State_Transition_Diagram.png" /&gt;&lt;/p&gt;
&lt;h3&gt;TIME_WAIT State&lt;/h3&gt;
&lt;p&gt;Time: 2MSL&lt;/p&gt;
&lt;p&gt;Reasons:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To implement TCP's full-duplex connection termination reliably&lt;/li&gt;
&lt;li&gt;To allow old duplicate segments to expire in the network&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SCTP&lt;/h2&gt;
&lt;h3&gt;SCTP four-way handshake&lt;/h3&gt;
&lt;p&gt;&lt;img alt="SCTP_four_way_handshake.png" src="./images/SCTP_four_way_handshake.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Packets exchanged when an SCTP association is closed&lt;/h3&gt;
&lt;p&gt;&lt;img alt="packets_exchanged_when_an_SCTP_association_is_closed.png" src="./images/packets_exchanged_when_an_SCTP_association_is_closed.png" /&gt;&lt;/p&gt;
&lt;p&gt;SCTP does not permit a "half-closed" association, does not have a TIME_WAIT state.&lt;/p&gt;
&lt;h3&gt;SCTP State Transition Diagram&lt;/h3&gt;
&lt;p&gt;&lt;img alt="SCTP_State_Transition_Diagram.png" src="./images/SCTP_State_Transition_Diagram.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Socket Pair&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TCP: the local IP address, local port, foreign IP address, and foreign port&lt;/li&gt;
&lt;li&gt;SCTP: a set of local IP addresses, a local port, a set of foreign IP
  addresses, and a foreign port&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Headers&lt;/h2&gt;
&lt;h3&gt;IPv4 Header&lt;/h3&gt;
&lt;p&gt;&lt;img alt="IPv4_header.png" src="./images/IPv4_header.png" /&gt;&lt;/p&gt;
&lt;h3&gt;IPv6 Header&lt;/h3&gt;
&lt;p&gt;&lt;img alt="IPv6_header.png" src="./images/IPv6_header.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Buffer Sizes and Limitations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The maximum size of an IPv4 datagram is 65,535 bytes, including the IPv4
  header.&lt;/li&gt;
&lt;li&gt;The maximum size of an IPv6 datagram is 65,575 bytes, including the 40-byte
  IPv6 header.&lt;/li&gt;
&lt;li&gt;Many networks have an MTU which can be dictated by the hardware.&lt;ul&gt;
&lt;li&gt;Ethernet MTU: 1500 bytes&lt;/li&gt;
&lt;li&gt;point-to-point links using the Point-to-Point Protocol (PPP): configurable MTU&lt;/li&gt;
&lt;li&gt;Older SLIP links often used an MTU of 1,006 or 296 bytes.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The minimum link MTU for IPv4 is 68 bytes (maximum-sized IPv4 header 60  and minimum-sized fragment).&lt;/li&gt;
&lt;li&gt;The minimum link MTU for IPv6 is 1,280 bytes.&lt;/li&gt;
&lt;li&gt;he smallest MTU in the path between two hosts is called the path MTU.&lt;/li&gt;
&lt;li&gt;minimum reassembly buffer size: IPv4 576 bytes, IPv6 1500 bytes&lt;/li&gt;
&lt;li&gt;TCP has a maximum segment size (MSS) that announces to the peer TCP the
  maximum amount of TCP data that the peer can send per segment.&lt;/li&gt;
&lt;li&gt;SCTP keeps a fragmentation point based on the smallest path MTU found to all
  the peer's addresses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note:
&lt;em&gt;Pv6 payload length field does not include the size of the IPv6header,&lt;/em&gt;
&lt;em&gt;while the IPv4 total length field does include the header size.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Retransmission&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Positive Acknowledgement&lt;/li&gt;
&lt;li&gt;Negative Acknowledgment&lt;/li&gt;
&lt;li&gt;Selective Acknowledgment&lt;/li&gt;
&lt;li&gt;Cumulative Acknowledgment&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Exercise&lt;/h2&gt;
&lt;h3&gt;2.1&lt;/h3&gt;
&lt;p&gt;version 0-1: Reserved&lt;/p&gt;
&lt;p&gt;version 2-3: Unassigned&lt;/p&gt;
&lt;p&gt;version 5: Internet Stream Protocol&lt;/p&gt;
&lt;h3&gt;2.2&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://tools.ietf.org/html/rfc1190"&gt;rfc1190&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Internet_Stream_Protocol"&gt;Internet_Stream_Protocol&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2.3&lt;/h3&gt;
&lt;p&gt;The minimum reassembly buffer size for IPv4 is 576, it minus the 20-byte IPv4 header and minus
the 20-byte TCP header is 536&lt;/p&gt;
&lt;h3&gt;2.4&lt;/h3&gt;
&lt;p&gt;&lt;img alt="2.4.jpeg" src="./images/2.4.jpeg" /&gt;&lt;/p&gt;
&lt;h3&gt;2.5&lt;/h3&gt;
&lt;p&gt;Token ring host can't send packets more than 1460 bytes of data, because peer MSS was 1460.
Ethernet host can send no more than 4096 bytes data, but it's MTU is 1500 bytes, it will not exceed the MTU of the
outgoing interface (the Ethernet) to avoid fragmentation. There for the max length of data is 1460 (1500-20-20)&lt;/p&gt;
&lt;h3&gt;2.6&lt;/h3&gt;
&lt;p&gt;89&lt;/p&gt;
&lt;h3&gt;2.7&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A selective acknowledgment only indicates that the data covered by the
sequence numbers reflected in the selective acknowledgment message was
received. Only a cumulative acknowledgment says that the data up to and
including the sequence number in the cumulative acknowledgment message
was received. When freeing data from the send buffer based on a selective
acknowledgment, the system may only free the exact data that was
acknowledged, and not any before or after the selective acknowledgment.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="unpv13e"></category><category term="notes"></category></entry><entry><title>Debian 环境下的 beaglebone black NFS client 配置</title><link href="http://blog.junfeng.ca/debian-huan-jing-xia-de-beaglebone-black-nfs-client-pei-zhi.html" rel="alternate"></link><updated>2014-06-07T11:36:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-07:debian-huan-jing-xia-de-beaglebone-black-nfs-client-pei-zhi.html</id><summary type="html">&lt;p&gt;不知什么时候手贱把beaglebone black刷成了Debian(Archlinux 没刷成功), 然后就放那了.&lt;/p&gt;
&lt;p&gt;今天要做实验, 就搭了下NFS.&lt;/p&gt;
&lt;p&gt;NFS Server 使用 Archlinux, 配置参见&lt;a href="https://wiki.archlinux.org/index.php/Nfs"&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;client 使用 Debian. 需要安装 nfs-common package&lt;/p&gt;
&lt;p&gt;配置 BB-black 联网:&lt;/p&gt;
&lt;p&gt;在板子下输入命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/sbin/route add default gw 192.168.7.1
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nameserver 114.114.114.114&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/resolv.conf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在宿主机上输入:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo iptables -A POSTROUTING -t nat -j MASQUERADE
&lt;span class="nb"&gt;echo &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee /proc/sys/net/ipv4/ip_forward &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ping 你喜爱的网站查看是否能成功．&lt;/p&gt;
&lt;p&gt;联网后:
&lt;code&gt;vim /etc/apt/sources.list&lt;/code&gt; 添加以下几行软件源:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;deb http://mirrors.ustc.edu.cn/debian stable main contrib non-free
  deb-src http://mirrors.ustc.edu.cn/debian stable main contrib non-free
  deb http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free
  deb-src http://mirrors.ustc.edu.cn/debian stable-proposed-updates main contrib non-free&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;aptitude update&lt;/code&gt; 更新 packages list
执行 &lt;code&gt;aptitude -y install nfs-common&lt;/code&gt; 安装 所需软件包.
然后 &lt;code&gt;mount -t nfs 192.168.7.1:/srv/nfs4/BBB nfs4&lt;/code&gt; 挂载即可&lt;/p&gt;
&lt;p&gt;参考:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://www.server-world.info/en/note?os=Debian_7.0&amp;amp;p=nfs&amp;amp;f=2&lt;/li&gt;
&lt;li&gt;https://lug.ustc.edu.cn/wiki/mirrors/help/debian&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Debian"></category><category term="NFS"></category></entry><entry><title>unpv13e chapter 1 notes</title><link href="http://blog.junfeng.ca/unpv13e-chapter-1-notes.html" rel="alternate"></link><updated>2014-06-04T14:16:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-04:unpv13e-chapter-1-notes.html</id><summary type="html">&lt;h2&gt;struct sockaddr&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Everytime one of the socket functions requires a pointer to a
  socket address structure, that pointer must be cast to a pointer to a generic socket
  address structure. This is because the socket functions predate the ANSI C standard,
  so the void * pointer type was not available in the early 1980s when these functions
  were developed.[p41]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;server model&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iterative server&lt;/li&gt;
&lt;li&gt;concurrent server&lt;ul&gt;
&lt;li&gt;one process per client(creating one child process for each client)&lt;/li&gt;
&lt;li&gt;one thread per client&lt;/li&gt;
&lt;li&gt;pre-fork a fixed number process or threads&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;OSI model and Internet protocol suite&lt;/h2&gt;
&lt;p&gt;&lt;img alt="img" src="./images/osi_mode_and_internet_protocol.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Linux derived from Minix&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;We also note that Linux, a popular, freely
  available implementation of Unix, does not fit into the Berkeley-derived classification:
  Its networking code and sockets API were developed from scratch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Exercises&lt;/h2&gt;
&lt;h3&gt;1.3&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;errno: 97 socket error: Address family not supported by protocol&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;define AF_* at include/linux/socket.h&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cm"&gt;/* Supported address families. */&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_UNSPEC   0&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_UNIX     1   &lt;/span&gt;&lt;span class="cm"&gt;/* Unix domain sockets      */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_LOCAL    1   &lt;/span&gt;&lt;span class="cm"&gt;/* POSIX name for AF_UNIX   */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_INET     2   &lt;/span&gt;&lt;span class="cm"&gt;/* Internet IP Protocol     */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_AX25     3   &lt;/span&gt;&lt;span class="cm"&gt;/* Amateur Radio AX.25      */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_IPX      4   &lt;/span&gt;&lt;span class="cm"&gt;/* Novell IPX           */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_APPLETALK    5   &lt;/span&gt;&lt;span class="cm"&gt;/* AppleTalk DDP        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_NETROM   6   &lt;/span&gt;&lt;span class="cm"&gt;/* Amateur Radio NET/ROM    */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_BRIDGE   7   &lt;/span&gt;&lt;span class="cm"&gt;/* Multiprotocol bridge     */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ATMPVC   8   &lt;/span&gt;&lt;span class="cm"&gt;/* ATM PVCs         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_X25      9   &lt;/span&gt;&lt;span class="cm"&gt;/* Reserved for X.25 project    */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_INET6    10  &lt;/span&gt;&lt;span class="cm"&gt;/* IP version 6         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ROSE     11  &lt;/span&gt;&lt;span class="cm"&gt;/* Amateur Radio X.25 PLP   */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_DECnet   12  &lt;/span&gt;&lt;span class="cm"&gt;/* Reserved for DECnet project  */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_NETBEUI  13  &lt;/span&gt;&lt;span class="cm"&gt;/* Reserved for 802.2LLC project*/&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_SECURITY 14  &lt;/span&gt;&lt;span class="cm"&gt;/* Security callback pseudo AF */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_KEY      15      &lt;/span&gt;&lt;span class="cm"&gt;/* PF_KEY key management API */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_NETLINK  16&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ROUTE    AF_NETLINK &lt;/span&gt;&lt;span class="cm"&gt;/* Alias to emulate 4.4BSD */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_PACKET   17  &lt;/span&gt;&lt;span class="cm"&gt;/* Packet family        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ASH      18  &lt;/span&gt;&lt;span class="cm"&gt;/* Ash              */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ECONET   19  &lt;/span&gt;&lt;span class="cm"&gt;/* Acorn Econet         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ATMSVC   20  &lt;/span&gt;&lt;span class="cm"&gt;/* ATM SVCs         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_RDS      21  &lt;/span&gt;&lt;span class="cm"&gt;/* RDS sockets          */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_SNA      22  &lt;/span&gt;&lt;span class="cm"&gt;/* Linux SNA Project (nutters!) */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_IRDA     23  &lt;/span&gt;&lt;span class="cm"&gt;/* IRDA sockets         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_PPPOX    24  &lt;/span&gt;&lt;span class="cm"&gt;/* PPPoX sockets        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_WANPIPE  25  &lt;/span&gt;&lt;span class="cm"&gt;/* Wanpipe API Sockets */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_LLC      26  &lt;/span&gt;&lt;span class="cm"&gt;/* Linux LLC            */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_IB       27  &lt;/span&gt;&lt;span class="cm"&gt;/* Native InfiniBand address    */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_CAN      29  &lt;/span&gt;&lt;span class="cm"&gt;/* Controller Area Network      */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_TIPC     30  &lt;/span&gt;&lt;span class="cm"&gt;/* TIPC sockets         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_BLUETOOTH    31  &lt;/span&gt;&lt;span class="cm"&gt;/* Bluetooth sockets        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_IUCV     32  &lt;/span&gt;&lt;span class="cm"&gt;/* IUCV sockets         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_RXRPC    33  &lt;/span&gt;&lt;span class="cm"&gt;/* RxRPC sockets        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ISDN     34  &lt;/span&gt;&lt;span class="cm"&gt;/* mISDN sockets        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_PHONET   35  &lt;/span&gt;&lt;span class="cm"&gt;/* Phonet sockets       */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_IEEE802154   36  &lt;/span&gt;&lt;span class="cm"&gt;/* IEEE802154 sockets       */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_CAIF     37  &lt;/span&gt;&lt;span class="cm"&gt;/* CAIF sockets         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_ALG      38  &lt;/span&gt;&lt;span class="cm"&gt;/* Algorithm sockets        */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_NFC      39  &lt;/span&gt;&lt;span class="cm"&gt;/* NFC sockets          */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_VSOCK    40  &lt;/span&gt;&lt;span class="cm"&gt;/* vSockets         */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#define AF_MAX      41  &lt;/span&gt;&lt;span class="cm"&gt;/* For now.. */&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;1.4&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include    &amp;quot;unp.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;                 &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt;                &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt;  &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usage: a.out &amp;lt;IPaddress&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;bzero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="cm"&gt;/* daytime server */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inet_pton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inet_pton error for %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;connect error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="cm"&gt;/* null terminate */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fputs error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;counter: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Output:&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Sun Jun  &lt;span class="m"&gt;8&lt;/span&gt; 14:36:06 2014
counter: 1
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;1.5&lt;/h3&gt;
&lt;p&gt;Server:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include    &amp;quot;unp.h&amp;quot;&lt;/span&gt;
&lt;span class="cp"&gt;#include    &amp;lt;time.h&amp;gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;                 &lt;span class="n"&gt;listenfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;connfd&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt;  &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt;                &lt;span class="n"&gt;buff&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="kt"&gt;time_t&lt;/span&gt;              &lt;span class="n"&gt;ticks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="n"&gt;listenfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;bzero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s_addr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htonl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INADDR_ANY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cm"&gt;/* daytime server */&lt;/span&gt;

    &lt;span class="n"&gt;Bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listenfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="n"&gt;Listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listenfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LISTENQ&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;connfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;listenfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;ticks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;snprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buff&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;%.24s&lt;/span&gt;&lt;span class="se"&gt;\r\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ctime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ticks&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="c1"&gt;//Write(connfd, buff, strlen(buff));&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buff&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buff&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="n"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connfd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Client:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include    &amp;quot;unp.h&amp;quot;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;                 &lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;char&lt;/span&gt;                &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAXLINE&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;sockaddr_in&lt;/span&gt;  &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;usage: a.out &amp;lt;IPaddress&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;socket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SOCK_STREAM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;socket error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;bzero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_family&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_port&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;htons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9999&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="cm"&gt;/* daytime server */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inet_pton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AF_INET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin_addr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_quit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;inet_pton error for %s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SA&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servaddr&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;connect error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sockfd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXLINE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="cm"&gt;/* null terminate */&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fputs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;recvline&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;EOF&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;fputs error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;err_sys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;read error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;counter: %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;localhost test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;./daytimetcpsrv &amp;amp;
./daytimetcpcli 127.0.0.1
#output:
Sun Jun  8 14:53:29 2014
counter: 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output on remote host test same as localhost&lt;/p&gt;</summary><category term="unpv13e"></category><category term="notes"></category></entry><entry><title>编译unpv13e源代码</title><link href="http://blog.junfeng.ca/bian-yi-unpv13eyuan-dai-ma.html" rel="alternate"></link><updated>2014-06-03T14:28:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-03:bian-yi-unpv13eyuan-dai-ma.html</id><summary type="html">&lt;p&gt;在&lt;a href="http://www.unpbook.com/unpv13e.tar.gz"&gt;这里&lt;/a&gt;下载源代码，根据README进行编译．&lt;/p&gt;
&lt;p&gt;在make libfree下时需要修改inet_ntop.c, 将第60行的
&lt;code&gt;size_t size&lt;/code&gt; 改成 &lt;code&gt;socklen_t size&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;貌似Linux不支持4.4BSD style routing sockets, 所以不需要编译libroute&lt;/p&gt;
&lt;p&gt;测试intro/daytimetcpcli: &lt;code&gt;./daytimetcpcli 216.171.112.36&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;而书上给的IP地址会一直block.&lt;/p&gt;
&lt;p&gt;Then start reading the famous classic book.&lt;/p&gt;</summary><category term="unpv13e"></category></entry><entry><title>history</title><link href="http://blog.junfeng.ca/history.html" rel="alternate"></link><updated>2014-06-01T14:13:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-06-01:history.html</id><summary type="html">&lt;p&gt;“我不喜欢历史”&lt;/p&gt;
&lt;p&gt;“你只是讨厌你的过去而已”&lt;/p&gt;
&lt;p&gt;语言对人的伤害仅次于身体的伤害。&lt;/p&gt;
&lt;p&gt;过去过去了，但它一直活在现在里。&lt;/p&gt;
&lt;p&gt;过去的事情有时候连自己都记不清楚，于是现在的你粉饰着，装点着你的过去。
直到你自己相信那是一段美好的恍若你亲身经历。&lt;/p&gt;
&lt;p&gt;但真实的过去永远在那，等待着机会吞噬你，吞噬你亲近的人。&lt;/p&gt;
&lt;p&gt;过去永远支配着现在的你，而现在又将过去。&lt;/p&gt;</summary><category term="过去"></category></entry><entry><title>从remove google redirect 失效说起</title><link href="http://blog.junfeng.ca/cong-remove-google-redirect-shi-xiao-shuo-qi.html" rel="alternate"></link><updated>2014-05-11T00:37:00+08:00</updated><author><name>junfeng</name></author><id>tag:blog.junfeng.ca,2014-05-11:cong-remove-google-redirect-shi-xiao-shuo-qi.html</id><summary type="html">&lt;p&gt;前段时间发现remove google redirect突然不能用了，在chrome web store的页面也没了。难道被google和谐了？对于我这个重度google使用者来说可不是一件好事情，搜索的结果都要先被google重定向，增加了不必要的加载时间。&lt;/p&gt;
&lt;p&gt;只想寻找解决办法：&lt;a href="https://github.com/juffy/RecoverUrl/raw/master/recover%20url.0.0.1.crx"&gt;点击这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;于是想着能不能改改那个插件的代码，修复这个bug，找到那个插件的源代码，发现一下子1200多行代码，这么复杂。感觉移除一个重定向链接不需要这么麻烦吧，决定自己实现一个。&lt;/p&gt;
&lt;p&gt;用的时候发现google在你点击一个链接时，会被替换成google的重定向链接。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://en.wikipedia.org/wiki/Continuous_integration
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;会被替换成&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;https://www.google.com/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=1&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;sqi=2&amp;amp;ved=0CDUQFjAA&amp;amp;url=%68%74%74%70%3a%2f%2f%65%6e%2e%77%69%6b%69%70%65%64%69%61%2e%6f%72%67%2f%77%69%6b%69%2f%43%6f%6e%74%69%6e%75%6f%75%73%5f%69%6e%74%65%67%72%61%74%69%6f%6e&amp;amp;ei=W0NuU-OSBImQrQe0lYBw&amp;amp;usg=AFQjCNHxUWTtSC_MArGdeBXVTWRAUUkL5Q&amp;amp;sig2=dTBasnGxLNpeCYshC_LnbA
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;查询的url的值是原网址经过url encode转换的。本来想着用这
个值得到原网址的。但google还算厚道，把原网址存到了属性data-url中了。原网址是得到了，关键是怎么恢复原网址。&lt;/p&gt;
&lt;p&gt;通过反复测试发现，刚开始搜索出来的链接是没有被处理的，但当你点击链接的时候却变成了google重定向的链接。因为google的某段js代码监听了mousedown事件，当你点击链接的时候，在鼠标按下时，google把链接修改了。这就好办了，我们可以监听mouseup事件，把网址再改回来，这样当点击后，浏览器看到的就是原网址了。(你要知道点击一次鼠标会先后触发mousedown, mouseup, click事件) 。如此就去掉了搜索结果的重定向。&lt;/p&gt;
&lt;p&gt;于是做了个小插件，只有24行代码&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href="https://github.com/juffy/RecoverUrl/raw/master/recover%20url.0.0.1.crx"&gt;here&lt;/a&gt;
项目地址：&lt;a href="https://github.com/juffy/RecoverUrl"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Written with &lt;a href="https://stackedit.io/"&gt;StackEdit&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="extensions"></category><category term="js event"></category></entry><entry><title>Python struct and Endianness</title><link href="http://blog.junfeng.ca/python-struct-and-endianness.html" rel="alternate"></link><updated>2014-01-10T21:02:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2014-01-10:python-struct-and-endianness.html</id><summary type="html">&lt;p&gt;偶然间在stackoverflow上看到下面这个问题:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;Please&lt;/span&gt; &lt;span class="s-Atom"&gt;explain&lt;/span&gt; &lt;span class="s-Atom"&gt;me&lt;/span&gt; &lt;span class="s-Atom"&gt;what&lt;/span&gt; &lt;span class="s-Atom"&gt;does&lt;/span&gt; &lt;span class="s-Atom"&gt;this&lt;/span&gt; &lt;span class="s-Atom"&gt;piece&lt;/span&gt; &lt;span class="s-Atom"&gt;of&lt;/span&gt; &lt;span class="s-Atom"&gt;code&lt;/span&gt; &lt;span class="s-Atom"&gt;do&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="s-Atom"&gt;h&lt;/span&gt; &lt;span class="s-Atom"&gt;should&lt;/span&gt; &lt;span class="s-Atom"&gt;be&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="nv"&gt;Byte&lt;/span&gt; &lt;span class="s-Atom"&gt;result&lt;/span&gt; &lt;span class="s-Atom"&gt;from&lt;/span&gt; &lt;span class="s-Atom"&gt;sha256&lt;/span&gt; &lt;span class="s-Atom"&gt;calculation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nv"&gt;I&lt;/span&gt; &lt;span class="s-Atom"&gt;am&lt;/span&gt; &lt;span class="s-Atom"&gt;rewriting&lt;/span&gt; &lt;span class="s-Atom"&gt;parts&lt;/span&gt; &lt;span class="s-Atom"&gt;of&lt;/span&gt; &lt;span class="s-Atom"&gt;this&lt;/span&gt; &lt;span class="s-Atom"&gt;code&lt;/span&gt; &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;my&lt;/span&gt; &lt;span class="s-Atom"&gt;project&lt;/span&gt; &lt;span class="s-Atom"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;C&lt;/span&gt;&lt;span class="s-Atom"&gt;++&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;m not sure if this switches byte order per 4byte chunk or change byte order on whole 32byte number.&lt;/span&gt;

&lt;span class="s-Atom"&gt;def reverse_hash(h):&lt;/span&gt;
&lt;span class="s-Atom"&gt;    return struct.pack(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;IIIIIIII&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;, *struct.unpack(&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nv"&gt;IIIIIIII&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s-Atom"&gt;::-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s-Atom"&gt;::-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;And&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;how&lt;/span&gt; &lt;span class="s-Atom"&gt;does&lt;/span&gt; &lt;span class="s-Atom"&gt;this&lt;/span&gt; &lt;span class="s-Atom"&gt;array&lt;/span&gt; &lt;span class="s-Atom"&gt;index&lt;/span&gt; &lt;span class="s-Atom"&gt;work&lt;/span&gt; &lt;span class="s-Atom"&gt;?&lt;/span&gt;

   &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s-Atom"&gt;::-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;Thanks&lt;/span&gt; &lt;span class="s-Atom"&gt;for&lt;/span&gt; &lt;span class="s-Atom"&gt;any&lt;/span&gt; &lt;span class="s-Atom"&gt;and&lt;/span&gt; &lt;span class="s-Atom"&gt;all&lt;/span&gt; &lt;span class="s-Atom"&gt;info&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;Python的splice到还好理解.但对于代码里struct的使用倒是很是疑惑.&lt;br /&gt;
遂搜索struct module的使用.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This module performs conversions between Python values and C structs
represented as Python strings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用法也就参考文档.&lt;/p&gt;
&lt;p&gt;当遇到字节序的时候,产生了疑惑.  &lt;/p&gt;
&lt;p&gt;不同的架构有不同的字节序.大致有三种,大端(Big-endian),小端(Little-endian),双端(Bi-endian).(貌似还有Middle-endian).&lt;br /&gt;
简单来说,&lt;br /&gt;
大端是高位字节在低地址处,低位字节在高地址处,&lt;br /&gt;
小端是低位字节在低地址处,高位字节在高地址处.&lt;br /&gt;
双端是字节序可以配置.&lt;/p&gt;
&lt;p&gt;理解:&lt;br /&gt;
1. 内存中的数据写进去就不再改变.只是解析的顺序不同才有大端,小端一说.&lt;br /&gt;
2.
字节序大端小端之说针对的是单个内存单元之内的字节顺序.单元与单元之间只是按地址线性增长.&lt;/p&gt;
&lt;p&gt;先看wiki上的一个例子:&lt;br /&gt;
字符串"XRAY"的存储分配.&lt;br /&gt;
XRAY 字符值表:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;X   0x58
  R   0x52
  A   0x41
  Y   0x59&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dd&gt;character int value&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;以一个字节为存储单元:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;...&lt;/code&gt;   &lt;code&gt;"Y"&lt;/code&gt;   &lt;code&gt;"A"&lt;/code&gt;   &lt;code&gt;"R"&lt;/code&gt;   &lt;code&gt;"X"&lt;/code&gt;   &lt;code&gt;...&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dd&gt;addresses from right to left&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;以两个字节为单位:&lt;br /&gt;
要表示"XRAY",内存实际分布:&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;...&lt;/code&gt;   &lt;code&gt;"AY"&lt;/code&gt;   &lt;code&gt;"XR"&lt;/code&gt;   &lt;code&gt;...&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dd&gt;addresses from right to left&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;测试代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;struct&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;XRAY&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;little_s_uchar_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BBBB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;big_s_uchar_hex:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_s_uchar_hex&lt;/span&gt;
&lt;span class="n"&gt;big_s_ushort_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;gt;HH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;big_s_ushort_hex:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_s_ushort_hex&lt;/span&gt;
&lt;span class="c"&gt;#output:&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;little_s_uchar_hex: [&amp;#39;0x58&amp;#39;, &amp;#39;0x52&amp;#39;, &amp;#39;0x41&amp;#39;, &amp;#39;0x59&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;little_s_ushort_hex: [&amp;#39;0x5258&amp;#39;, &amp;#39;0x5941&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_s_uchar_hex: [&amp;#39;0x58&amp;#39;, &amp;#39;0x52&amp;#39;, &amp;#39;0x41&amp;#39;, &amp;#39;0x59&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_s_ushort_hex: [&amp;#39;0x5852&amp;#39;, &amp;#39;0x4159&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;观察little_s_ushort_hex的值.由于笔者使用的是x86的机子(小端字节序).&lt;br /&gt;
little_s_ushort_hex在内存中的存储序列是:&lt;br /&gt;
0x52 0x58 0x59 0x41&lt;br /&gt;
即为AYXR(地址从右向左增长)&lt;br /&gt;
和wiki中的表示相符.&lt;/p&gt;
&lt;p&gt;再来看一个例子&lt;br /&gt;
将一个8位的字符串unpack成8个unsigned char,4个unsigned short,2个unsigned
int,1个unsigned long long&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python2&lt;/span&gt;
&lt;span class="c"&gt;# coding: utf-8&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;struct&lt;/span&gt;

&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;hjflyllx&amp;#39;&lt;/span&gt; &lt;span class="c"&gt;# my prefered string&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;string:&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;string_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;string_hex:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string_hex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;little_uchar_string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;BBBBBBBB&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_uchar_string:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_uchar_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;big_uchar_string_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_uchar_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_uchar_string_hex:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_uchar_string_hex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;little_ushort_string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HHHH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_ushort_string:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_ushort_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;big_ushort_string_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_ushort_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_ushort_string_hex:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_ushort_string_hex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;little_uint_string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;II&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_uint_string:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_uint_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;big_uint_string_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_uint_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_uint_string_hex:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_uint_string_hex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;little_ullong_string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Q&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_ullong_string:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_ullong_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;big_ullong_string_hex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;big_ullong_string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;big_ullong_string_hex:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;big_ullong_string_hex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;#output:&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="sd"&gt;string:hjflyllx&lt;/span&gt;
&lt;span class="sd"&gt;--------------------&lt;/span&gt;
&lt;span class="sd"&gt;string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x68&amp;#39;, &amp;#39;0x6a&amp;#39;, &amp;#39;0x66&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x79&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;--------------------uchar big and little endianness--------------------&lt;/span&gt;
&lt;span class="sd"&gt;little_uchar_string:&lt;/span&gt;
&lt;span class="sd"&gt;(104, 106, 102, 108, 121, 108, 108, 120)&lt;/span&gt;
&lt;span class="sd"&gt;little_uchar_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x68&amp;#39;, &amp;#39;0x6a&amp;#39;, &amp;#39;0x66&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x79&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_uchar_string:&lt;/span&gt;
&lt;span class="sd"&gt;(104, 106, 102, 108, 121, 108, 108, 120)&lt;/span&gt;
&lt;span class="sd"&gt;big_uchar_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x68&amp;#39;, &amp;#39;0x6a&amp;#39;, &amp;#39;0x66&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x79&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x6c&amp;#39;, &amp;#39;0x78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;--------------------ushort big and little endianness--------------------&lt;/span&gt;
&lt;span class="sd"&gt;little_ushort_string:&lt;/span&gt;
&lt;span class="sd"&gt;(27240, 27750, 27769, 30828)&lt;/span&gt;
&lt;span class="sd"&gt;little_ushort_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x6a68&amp;#39;, &amp;#39;0x6c66&amp;#39;, &amp;#39;0x6c79&amp;#39;, &amp;#39;0x786c&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_ushort_string:&lt;/span&gt;
&lt;span class="sd"&gt;(26730, 26220, 31084, 27768)&lt;/span&gt;
&lt;span class="sd"&gt;big_ushort_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x686a&amp;#39;, &amp;#39;0x666c&amp;#39;, &amp;#39;0x796c&amp;#39;, &amp;#39;0x6c78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;--------------------uint big and little endianness--------------------&lt;/span&gt;
&lt;span class="sd"&gt;little_uint_string:&lt;/span&gt;
&lt;span class="sd"&gt;(1818651240, 2020371577)&lt;/span&gt;
&lt;span class="sd"&gt;little_uint_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x6c666a68&amp;#39;, &amp;#39;0x786c6c79&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_uint_string:&lt;/span&gt;
&lt;span class="sd"&gt;(1751803500, 2037148792)&lt;/span&gt;
&lt;span class="sd"&gt;big_uint_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x686a666c&amp;#39;, &amp;#39;0x796c6c78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;--------------------ullong big and little endianness--------------------&lt;/span&gt;
&lt;span class="sd"&gt;little_ullong_string:&lt;/span&gt;
&lt;span class="sd"&gt;(8677429850801597032,)&lt;/span&gt;
&lt;span class="sd"&gt;little_ullong_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x786c6c796c666a68&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;big_ullong_string:&lt;/span&gt;
&lt;span class="sd"&gt;(7523938743555484792,)&lt;/span&gt;
&lt;span class="sd"&gt;big_ullong_string_hex:&lt;/span&gt;
&lt;span class="sd"&gt;[&amp;#39;0x686a666c796c6c78&amp;#39;]&lt;/span&gt;
&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;下面是一些表格,假设地址开始于100&lt;/p&gt;
&lt;p&gt;address   character   hex value&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dt&gt;100       h           0x68&lt;/dt&gt;
&lt;dt&gt;  101       j           0x6a&lt;/dt&gt;
&lt;dt&gt;  102       f           0x66&lt;/dt&gt;
&lt;dt&gt;  103       l           0x6c&lt;/dt&gt;
&lt;dt&gt;  104       y           0x79&lt;/dt&gt;
&lt;dt&gt;  105       l           0x6c&lt;/dt&gt;
&lt;dt&gt;  106       l           0x6c&lt;/dt&gt;
&lt;dt&gt;  107       x           0x78&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;string&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;address   characters   hex value&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dt&gt;100       jh           0x6a68&lt;/dt&gt;
&lt;dt&gt;  102       lf           0x6c66&lt;/dt&gt;
&lt;dt&gt;  104       ly           0x6c79&lt;/dt&gt;
&lt;dt&gt;  106       xl           0x786c&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;little ushort&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;address   characters   hex value&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dt&gt;100       lfjh         0x6c666a68&lt;/dt&gt;
&lt;dt&gt;  104       xlly         0x786c6c79&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;little uint&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;address   characters   hex value&lt;/p&gt;
&lt;hr /&gt;
&lt;dl&gt;
&lt;dt&gt;100       xllylfjh     0x786c6c796c666a68&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;little ulonglong&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;uchar那一项可以看出当内存单元大小是一个字节时,大端,小端字节序是一样的.  &lt;/p&gt;
&lt;p&gt;而其它多于1个字节的内存单元,可以看到&lt;strong&gt;相对应的项的字节顺序正好颠倒.但单元与单元之间的顺势都是递增的.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在我们来看其中一个人的回答:&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="s-Atom"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s-Atom"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;h&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;#39;01234567891011121314151617181920&amp;#39;&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;gt;IIIIIIII&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="s-Atom"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;gt;IIIIIIII&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s-Atom"&gt;::-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])[&lt;/span&gt;&lt;span class="s-Atom"&gt;::-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;#39;32107654019821114131615181710291&amp;#39;&lt;/span&gt;
&lt;span class="nv"&gt;Equivalent&lt;/span&gt; &lt;span class="nn"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="s-Atom"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s-Atom"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;lt;IIIIIIII&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="s-Atom"&gt;struct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;unpack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s-Atom"&gt;&amp;#39;&amp;gt;IIIIIIII&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s-Atom"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="s-Atom"&gt;&amp;#39;32107654019821114131615181710291&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/blockquote&gt;
&lt;p&gt;主要看其给出的相等实现:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt;&amp;gt;&amp;gt; struct.pack(&amp;#39;&amp;lt;IIIIIIII&amp;#39;, *struct.unpack(&amp;#39;&amp;gt;IIIIIIII&amp;#39;, h))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;为什么这个也能得出相同的结果?  &lt;/p&gt;
&lt;p&gt;采用不同的字节序进行unpack,pack一个字符串,就能得出单元内存内的字符串翻转.&lt;br /&gt;
你应该知道了为什么吧!&lt;/p&gt;
&lt;p&gt;同样假设开始内存地址是100,我们只分析一个内存单元(4个字节),&lt;/p&gt;
&lt;p&gt;见表:&lt;/p&gt;
&lt;p&gt;address   character&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;100       '0'
  101       '1'
  102       '2'
  103       '3'&lt;/p&gt;
&lt;p&gt;先是以大端字节序来unpack,读出的内容就是'0123'的内存表示的整数.  &lt;/p&gt;
&lt;p&gt;然后以小端来pack,小端是低位在前,高位在后,进行继续读,从103-100,读到的也就是'3210'了.&lt;br /&gt;
参考链接:&lt;br /&gt;
http://docs.python.org/2/library/struct.html&lt;br /&gt;
http://en.wikipedia.org/wiki/Endianness  &lt;/p&gt;
&lt;p&gt;http://stackoverflow.com/questions/20882693/what-does-this-piece-of-python-indexing-code-do&lt;/p&gt;</summary><category term="endianness"></category><category term="struct"></category></entry><entry><title>vps下lnmp配置</title><link href="http://blog.junfeng.ca/vpse4b88blnmpe9858de7bdae.html" rel="alternate"></link><updated>2014-01-10T00:37:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2014-01-10:vpse4b88blnmpe9858de7bdae.html</id><summary type="html">&lt;p&gt;换了hostigation的vps(128MB)之后，试了Debian，Ubuntu较新的版本都不行，总是提示说MySQL安装失败,最后不得已换上ubuntu
10.04勉强把mysql装上,但网站连接十次要有9次连不上。知道是肯定是那装的那些软件版本太低，bug太多。但还是没管它。&lt;/p&gt;
&lt;p&gt;最近得有空闲时间，决定把问题给解决。&lt;br /&gt;
备份整个数据库：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mysqldump -p -u --all-databases &amp;gt; all.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;备份归档wordpress目录,nginx配置文件目录&lt;br /&gt;
然后安装fedora 18&lt;/p&gt;
&lt;p&gt;安装mysqld&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum update #升级现有包
yum install mysql-server #mysqld
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装mysql-server&lt;br /&gt;
当启动mysqld时出现错误，无法启动。(折腾半天)&lt;br /&gt;
列出包里面的文件:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rpm -ql mysql-server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;日志文件在/var/log/mysqld.log&lt;br /&gt;
查看mysqld.log发现错误信息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vim /var/log/mysqld.log
InnoDB: Error: pthread_create returned 11
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;11 (EAGAIN)表示系统缺乏资源创建另一个线程。&lt;/strong&gt;&lt;br /&gt;
好像是明白了，&lt;br /&gt;
128MB的小内存VPS运行InnoDB直接运行不了。&lt;/p&gt;
&lt;p&gt;用my-small.cnf替换/etc/my.cnf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cp /usr/share/mysql/my-small.cnf /etc/my.cnf
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;同时修改my.cnf,在[mysqld]项下添加以下两行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;default-storage-engine=MYISAM
innodb=OFF
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;用MYISAM替换InnoDB。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;systemctl start mysqld  #没有错误
systemctl enable mysqld #开机自启动
/usr/bin/mysql_secure_installation #安全安装
echo &amp;quot;flush privileges;&amp;quot; | mysql -p -u root #登陆到mysql,刷新权限,不然将出现数据库连接错误.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装nginx&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install nginx
systemctl stop httpd
#and
yum erase httpd
systemctl start nginx
systemctl enable nginx
#恢复nginx配置文件,然后
systemctl reload nginx #配置信息生效
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;安装php(注意依赖)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yum install php-pecl-apc php-cli php-pear php-pdo php-mysqlnd php-pgsql php-pecl-mongo php-sqlite php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml php-fpm

systemctl start php-fpm
systemctl enable php-fpm
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;恢复备份的wordpress到/var/www/目录&lt;/p&gt;
&lt;p&gt;打开网站,一切正常。&lt;br /&gt;
迁移成功。&lt;br /&gt;
吐槽hostigation为什么没有archlinux的虚拟系统。&lt;/p&gt;</summary><category term="mysqld"></category><category term="vps(128MB)"></category></entry><entry><title>setjmp and longjmp</title><link href="http://blog.junfeng.ca/setjmp-and-longjmp.html" rel="alternate"></link><updated>2013-11-03T15:35:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-11-03:setjmp-and-longjmp.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://ww4.sinaimg.cn/large/894981ddtw1ea7v9y0qdsj20gx0stwj3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;全局,静态,易失变量不受优化影响保存在存储器中,存放在存储器中的变量具有调用longjmp()时的值;进行优化后自动,寄存器变量保存寄存器中,CPU和浮点寄存器中的值恢复为调用setjmp()时的值.不进行优化,五种变量全部保存在存储器中.(来自APUE)&lt;/p&gt;</summary><category term="nolocaljmp"></category></entry><entry><title>file hole</title><link href="http://blog.junfeng.ca/file-hole.html" rel="alternate"></link><updated>2013-11-03T14:48:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-11-03:file-hole.html</id><summary type="html">&lt;p&gt;当lseek设置文件偏移量超过文件尾端,并写了某些数据后,就会产生文件空洞.&lt;/p&gt;
&lt;p&gt;文件长度st_size:&lt;/p&gt;
&lt;p&gt;文件中的空洞会影响文件的长度,read读含有空洞的文件时,会把空洞填0.read读空洞也会读到0值.&lt;/p&gt;
&lt;p&gt;文件占用磁盘大小:&lt;/p&gt;
&lt;p&gt;文件在磁盘中是以4k的逻辑块进行存储的.每个文件占用的磁盘大小都是4k的整数倍.&lt;/p&gt;
&lt;p&gt;write()写,实际内核是一次写4k数据到磁盘的.文件一般是块缓冲的.物理写大小为4k.&lt;/p&gt;
&lt;p&gt;空洞占用的物理空间最多不超过2个逻辑块(8k).&lt;/p&gt;
&lt;p&gt;若空洞将要使文件磁盘大小增长多于１个逻辑块大小时,将进行取余.&lt;/p&gt;</summary><category term="file hole"></category></entry><entry><title>Teiba Cookie</title><link href="http://blog.junfeng.ca/teiba-cookie.html" rel="alternate"></link><updated>2013-10-28T14:00:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-10-28:teiba-cookie.html</id><summary type="html">&lt;p&gt;首先访问&lt;a href="http://tieba.baidu.com/"&gt;http://tieba.baidu.com/&lt;/a&gt;,登陆要勾选记住我的登陆状态(即自动登录),这样Cookie才能长期有效.&lt;/p&gt;
&lt;p&gt;对于Chrome浏览器:&lt;/p&gt;
&lt;p&gt;右键审查元素,打开开发者工具,选择Network,刷新贴吧首页.然后上滑找到tieba.baidu.com那一项,点击headers,在Request
Headers中找到Cookie那一项,很长的一串字符串.复制到&lt;a href="http://signalltiebas.duapp.com/settings"&gt;http://signalltiebas.duapp.com/settings&lt;/a&gt;页面中的Cookie框中提交就可以了.&lt;/p&gt;
&lt;p&gt;其它浏览器类似.&lt;/p&gt;</summary><category term="signalltiebas"></category></entry><entry><title>JavaScript closure</title><link href="http://blog.junfeng.ca/closure-of-programming-languages.html" rel="alternate"></link><updated>2013-10-23T16:35:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-10-23:closure-of-programming-languages.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;a closure (also lexical closure or function closure) is a function or
reference to a function together with a referencing environment—a
table storing a reference to each of the non-local variables (also
called free variables or upvalues) of that function.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Closure_(computer_science)"&gt;http://en.wikipedia.org/wiki/Closure_(computer_science)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The initial values of the non-local variables depends on not where
    the closure define,but where the closure call.&lt;/li&gt;
&lt;li&gt;Referencing environment ,not copy.Meaning when you call a variable
    references to a closure twice,the environment maybe change.&lt;/li&gt;
&lt;li&gt;Every time you hold a returened closure using a varible
    will initialize it's referencing enviroment.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div&gt;

var name="Window";

&lt;/div&gt;

&lt;div&gt;

var Top={

&lt;/div&gt;

&lt;div&gt;

    name:"top",

&lt;/div&gt;

&lt;div&gt;

    Inner:{

&lt;/div&gt;

&lt;div&gt;

        name:"inner",

&lt;/div&gt;

&lt;div&gt;

        getName:function(){

&lt;/div&gt;

&lt;div&gt;

            var that=this;

&lt;/div&gt;

&lt;div&gt;

            var i=0;//note1

&lt;/div&gt;

&lt;div&gt;

            function increase(){

&lt;/div&gt;

&lt;div&gt;

                var rt="this binding:"+this.name+"\\n\\n"+"number
i:"+i;//this binding

&lt;/div&gt;

&lt;div&gt;

                i++;

&lt;/div&gt;

&lt;div&gt;

                return rt;

&lt;/div&gt;

&lt;div&gt;

            };

&lt;/div&gt;

&lt;div&gt;

            i++;//note1

&lt;/div&gt;

&lt;div&gt;

            return increase;

&lt;/div&gt;

&lt;div&gt;

        }

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

};

&lt;/div&gt;

&lt;div&gt;

var closure1=Top.Inner.getName();

&lt;/div&gt;

&lt;div&gt;

alert("first call closure1"+"\\n"+closure1());//note1

&lt;/div&gt;

&lt;div&gt;

var closure2=Top.Inner.getName();

&lt;/div&gt;

&lt;div&gt;

alert("first call closure2"+"\\n"+closure2()); //note1,note3

&lt;/div&gt;

&lt;div&gt;

alert("againe call closure1"+"\\n"+closure1());//note2

&lt;/div&gt;

&lt;div&gt;

alert("againe call closure2"+"\\n"+closure2());//note2

&lt;/div&gt;

&lt;div&gt;

var closure21=closure2;

&lt;/div&gt;

&lt;div&gt;

alert("first call closure21"+"\\n"+closure3());//assign another varible
has referencing enviroment

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

References
----------

&lt;http://www.ruanyifeng.com/blog/2009/08/learning_javascript_closures.html&gt;

&lt;http://coolshell.cn/articles/6731.html&gt;

&lt;http://en.wikipedia.org/wiki/Closure_(computer_science)&gt;

&lt;/div&gt;</summary><category term="closure"></category><category term="JavaScript"></category></entry><entry><title>Ajax初级使用</title><link href="http://blog.junfeng.ca/ajaxe5889de7baa7e4bdbfe794a8.html" rel="alternate"></link><updated>2013-10-15T13:03:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-10-15:ajaxe5889de7baa7e4bdbfe794a8.html</id><summary type="html">&lt;p&gt;当一个页面有多个地方需要使用Ajax与服务器通信时，应该尽量把发送Ajax封装成一个函数，在这个函数里面处理各种不同的请求．这样能适当减少代码的重复.&lt;/p&gt;
&lt;p&gt;Ajax使用流程,
new XMLHttpRequest(),open(),send(),然后处理响应，根据响应内容判断，给予用户提示．大体就是这种流程．&lt;/p&gt;</summary><category term="Ajax"></category></entry><entry><title>the variable scope of list comprehensions</title><link href="http://blog.junfeng.ca/the-variable-scope-of-list-comprehensions.html" rel="alternate"></link><updated>2013-10-14T23:34:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-10-14:the-variable-scope-of-list-comprehensions.html</id><summary type="html">&lt;p&gt;When using list comprehensions,the scope of temp variable doesn't
express as you expect.&lt;/p&gt;
&lt;p&gt;For example&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 2.7.5 (default, May 15 2013, 22:43:36) [MSC v.1500 32 bit
(Intel)] on win32&lt;br /&gt;
 Type "copyright", "credits" or "license()" for more information.&lt;br /&gt;
 &gt;&gt;&gt; L=[i for i in range(10)]&lt;br /&gt;
 &gt;&gt;&gt; print i&lt;br /&gt;
 9&lt;br /&gt;
 &gt;&gt;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and the output is 9,But maybe you shouldn't want this.&lt;/p&gt;
&lt;p&gt;If you have variable i in the toper scope.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&gt;&gt;&gt; i=2&lt;br /&gt;
 &gt;&gt;&gt; L=[i for i in range(10)]&lt;br /&gt;
 &gt;&gt;&gt; print i&lt;br /&gt;
 9&lt;br /&gt;
 &gt;&gt;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;the  value of i was overwritten。&lt;/p&gt;
&lt;p&gt;Happily,at Python 3 . the temp i in list comprehensions is local
variable.When the list comprehensions finished,the variables
were disappear.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Python 3.3.2 (v3.3.2:d047928ae3f6, May 16 2013, 00:03:43) [MSC v.1600
32 bit (Intel)] on win32&lt;br /&gt;
 Type "copyright", "credits" or "license()" for more information.&lt;br /&gt;
 &gt;&gt;&gt; L=[i for i in range(10)]&lt;br /&gt;
 &gt;&gt;&gt; print (i)&lt;br /&gt;
 Traceback (most recent call last):&lt;br /&gt;
 File "\&amp;lt;pyshell#1&gt;", line 1, in \&amp;lt;module&gt;&lt;br /&gt;
 print (i)&lt;br /&gt;
 NameError: name 'i' is not defined&lt;br /&gt;
 &gt;&gt;&gt; i=2&lt;br /&gt;
 &gt;&gt;&gt; L=[i for i in range(10)]&lt;br /&gt;
 &gt;&gt;&gt; print (i)&lt;br /&gt;
 2&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="Python"></category><category term="variable scope"></category></entry><entry><title>JavaScript实践初步</title><link href="http://blog.junfeng.ca/javascripte5ae9ee8b7b5e5889de6ada5.html" rel="alternate"></link><updated>2013-09-18T00:19:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-09-18:javascripte5ae9ee8b7b5e5889de6ada5.html</id><summary type="html">&lt;p&gt;\&amp;lt;\&amp;lt;JavaScript高级程序设计&gt;&gt;也看了大半本了,但却发现不会写JS程序,对界面设计什么的总是有一种畏惧的心理,最近这几天迷上了Chrome_Extensions开发了,想做一个插件来着．顺便练习了下JS编程,补充一下苍白的实践经验．&lt;/p&gt;
&lt;p&gt;虽然一个晚上,options.html页面都没做完,但还是学到了些知识．本来这些关于代码的没有必要写出来的，但今天晚上和JS作战,领悟了些许编程思想,觉得还是值得分享的.&lt;/p&gt;
&lt;p&gt;关于模块化编程有了些许理解,它不在是教科书中的古板,毫无印象的概念.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个函数,一个类,一个文件都可以说是模块,晚上某一特定功能.&lt;/li&gt;
&lt;li&gt;模块与模块之间界限要清楚,一个模块不能做另一个模块的事情.不然的话,有的受的,逻辑混乱,思维不顺,无休止的调试.&lt;/li&gt;
&lt;li&gt;关于JavaScript编程,页面显示代码尽量只根据页面的结构来动态显示页面,数据保存代码做它自己的事．符合上一条规则.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一个tab空格健无意间在parent的childNodes插入了一个Text
Node.造成至少有半个小时的调试.&lt;/p&gt;
&lt;p&gt;突然发现学DOM的一个好工具:&lt;/p&gt;
&lt;p&gt;Chromium自带的开发者工具看某个element的属性比www.w3schools.com的JavaScript在线教程舒服多了.&lt;/p&gt;</summary><category term="JavaScript"></category></entry><entry><title>2&gt;&amp;1</title><link href="http://blog.junfeng.ca/21.html" rel="alternate"></link><updated>2013-09-13T10:43:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-09-13:21.html</id><summary type="html">&lt;p&gt;&lt;span
style="font-size: 1rem; line-height: 1.714285714;"&gt;在shell中,digit1 &gt;&amp;amp;
digit2表示将描述符digit1重定向到描述符digit2的同一文件.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;那么:&lt;/p&gt;
&lt;p&gt;./a.out &gt; out 2&gt;&amp;amp;1&lt;/p&gt;
&lt;p&gt;将标准输出和标准出错输出重定向到out文件&lt;/p&gt;
&lt;p&gt;./a.out  2&gt;&amp;amp;1 &gt; out&lt;br /&gt;
将标准出错输出重定向到标准输出，标准输出重定向到out文件。&lt;/p&gt;
&lt;div&gt;

&lt;/div&gt;

&lt;p&gt;两者功能并不相同。&lt;/p&gt;
&lt;p&gt;为什么顺序不一样产生的效果就不一样呢？&lt;/p&gt;
&lt;p&gt;实质上shell解释器是在内部调用dup2()类似的函数来实现重定向的．&lt;/p&gt;
&lt;p&gt;因为shell从左向右解释命令.&lt;/p&gt;
&lt;p&gt;对于 ./a.out &gt; out 2&gt;&amp;amp;1&lt;/p&gt;
&lt;p&gt;先调用 dup2(out,STDOUT_FILENO);//out,STDOUT_FILENO指向同一文件表项&lt;/p&gt;
&lt;p&gt;然后再是
dup2(STDOUT_FILENO,STDERR_FILENO);//STDERR_FILENO,STDOUT_FILENO指向同一文件表项&lt;/p&gt;
&lt;p&gt;而./a.out  2&gt;&amp;amp;1 &gt; out&lt;/p&gt;
&lt;p&gt;先是 dup2(STDOUT_FILENO,STDERR_FILENO);//标准出错指向原来的标准输出&lt;/p&gt;
&lt;p&gt;再是 dup2(out,STDOUT_FILENO);//标准输出重定向到out文件.&lt;/p&gt;
&lt;p&gt;通俗的说,上面的过程类似于有a,b,c三个变量.&lt;/p&gt;
&lt;p&gt;a=c,b=a;//a==b==c 和 b=a,a=c;//b!=c==a当然不一样了.&lt;/p&gt;
&lt;p&gt;实践:&lt;/p&gt;
&lt;p&gt;./a.out \&amp;lt; in 将标准输入重定向到in文件，即程序从in文件中读取数据.&lt;/p&gt;
&lt;p&gt;在使用mysql命令行程序时,可以先把SQL语句写入文件中,然后利用重定向输入,避免了不方便的输入.(Windows下cmd也支持)&lt;/p&gt;
&lt;p&gt;当在无X环境下查看程序输出时,若输出数据较多，一屏无法显示,此时可以将标准输出重定向到文件中,然后仔细查看.&lt;/p&gt;
&lt;p&gt;附测试程序:&lt;/p&gt;
&lt;p&gt;#include\&amp;lt;unistd.h&gt;&lt;br /&gt;
#include\&amp;lt;stdio.h&gt;&lt;br /&gt;
#include\&amp;lt;string.h&gt;&lt;br /&gt;
#define BUFFSIZE 4096&lt;br /&gt;
int main()&lt;br /&gt;
{&lt;br /&gt;
int n;&lt;br /&gt;
char buf[BUFFSIZE];&lt;br /&gt;
const char out[]="STDOUT:";&lt;br /&gt;
const char err[]="STDERR:";&lt;br /&gt;
n=read(STDIN_FILENO,buf,BUFFSIZE);//read from stdin&lt;br /&gt;
if (n&gt;0)&lt;br /&gt;
{&lt;br /&gt;
write(STDOUT_FILENO,out,strlen(out));&lt;br /&gt;
write(STDOUT_FILENO,buf,n);//write to stdout&lt;br /&gt;
write(STDERR_FILENO,err,strlen(err));&lt;br /&gt;
write(STDERR_FILENO,buf,n);//write to stderr&lt;br /&gt;
}&lt;br /&gt;
return 0;&lt;br /&gt;
}&lt;/p&gt;</summary><category term="2&amp;gt;&amp;amp;1"></category></entry><entry><title>file descriptor</title><link href="http://blog.junfeng.ca/file-descriptor.html" rel="alternate"></link><updated>2013-09-07T11:39:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-09-07:file-descriptor.html</id><summary type="html">&lt;p&gt;和文件描述符有关的函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open&lt;/li&gt;
&lt;li&gt;close&lt;/li&gt;
&lt;li&gt;dup&lt;/li&gt;
&lt;li&gt;dup2&lt;/li&gt;
&lt;li&gt;fcntl&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;文件描述符为int整型变量，范围0-OPEN_MAX;&lt;/p&gt;
&lt;p&gt;在linux下OPEN_MAX未在limits.h下定义，使用sysconf(_SC_OPEN_MAX)获得其值．&lt;/p&gt;
&lt;p&gt;open打开文件返回文件描述符没什么好说的．&lt;/p&gt;
&lt;p&gt;close()关闭文件描述符，注意当有多个文件描述符指向同一文件表项时，必须close所有与之关联的描述符才能真正关闭文件．&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When all file descriptors associated with an open file description
have been closed, the open file  description shall be freed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时无法再对文件进行更改．&lt;/p&gt;
&lt;p&gt;dup(),dup2()复制现存的文件描述符，在内核数据中一个新的文件描述符被创建．当总数达到OPEN_MAX时，进程无法再打开文件．&lt;/p&gt;
&lt;p&gt;当cmd=F_DUPFD时 fcntl和dup,dup2功能类似．&lt;/p&gt;
&lt;p&gt;附测试程序：&lt;/p&gt;
&lt;p&gt;#include\&amp;lt;unistd.h&gt;&lt;br /&gt;
#include\&amp;lt;stdio.h&gt;&lt;br /&gt;
#include\&amp;lt;limits.h&gt;&lt;br /&gt;
#include\&amp;lt;fcntl.h&gt;&lt;br /&gt;
#include\&amp;lt;errno.h&gt;&lt;br /&gt;
int main()&lt;br /&gt;
{&lt;br /&gt;
int i,f,open_max;&lt;br /&gt;
open_max=sysconf(_SC_OPEN_MAX);&lt;br /&gt;
for (i=3;i\&amp;lt;open_max;++i)&lt;br /&gt;
dup(STDOUT_FILENO);&lt;br /&gt;
// close(open_max-1);&lt;br /&gt;
f=open("test",O_WRONLY|O_CREAT,S_IRUSR|S_IWUSR);&lt;br /&gt;
if (errno==EMFILE)&lt;br /&gt;
printf("ERROR\n");&lt;br /&gt;
else&lt;br /&gt;
printf("%d\n",f);&lt;br /&gt;
return 0;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;</summary><category term="文件描述符"></category></entry><entry><title>丢车贼</title><link href="http://blog.junfeng.ca/e4b8a2e8bda6e8b4bc.html" rel="alternate"></link><updated>2013-07-24T06:37:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-07-24:e4b8a2e8bda6e8b4bc.html</id><summary type="html">&lt;p&gt;车丢了，心情极度郁闷.好吧，怪我，忘记锁上了.老妈可是刚买没俩月的车啊.我还真想偷别人一辆，无奈技术水平低，也就作罢.家里知道我丢了车之后，地位急转直下
,虽说不让我自己买,但也是各种说我&lt;strong&gt;.&lt;/strong&gt;又不能辩驳什么，是自己真的犯了错.不过，他们认为我就做不好事情，说我，以后不注意，会丢更多的东西.好吧，被他们说的差一点感觉自己矬了，要不是咱心理素质高，自信心强.哎，丢车确实感觉挺窝囊的.&lt;/p&gt;</summary><category term="丢车贼"></category></entry><entry><title>感动</title><link href="http://blog.junfeng.ca/e6849fe58aa8.html" rel="alternate"></link><updated>2013-07-20T19:19:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-07-20:e6849fe58aa8.html</id><summary type="html">&lt;p&gt;感动一个人容易，被一个人感动却不那么容易．&lt;/p&gt;
&lt;p&gt;感动你是我的权利和义务．&lt;/p&gt;
&lt;p&gt;反过来却不是．&lt;/p&gt;
&lt;p&gt;貌似我又矫情了．&lt;/p&gt;
&lt;p&gt;竟然让别人猜起喜欢什么来了．&lt;/p&gt;</summary><category term="感动"></category></entry><entry><title>天使</title><link href="http://blog.junfeng.ca/e5a4a9e4bdbf.html" rel="alternate"></link><updated>2013-07-06T00:24:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-07-06:e5a4a9e4bdbf.html</id><summary type="html">&lt;p&gt;每个人都有一个守护天使，&lt;/p&gt;
&lt;p&gt;但你的守护天使却睡着了，&lt;/p&gt;
&lt;p&gt;我想摇醒他，&lt;/p&gt;
&lt;p&gt;但他睡得太死了。&lt;/p&gt;
&lt;p&gt;于是，我对上帝说，&lt;/p&gt;
&lt;p&gt;我想做你的守护天使，&lt;/p&gt;
&lt;p&gt;上帝同意了。&lt;/p&gt;
&lt;p&gt;你很高兴，&lt;/p&gt;
&lt;p&gt;因为你终于有了守护你的天使。&lt;/p&gt;
&lt;p&gt;但这个天使比较笨，&lt;/p&gt;
&lt;p&gt;没有一点经验，&lt;/p&gt;
&lt;p&gt;他只想能尽他所能对你好，&lt;/p&gt;
&lt;p&gt;但有时反而适得其反。&lt;/p&gt;
&lt;p&gt;不过他不会放弃的，&lt;/p&gt;
&lt;p&gt;他会好好吸取经验。&lt;/p&gt;
&lt;p&gt;不让你伤心，难过。&lt;/p&gt;
&lt;p&gt;我一直爱着你。&lt;/p&gt;</summary><category term="天使"></category></entry><entry><title>Jugs</title><link href="http://blog.junfeng.ca/jugs.html" rel="alternate"></link><updated>2013-05-30T00:05:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-30:jugs.html</id><summary type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
pre { font-family: monospace; color: #000000; background-color: #ffffff; } body { font-family: monospace; color: #000000; background-color: #ffffff; } .Type { color: #2e8b57; font-weight: bold; } .Statement { color: #804040; font-weight: bold; } .Constant { color: #ff00ff; } .PreProc { color: #a020f0; } --&gt;&lt;br&gt;&lt;/br&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;ZOJ Problem Set - 1005 Jugs  &lt;/p&gt;
&lt;p&gt;题目：&lt;a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1005"&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;Ca&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;work&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fill B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ca&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fill A&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pour A B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;fill A&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Ca&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;empty B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pour A B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;Cb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pour A B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;pour A B&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;success&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Ca&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Cb&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;work&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;回溯，深度优先搜索，直接死循环了。  &lt;/p&gt;
&lt;p&gt;然后搜到了互质数的一个性质。貌似广度优先搜索也可以，没试，层次比较深的话，估计会超出内存限制。  &lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://www.cnblogs.com/phinecos/archive/2008/09/21/1295472.html"&gt;链接&lt;/a&gt;&lt;/p&gt;</summary><category term="互质数"></category></entry><entry><title>Anagrams by Stack</title><link href="http://blog.junfeng.ca/anagrams-by-stack.html" rel="alternate"></link><updated>2013-05-29T23:40:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-29:anagrams-by-stack.html</id><summary type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
pre { font-family: monospace; color: #000000; background-color: #ffffff; } body { font-family: monospace; color: #000000; background-color: #ffffff; } .Special { color: #6a5acd; } .Comment { color: #0000ff; } .Type { color: #2e8b57; font-weight: bold; } .Statement { color: #804040; font-weight: bold; } .Constant { color: #ff00ff; } .PreProc { color: #a020f0; } --&gt;&lt;br&gt;&lt;/br&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;ZOJ Problem Set - 1004 Anagrams by Stack  &lt;/p&gt;
&lt;p&gt;题目：&lt;a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1004"&gt;来源&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#define N 100&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//原word&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//目标word&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;pop_push&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//栈操作序列&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;stackf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//保存栈中栈中当前情况&lt;/span&gt;
&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//保存生成word&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//递归出所有的进栈出栈操作&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//边界条件&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//s指向当前要进栈的字母，f指向栈顶，o指向out中当前可放位置&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pop_push&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//不合法的进栈，跳出&lt;/span&gt;
                &lt;span class="n"&gt;stackf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//不合法的出栈，跳出&lt;/span&gt;
                &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;stackf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//输出&lt;/span&gt;
                &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pop_push&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;pop_push&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//首先进栈&lt;/span&gt;
    &lt;span class="n"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//递归到下一层&lt;/span&gt;
    &lt;span class="n"&gt;pop_push&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sc"&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//退回，改成出栈&lt;/span&gt;
    &lt;span class="n"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;//下一层&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;[&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;]&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;递归出所有栈操作，排除不合法的。找到满足条件的操作序列。&lt;/p&gt;</summary><category term="stack"></category></entry><entry><title>Crashing Balloon</title><link href="http://blog.junfeng.ca/crashing-balloon.html" rel="alternate"></link><updated>2013-05-24T17:15:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-24:crashing-balloon.html</id><summary type="html">&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
pre { font-family: monospace; color: #000000; background-color: #ffffff; } body { font-family: monospace; color: #000000; background-color: #ffffff; } .Comment { color: #0000ff; } .Type { color: #2e8b57; font-weight: bold; } .Statement { color: #804040; font-weight: bold; } .Constant { color: #ff00ff; } .PreProc { color: #a020f0; } --&gt;&lt;br&gt;&lt;/br&gt;
--&gt;&lt;/style&gt;

&lt;p&gt;ZOJ Problem Set - 1003 Crashing Balloon&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include&amp;lt;iostream&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&amp;lt;cstring&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//记录1~100的数的使用与否。&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//记录数a的因式足迹以便回溯&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//记录数b的...&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;CheckMax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//类似于求解b的因式&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="n"&gt;bf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Checkab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//回溯法求出b的所有因式。&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//初始状态&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//第k个因子&lt;/span&gt;
                    &lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//判断第k+1个，从i+1开始&lt;/span&gt;
                    &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;/=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;//找到b的一个因式&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CheckMax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//回溯到第k-1个&lt;/span&gt;
            &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//标记b能被分解&lt;/span&gt;
            &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//b回溯&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;101&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//第k个因子没找到，回溯&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="c1"&gt;//解除占用&lt;/span&gt;
            &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;*=&lt;/span&gt;&lt;span class="n"&gt;af&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;span class="c1"&gt;//b回溯到上一状态&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cin&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;memset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Checkab&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;
            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;两个函数似乎可以合成一个。算了，AC了就行。算是用了一下回溯思想。&lt;/p&gt;</summary><category term="ZOJ1003"></category></entry><entry><title>话不对思维</title><link href="http://blog.junfeng.ca/e8af9de4b88de5afb9e6809de7bbb4.html" rel="alternate"></link><updated>2013-05-22T21:01:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-22:e8af9de4b88de5afb9e6809de7bbb4.html</id><summary type="html">&lt;p&gt;“什么面？”&lt;br /&gt;
“牛肉面.”&lt;br /&gt;
“辣椒要不？”&lt;br /&gt;
“少放点辣椒.”&lt;br /&gt;
“多放？”&lt;br /&gt;
“嗯.”&lt;br /&gt;
于是他就弄了一大勺辣椒酱.&lt;br /&gt;
我累那个后悔啊～&lt;/p&gt;</summary></entry><entry><title>Fire Net</title><link href="http://blog.junfeng.ca/fire-net.html" rel="alternate"></link><updated>2013-05-20T20:24:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-20:fire-net.html</id><summary type="html">&lt;p&gt;ZOJ Problem Set - 1002&lt;/p&gt;
&lt;style type="text/css"&gt;&lt;!--&lt;br /&gt;
pre { font-family: monospace; color: #000000; background-color: #ffffff; } body { font-family: monospace; color: #000000; background-color: #ffffff; } .PreProc { color: #a020f0; } .Special { color: #6a5acd; } .Constant { color: #ff00ff; } .Identifier { color: #008080; } .Statement { color: #804040; font-weight: bold; } --&gt;&lt;br&gt;&lt;/br&gt;
--&gt;&lt;/style&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;def Input(L,n):
        if type(L)==list:
                for i in range(0,n):
                        L.append([t for t in sys.stdin.readline().rstrip(&amp;#39;\n&amp;#39;)])
def place_bh(L,row,col,n):
        if L[row][col]==&amp;#39;X&amp;#39;:
                return False
        j=n-1
        while(j&amp;gt;=0):
                if j==col:
                        j-=1
                        continue
                if L[row][j]==&amp;#39;X&amp;#39;:
                        break
                if L[row][j]==&amp;#39;O&amp;#39;:
                        return False
                j-=1

        k=n-1
        while(k&amp;gt;=0):
                if k==row:
                        k-=1
                        continue
                if L[k][col]==&amp;#39;X&amp;#39;:
                        break
                if L[k][col]==&amp;#39;O&amp;#39;:
                        return False
                k-=1

        return True

def FindMax(L,k,n):
        curnum=0
        j=k
        while j&amp;lt;k+n*n:
                if j&amp;gt;=n*n:
                        z=j-n*n
                else:
                        z=j

                row=z/n
                col=z%n
                if place_bh(L,row,col,n):
                        L[row][col]=&amp;#39;O&amp;#39;
                        curnum+=1

                j+=1

        return curnum

def main():
        while True:
                n=int(sys.stdin.readline().rstrip(&amp;#39;\n&amp;#39;))
                if n==0:
                        break

                L=[]
                maxn=0
                Input(L,n)
                for k in range(0,n*n):
                        t=copy.deepcopy(L)
                        curn=FindMax(t,k,n)
                        if maxn&amp;lt;curn:
                                maxn=curn

                print maxn

if __name__==&amp;#39;__main__&amp;#39;:
        import copy
        import sys
        main()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;突然发现我没有用回溯法哎。&lt;/p&gt;
&lt;p&gt;Python做算法可以偷懒。呵呵&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="http://www.cnblogs.com/phinecos/archive/2008/09/18/1293017.html"&gt;链接&lt;/a&gt;&lt;/p&gt;</summary><category term="ZOJ1002"></category></entry><entry><title>8皇后问题</title><link href="http://blog.junfeng.ca/8e79a87e5908ee997aee9a298.html" rel="alternate"></link><updated>2013-05-19T01:28:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-19:8e79a87e5908ee997aee9a298.html</id><summary type="html">&lt;p&gt;传说中的问题。&lt;/p&gt;
&lt;p&gt;传说中的算法：回溯法&lt;/p&gt;
&lt;p&gt;Python实现：&lt;/p&gt;
&lt;div&gt;

def place\_queen(l):

&lt;/div&gt;

&lt;div&gt;

    if type(l)==list:

&lt;/div&gt;

&lt;div&gt;

        tq=l[-1]

&lt;/div&gt;

&lt;div&gt;

        k=len(l)

&lt;/div&gt;

&lt;div&gt;

        for i,iq in enumerate(l[0:-1],start=1):

&lt;/div&gt;

&lt;div&gt;

            if iq==tq or abs(iq-tq)==abs(i-k):

&lt;/div&gt;

&lt;div&gt;

                return False

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

        return True

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

def output\_queens(number,l,n):

&lt;/div&gt;

&lt;div&gt;

    print "Solution:%d" % number

&lt;/div&gt;

&lt;div&gt;

    for i in range(1,n+1):

&lt;/div&gt;

&lt;div&gt;

        for j in range(1,n+1):

&lt;/div&gt;

&lt;div&gt;

            if j==l[i-1]:

&lt;/div&gt;

&lt;div&gt;

                print "1   ",

&lt;/div&gt;

&lt;div&gt;

            else:

&lt;/div&gt;

&lt;div&gt;

                print "0   ",

&lt;/div&gt;

&lt;div&gt;

        print ''

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

def n\_queens(l,n):

&lt;/div&gt;

&lt;div&gt;

    nCount=0

&lt;/div&gt;

&lt;div&gt;

    l.append(0)

&lt;/div&gt;

&lt;div&gt;

    while(len(l)):

&lt;/div&gt;

&lt;div&gt;

        l[-1]=l[-1]+1

&lt;/div&gt;

&lt;div&gt;

        while(l[-1]\&lt;=n and not place\_queen(l)):

&lt;/div&gt;

&lt;div&gt;

            l[-1]+=1

&lt;/div&gt;

&lt;div&gt;

        if l[-1]\&lt;=n:

&lt;/div&gt;

&lt;div&gt;

            if len(l)==n:

&lt;/div&gt;

&lt;div&gt;

                nCount+=1

&lt;/div&gt;

&lt;div&gt;

                output\_queens(nCount,l,n)

&lt;/div&gt;

&lt;div&gt;

            else:

&lt;/div&gt;

&lt;div&gt;

                 l.append(0)

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

        else:

&lt;/div&gt;

&lt;div&gt;

            l.pop()

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    return nCount

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

def main():

&lt;/div&gt;

&lt;div&gt;

    n=12

&lt;/div&gt;

&lt;div&gt;

    l=[]

&lt;/div&gt;

&lt;div&gt;

    nCount=n\_queens(l,n)

&lt;/div&gt;

&lt;div&gt;

    print "There are %d solutions!" % nCount

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

if \_\_name\_\_=='\_\_main\_\_':

&lt;/div&gt;

&lt;div&gt;

    import time

&lt;/div&gt;

&lt;div&gt;

    start=time.clock()

&lt;/div&gt;

&lt;div&gt;

    main()

&lt;/div&gt;

&lt;div&gt;

    end=time.clock()

&lt;/div&gt;

&lt;div&gt;

    print "Run time: %f seconds " % (end-start)

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;p&gt;话说第一次感觉Python有点慢了。&lt;/p&gt;
&lt;p&gt;当n=8时命令行下需要0.852626s，IDLE运行则需要16.468123s。而当n=12命令行下时需要266.441883s，就不在IDLE下运行了。&lt;/p&gt;
&lt;p&gt;而C代码呢。n=8时，0.188s；n=12时，10.674s。&lt;/p&gt;
&lt;p&gt;C真的快的如此彪悍。&lt;/p&gt;
&lt;p&gt;附C代码：  &lt;/p&gt;
&lt;p&gt;出处：&lt;a href="http://blog.csdn.net/livelylittlefish/article/details/2141142"&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;

\#include \&lt;stdio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include \&lt;stdlib.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include \&lt;math.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include \&lt;conio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

\#define MAXNUMBER 20

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

//判断当前得到的解向量是否满足问题的解

&lt;/div&gt;

&lt;div&gt;

bool place\_queen(int x[],int k)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

    int i;

&lt;/div&gt;

&lt;div&gt;

    for(i=1;i\&lt;k;i++)

&lt;/div&gt;

&lt;div&gt;

    {

&lt;/div&gt;

&lt;div&gt;

        if((x[i]==x[k]) || (abs(x[i]-x[k])==abs(i-k)))

&lt;/div&gt;

&lt;div&gt;

            return false;

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    return true;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

//将结果简单信息打印到屏幕

&lt;/div&gt;

&lt;div&gt;

void output\_queens(int x[],int n)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

    for(int i=1;i\&lt;=n;i++)

&lt;/div&gt;

&lt;div&gt;

        printf("%3d",x[i]);

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    printf("\\n");

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

//将结果详细信息写入文件

&lt;/div&gt;

&lt;div&gt;

void output\_queens(FILE \*fp,int number,int x[],int n)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

    fprintf(fp,"solution %d: ",number);

&lt;/div&gt;

&lt;div&gt;

    for(int i=1;i\&lt;=n;i++)

&lt;/div&gt;

&lt;div&gt;

    {

&lt;/div&gt;

&lt;div&gt;

        for(int j=1;j\&lt;=n;j++)

&lt;/div&gt;

&lt;div&gt;

        {

&lt;/div&gt;

&lt;div&gt;

            if(j==x[i])

&lt;/div&gt;

&lt;div&gt;

                fprintf(fp,"1  ");

&lt;/div&gt;

&lt;div&gt;

            else

&lt;/div&gt;

&lt;div&gt;

                fprintf(fp,"0  ");

&lt;/div&gt;

&lt;div&gt;

        }

&lt;/div&gt;

&lt;div&gt;

        fprintf(fp,"\\n");

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

    fprintf(fp,"\\n");

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

/\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*

&lt;/div&gt;

&lt;div&gt;

 \*  n后问题求解

&lt;/div&gt;

&lt;div&gt;

 \*  input  : n, the number of queens

&lt;/div&gt;

&lt;div&gt;

 \*  output : the vector of solution, X

&lt;/div&gt;

&lt;div&gt;

 \*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*\*/

&lt;/div&gt;

&lt;div&gt;

int n\_queens(FILE \*fp,int n,int x[])

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

    int nCount=0;    //解个数

&lt;/div&gt;

&lt;div&gt;

    int k=1;        //先处理第1个皇后

&lt;/div&gt;

&lt;div&gt;

    x[1]=0;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    while(k\&gt;0)

&lt;/div&gt;

&lt;div&gt;

    {

&lt;/div&gt;

&lt;div&gt;

        x[k]=x[k]+1;//在当前列加1的位置开始搜索

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

        while(x[k]\&lt;=n &amp;&amp; !place\_queen(x,k))  
 //当前列位置是否满足条件

&lt;/div&gt;

&lt;div&gt;

            x[k]=x[k]+1;    //不满足,继续搜索下一列位置

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

        if(x[k]\&lt;=n)    //若存在满足条件的列

&lt;/div&gt;

&lt;div&gt;

        {

&lt;/div&gt;

&lt;div&gt;

            if(k==n)//是最后一个皇后，则得到一个最终解

&lt;/div&gt;

&lt;div&gt;

            {

&lt;/div&gt;

&lt;div&gt;

                //break;    //此处若break,则只能得到一个解

&lt;/div&gt;

&lt;div&gt;

                nCount++;

&lt;/div&gt;

&lt;div&gt;

                output\_queens(x,n);    //输出

&lt;/div&gt;

&lt;div&gt;

                output\_queens(fp,nCount,x,n);

&lt;/div&gt;

&lt;div&gt;

            }

&lt;/div&gt;

&lt;div&gt;

            else    //否则，处理下一个皇后,即第 k+1 个皇后

&lt;/div&gt;

&lt;div&gt;

            {

&lt;/div&gt;

&lt;div&gt;

                k++;

&lt;/div&gt;

&lt;div&gt;

                x[k]=0;

&lt;/div&gt;

&lt;div&gt;

            }

&lt;/div&gt;

&lt;div&gt;

        }

&lt;/div&gt;

&lt;div&gt;

        else        //若不存在满足条件的列,则回溯

&lt;/div&gt;

&lt;div&gt;

        {

&lt;/div&gt;

&lt;div&gt;

            x[k]=0;    //第k个皇后复位为0

&lt;/div&gt;

&lt;div&gt;

            k--;    //回溯到前一个皇后

&lt;/div&gt;

&lt;div&gt;

        }

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    return nCount;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

int main()

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

    int n=8,x[MAXNUMBER]={0};

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    FILE \*fp=fopen("8皇后问题的解.txt","w");

&lt;/div&gt;

&lt;div&gt;

    if(fp==NULL)

&lt;/div&gt;

&lt;div&gt;

    {

&lt;/div&gt;

&lt;div&gt;

        printf("can not wirte file!");

&lt;/div&gt;

&lt;div&gt;

        exit(0);

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    printf("the queens are placed on the coloums : ");

&lt;/div&gt;

&lt;div&gt;

    //求解并写入文件

&lt;/div&gt;

&lt;div&gt;

    int nCount=n\_queens(fp,n,x);

&lt;/div&gt;

&lt;div&gt;

    printf("there are %d solutions! ",nCount);

&lt;/div&gt;

&lt;div&gt;

    fclose(fp);

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

    return 0;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;</summary><category term="皇后问题"></category></entry><entry><title>We are belong to each other</title><link href="http://blog.junfeng.ca/we-are-belong-to-each-other.html" rel="alternate"></link><updated>2013-05-18T23:54:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-18:we-are-belong-to-each-other.html</id><summary type="html">&lt;p&gt;虽然，我不信仰任何神。但今天还是要感谢一下，上帝，感谢一下爱神。&lt;/p&gt;
&lt;p&gt;当然了，更要感谢她，宽容了我。&lt;/p&gt;
&lt;p&gt;I am yours ，You are mine,We are belong to each other.&lt;/p&gt;</summary><category term="You"></category></entry><entry><title>tieba sign</title><link href="http://blog.junfeng.ca/tieba-sign.html" rel="alternate"></link><updated>2013-05-09T17:22:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-05-09:tieba-sign.html</id><summary type="html">&lt;p&gt;贴吧批量签到&lt;/p&gt;
&lt;p&gt;使用requests,bs4&lt;/p&gt;
&lt;p&gt;[code language="python"]&lt;/p&gt;
&lt;p&gt;#!/usr/bin/env python&lt;br /&gt;
#!---coding=utf8---&lt;br /&gt;
import requests&lt;br /&gt;
import bs4&lt;/p&gt;
&lt;p&gt;urlt='http://tieba.baidu.com/f?kw='&lt;br /&gt;
signurl='http://tieba.baidu.com/sign/add'&lt;/p&gt;
&lt;p&gt;tieba=[]&lt;br /&gt;
f=open('tiebas.txt','r')&lt;br /&gt;
tieba=f.read().splitlines()&lt;br /&gt;
f.close()&lt;br /&gt;
headers={}&lt;br /&gt;
f=open('configs.txt','r')&lt;br /&gt;
for line in f:&lt;br /&gt;
if line[0]=='#':&lt;br /&gt;
continue&lt;br /&gt;
line=line.rstrip('\n')&lt;br /&gt;
key,value=line.split('=',1)&lt;br /&gt;
headers[key]=value&lt;br /&gt;
f.close()&lt;/p&gt;
&lt;p&gt;data={}&lt;br /&gt;
data['ie']='utf-8'&lt;/p&gt;
&lt;p&gt;for t in tieba:&lt;br /&gt;
data['kw']=t.decode('gbk').encode('utf-8')&lt;br /&gt;
#on linux&lt;br /&gt;
#data['kw']=t&lt;br /&gt;
#t=t.decode('utf-8').encode('gbk')&lt;br /&gt;
url=urlt+t&lt;br /&gt;
r=requests.get(url,headers=headers)  &lt;/p&gt;
&lt;p&gt;data['tbs']=bs4.BeautifulSoup(r.text).body.find('script').string.split('"')[1].encode('utf-8')&lt;br /&gt;
r=requests.post(signurl,headers=headers,data=data)&lt;br /&gt;
if r.url==signurl:&lt;br /&gt;
print t+'吧签到成功'.decode('utf-8').encode('gbk')&lt;br /&gt;
a=raw_input('Press Enter to exit:')&lt;/p&gt;
&lt;p&gt;[/code]&lt;/p&gt;
&lt;p&gt;使用PyInstaller打包成exe文件。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href="http://pan.baidu.com/share/link?shareid=495612&amp;amp;uk=2887257007"&gt;文件&lt;/a&gt;&lt;/p&gt;</summary><category term="贴吧"></category></entry><entry><title>萤火虫之墓</title><link href="http://blog.junfeng.ca/e890a4e781abe899abe4b98be5a293.html" rel="alternate"></link><updated>2013-04-14T23:24:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-14:e890a4e781abe899abe4b98be5a293.html</id><summary type="html">&lt;p&gt;话说好久没看宫崎骏的动画片了，想着看一部来洗涤一下我那世俗的心.然后就下了《萤火虫之墓》,看完之后没感觉到以往那种小清新的心情，反而更加沉重了.&lt;/p&gt;
&lt;p&gt;以往宫崎骏的电影都是讲小女生的成长经历的，而《萤火虫之墓》却是侧面反应战争，以亲情为表现力，同时又深刻特写着世俗.那几幅场景画面感十足，没有语言，就是一组镜头让你体会到世俗，人情世故的凄凉和心酸.&lt;/p&gt;
&lt;p&gt;战争时期，人们姓名都朝不保夕，也不能奢求那些个千千万万的类似阿姨和农夫的人有大无畏的善心.可是，看着阿姨把哥哥从废墟的家中带来的食物，极其自然的拿走，农夫漠视哥哥的苦苦哀求时，心中还是犹如被硬塞了什么东西似的.可能以前温馨情节看多了，总是期待有陌生人的善举.但现实是自始自终都没有出现.而阿姨两次盛饭的举动，对比感十足，每次吃完饭，妹妹叫着饿更是对阿姨这种行为的控诉，当然也不能说阿姨这种行为有错，她只是在做大众都会做的事情.但是她确以一句“为祖国做贡献的人就应该多得“来粉饰她的这种私心和世俗，好让她显得貌似多爱国似的，令人心生厌恶，你偏向你家人就偏吧，但这实在是和爱国没有一毛线的关系.&lt;/p&gt;
&lt;p&gt;而和周围人的冷漠强烈对比的是哥哥一直对妹妹的爱.哥哥一直照顾着妹妹的纯真心灵.为了不让妹妹在防空洞里感到害怕，哥哥抓来萤火虫装点.哥哥一直在想法子让妹妹开心.就像《美丽人生》中父亲为儿子做的那样.哥哥甚至为了妹妹去偷东西.&lt;/p&gt;
&lt;p&gt;但结局却是那么残酷，妹妹营养不良而死去，无论哥哥怎么努力都没有救活她，她的死是对战争最有力的声讨
，人们的冷漠也一直在空气中永不散去.&lt;/p&gt;
&lt;p&gt;影片最后，战后，人们重新回到了家乡，回到了正常的生活状态，几个女孩子笑着说：“还是和以前一样.”不，对于某些人来说，生活永远都不一样了，因为战争夺走了他最爱的家人们.&lt;/p&gt;
&lt;p&gt;就像最后歌中唱的那样:There is no place like
home.我想对于有过寄人篱下经历的，或者还漂泊在外的人来说，这句歌词听起来不会感到平淡吧&lt;/p&gt;</summary><category term="萤火虫之墓"></category></entry><entry><title>心情</title><link href="http://blog.junfeng.ca/404.html" rel="alternate"></link><updated>2013-04-11T23:36:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-11:404.html</id><summary type="html">&lt;p&gt;蓝颜是由爱情不得而进化过来的，&lt;br /&gt;
而爱情最终又会变成亲情吧.&lt;br /&gt;
亲情呢，会变成什么？&lt;br /&gt;
她说：也许每个蓝颜都是不甘心的.&lt;br /&gt;
是吧.&lt;/p&gt;</summary></entry><entry><title>传话游戏</title><link href="http://blog.junfeng.ca/e4bca0e8af9de6b8b8e6888f.html" rel="alternate"></link><updated>2013-04-06T23:38:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-06:e4bca0e8af9de6b8b8e6888f.html</id><summary type="html">&lt;div&gt;

非游戏规则，仅含代码．

&lt;/div&gt;

&lt;div&gt;

编程之美资格赛题一代码

&lt;/div&gt;

&lt;div&gt;

纯C++风格，那什么Ｃ风格弱暴了．

&lt;/div&gt;

&lt;div&gt;

大神轻拍．

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;p&gt;[code language="cpp"]&lt;/p&gt;
&lt;p&gt;#include\&amp;lt;iostream&gt;&lt;br /&gt;
#include\&amp;lt;string&gt;&lt;br /&gt;
#include\&amp;lt;map&gt;&lt;br /&gt;
#include\&amp;lt;vector&gt;&lt;br /&gt;
#include\&amp;lt;cstdio&gt;&lt;br /&gt;
using namespace std;&lt;br /&gt;
map\&amp;lt;string,string&gt; word_change;&lt;br /&gt;
vector\&amp;lt;string&gt; sentence;&lt;br /&gt;
void change()&lt;br /&gt;
{&lt;br /&gt;
for(vector\&amp;lt;string&gt;::iterator
be=sentence.begin();be!=sentence.end();++be)&lt;br /&gt;
{&lt;br /&gt;
if(word_change.count(*be)==0)&lt;br /&gt;
continue;&lt;br /&gt;
if(word_change.count(*be)==1)&lt;br /&gt;
*be=word_change[*be];&lt;br /&gt;
}&lt;br /&gt;
}&lt;br /&gt;
int main()&lt;br /&gt;
{&lt;br /&gt;
int T,N,M;&lt;br /&gt;
char en;&lt;br /&gt;
cin &gt;&gt; T;&lt;br /&gt;
string word,key,value;&lt;br /&gt;
for (int i=0 ;i!=T;++i)&lt;br /&gt;
{&lt;br /&gt;
cin &gt;&gt; N &gt;&gt; M;&lt;br /&gt;
for (int j=0;j!=M;++j)&lt;br /&gt;
{&lt;br /&gt;
cin &gt;&gt; key &gt;&gt; value;&lt;br /&gt;
word_change[key]=value;&lt;br /&gt;
}&lt;br /&gt;
while(cin &gt;&gt; word)&lt;br /&gt;
{&lt;/p&gt;
&lt;p&gt;sentence.push_back(word);&lt;br /&gt;
if((en=getchar())=='\n'|| en==EOF)&lt;br /&gt;
break;&lt;br /&gt;
}&lt;br /&gt;
for(int k=0;k!=N-1;k++)&lt;br /&gt;
change();&lt;br /&gt;
cout \&amp;lt;\&amp;lt; "Case #" \&amp;lt;\&amp;lt; i+1 \&amp;lt;\&amp;lt; ":";&lt;br /&gt;
for(vector\&amp;lt;string&gt;::iterator
be=sentence.begin();be!=sentence.end();++be)&lt;br /&gt;
cout \&amp;lt;\&amp;lt; " " \&amp;lt;\&amp;lt; *be ;&lt;br /&gt;
cout \&amp;lt;\&amp;lt; endl;&lt;br /&gt;
word_change.clear();&lt;br /&gt;
sentence.clear();&lt;br /&gt;
}&lt;br /&gt;
return 0;&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/code]&lt;/p&gt;</summary><category term="传话游戏"></category></entry><entry><title>花湖</title><link href="http://blog.junfeng.ca/e88ab1e6b996efbc8de8a5bfe794b5.html" rel="alternate"></link><updated>2013-04-05T23:41:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-05:e88ab1e6b996efbc8de8a5bfe794b5.html</id><summary type="html">&lt;p&gt;&lt;span style="color: #ff00ff;"&gt;落花一片&lt;/span&gt;&lt;br /&gt;
&lt;img alt="" src="http://ww3.sinaimg.cn/mw690/894981ddtw1e3f88nxpwgj.jpg" /&gt;&lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;不能称作花海，就叫花湖吧&lt;/span&gt;&lt;br /&gt;
&lt;img alt="" src="http://ww2.sinaimg.cn/mw690/894981ddtw1e3f88t3hsmj.jpg" /&gt;&lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;难得在学校见到这么有诗意的画面&lt;/span&gt;&lt;br /&gt;
&lt;img alt="" src="http://ww2.sinaimg.cn/mw690/894981ddtw1e3f88z9l0jj.jpg" /&gt;&lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;照相的人也会被照进风景中&lt;/span&gt;&lt;br /&gt;
&lt;img alt="" src="http://ww4.sinaimg.cn/mw690/894981ddtw1e3f894kggkj.jpg" /&gt;&lt;br /&gt;
&lt;span style="color: #ff00ff;"&gt;花与花之间的距离&lt;/span&gt;&lt;br /&gt;
&lt;img alt="" src="http://ww3.sinaimg.cn/mw690/894981ddtw1e3f899hoemj.jpg" /&gt;&lt;/p&gt;</summary><category term="落花"></category></entry><entry><title>自助餐的心理</title><link href="http://blog.junfeng.ca/e887aae58aa9e9a490e79a84e5bf83e79086.html" rel="alternate"></link><updated>2013-04-05T23:17:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-05:e887aae58aa9e9a490e79a84e5bf83e79086.html</id><summary type="html">&lt;p&gt;吃什么的最有爱了，特别是吃自助餐．花一定数目的钱，让你随便吃，总是听起来有吸引力的．反正那么多钱也交了，不大吃，特吃就对不起自己花的钱了．话说，我虽然想吃回本，但无奈战斗力太弱，拼命吃，也吃不会本．再看他们，从坐下到站起，战斗力是和x轴垂直的．吃不回本总是令人沮丧的．于是我这样安慰自己：正因为有我们这样的人，自助餐才能开下去的．但我又饿得快，等饿的时候，有懊悔自己怎么没多吃点呢？那么多好吃的．&lt;/p&gt;
&lt;p&gt;唉，奇怪的心理．&lt;/p&gt;</summary><category term="自助餐"></category></entry><entry><title>北京遇上西雅图</title><link href="http://blog.junfeng.ca/e58c97e4baace98187e4b88ae8a5bfe99b85e59bbe.html" rel="alternate"></link><updated>2013-04-04T23:47:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-04-04:e58c97e4baace98187e4b88ae8a5bfe99b85e59bbe.html</id><summary type="html">&lt;p&gt;&lt;img alt="" src="http://img3.douban.com/view/photo/photo/public/p1882696732.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;一部物质和温情较量的爱情片．&lt;/p&gt;
&lt;p&gt;影片开头文佳佳一身金色的行头，看起来十足的傍大款的小三形象．再看Frank
,那大叔形象．仿佛就把失败写在了脸上．大叔为人很好，但却遇到了比他要强的老婆，大叔遂成全了老婆的理想，但他老婆却不懂他的好，结局也只能是离婚．而文佳佳呢，发现她得到的仅仅是一个一个名牌包之后，心中有了困惑．她虽然能够毫无顾忌的花钱．　但并不怎么高兴．因为她想要的是有人关心她，照顾她．而不是仅仅满足物质上的需求．&lt;/p&gt;
&lt;p&gt;六个月，对于爱情产生来说，不长不短．Frank
和文佳佳相互扶持，心生爱慕．但他们还是分开了两年．文佳佳虽然可以享受富太太的生活，但她毅然放弃了，因为她找到了真正的自己，就像她在片中说的那样，她要靠自己的努力来撑起孩子的生活，这样当爱情降临时，她才有接受的能力．&lt;/p&gt;
&lt;p&gt;影片的最后，文佳佳实现了在帝国大厦遇见&lt;span
style="font-size: 1rem;"&gt;所爱之人的愿望．&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="font-size: 1rem;"&gt;金钱固然很好，没有的羡慕有的．但当你真正拥有的时候，发现它不是万能的，它并不能挽回离去的心．&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;有时候女生会把他肯不肯为你花钱作为是否爱你的标准．我想说，为你花多少钱，和他是否&lt;span
style="font-size: 1rem;"&gt;真的&lt;/span&gt;&lt;span
style="line-height: 1.714285714; font-size: 1rem;"&gt;喜欢你没什么关系．当然他喜欢你，肯定愿意为你效劳的．&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;而对于男人来说，真的不能靠女人养着．相信Frank被人叫着ＤＢ心里一定不好受．&lt;/p&gt;
&lt;p&gt;找到真我，不放弃自我．这样的人生活着才有动力．&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://img3.douban.com/view/photo/photo/public/p1890826645.jpg" /&gt;&lt;/p&gt;</summary><category term="北京遇上西雅图"></category></entry><entry><title>喜欢一个人</title><link href="http://blog.junfeng.ca/e5969ce6aca2e4b880e4b8aae4baba.html" rel="alternate"></link><updated>2013-03-20T23:53:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-03-20:e5969ce6aca2e4b880e4b8aae4baba.html</id><summary type="html">&lt;p&gt;喜欢一个人，应该是一件很幸福的事！漂泊的心有了依靠.不再焦虑，不再彷徨.远离了低级趣味,生活有了目标.&lt;br /&gt;
真心喜欢一个人，不会再想其她女生，走路都不再左顾右盼.&lt;br /&gt;
喜欢一个人，碰巧她也喜欢你.世界为之晴朗.
暖暖的阳光，可爱的绿叶，鲜艳的花朵，清新的空气，都在为你们祝福.  &lt;/p&gt;
&lt;p&gt;喜欢一个人，不巧她不喜欢你，庆幸的是她没有喜欢的人.永远可以把她作为你女神，心中留有希望：突然间她会喜欢你.你喜欢她，她虽不喜欢你，但这都是你们两个人之间的事.不会心生无谓情绪.  &lt;/p&gt;
&lt;p&gt;喜欢一个人，可她却有了喜欢的人，而且过的还很不错，你发现女神突然变成凡人，精神瞬间没了支柱.自卑，嫉妒，怨恨，无奈.多数人在这种局面选择忘记，一遍一遍伤着自己的心.最后直至不再喜欢.可能还是不够喜欢吧？很多人都做不了金岳霖老先生,一辈子只喜欢一个女子，而不论她嫁人与否.这就是爱吧！大多数人都承受不了其中的煎熬.我想金老先生也是凡人,他也能感受到那些情绪,但他一一承受，足件其对爱情之认真.&lt;br /&gt;
真心喜欢一个人，就能承受她带来的所有，虽然会很难，但爱情战胜一切.&lt;/p&gt;</summary><category term="喜欢一个人"></category></entry><entry><title>html页面编码</title><link href="http://blog.junfeng.ca/htmle9a1b5e99da2e7bc96e7a081.html" rel="alternate"></link><updated>2013-03-12T17:50:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-03-12:htmle9a1b5e99da2e7bc96e7a081.html</id><summary type="html">&lt;p&gt;html貌似比较简单，但今天程序却栽在设置html字符集上了．遇到这样一个页面．head头中这样写的：  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/03/2013-03-12-175823_433x21_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2013/03/2013-03-12-175823_433x21_scrot-300x14.png" title="2013-03-12-175823_433x21_scrot" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;本来是想把页面设置成utf-8编码的，但貌似这句meta没起作用，好像页面变成了gbk编码．我提交中文数据时，程序就因编码问题死掉了．等我注意到这上面的时候，整个程序的代码也快被我看完了．然后改成这样  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/03/2013-03-12-180342_670x42_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2013/03/2013-03-12-180342_670x42_scrot-300x18.png" title="2013-03-12-180342_670x42_scrot" /&gt;&lt;/a&gt;&lt;br /&gt;
果然顺利通过．这时间浪费的真冤枉．&lt;br /&gt;
谁能想到错误竟然是由html页面造成的，看来细微之处别有洞天啊！&lt;/p&gt;</summary><category term="encode"></category><category term="html"></category></entry><entry><title>Python２编码小结</title><link href="http://blog.junfeng.ca/pythonefbc92e7bc96e7a081e5b08fe7bb93.html" rel="alternate"></link><updated>2013-03-12T17:10:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-03-12:pythonefbc92e7bc96e7a081e5b08fe7bb93.html</id><summary type="html">&lt;p&gt;Python中的编码挺让人烦的．学习了一下，记录在此．首先查看你系统默认输入输出的编码．  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;#!/usr/bin/env python #!---coding=utf-8--- import sys print 'stdin_encoding:%s' % sys.stdin.encoding print 'stdout_encoding:%s' % sys.stdout.encoding&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;OutpUt&lt;br /&gt;
stdin_encoding:UTF-8&lt;br /&gt;
stdout_encoding:UTF-8&lt;br /&gt;
&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; a='你好' &amp;gt;&amp;gt;&amp;gt; a 'xe4xbdxa0xe5xa5xbd' &amp;gt;&amp;gt;&amp;gt; type(a) &amp;lt;type 'str'&amp;gt; &amp;gt;&amp;gt;&amp;gt; b=a.decode('utf-8') &amp;gt;&amp;gt;&amp;gt; type(b) &amp;lt;type 'unicode'&amp;gt; &amp;gt;&amp;gt;&amp;gt; a.encode('gbk') Traceback (most recent call last): File "", line 1, in UnicodeDecodeError: 'ascii' codec can't decode byte 0xe4 in position 0: ordinal not in range(128)&lt;/code&gt;&lt;br /&gt;
首先a的类型是str，其以UTF-8编码．str有两个关于编码的方法．&lt;br /&gt;
str.encode和str.decode&lt;br /&gt;
b=a.decode('utf-8') 将a解码，返回类型为unicode.&lt;br /&gt;
同时a又有encode方法．但a.encode('gbk')
抛出了解码错误．那么encode方法又有什么用呢？？&lt;br /&gt;
看下面的例子：  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; c='Hello' &amp;gt;&amp;gt;&amp;gt; c 'Hello' &amp;gt;&amp;gt;&amp;gt; c.decode('utf-8') u'Hello' &amp;gt;&amp;gt;&amp;gt; d=c.decode('utf-8') &amp;gt;&amp;gt;&amp;gt; d u'Hello' &amp;gt;&amp;gt;&amp;gt; d.encode('gbk') 'Hello' &amp;gt;&amp;gt;&amp;gt; e=d.encode('gbk') &amp;gt;&amp;gt;&amp;gt; e 'Hello'&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;当str变量中只含有ascii字符时使用c.encode('gbk')顺利通过．我想c.encode()应该是先decode再encode的，而且默认是ascii来解码的．这样因为a中含有汉字，ascii也就无法解码了．  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; f=b.encode('gbk') &amp;gt;&amp;gt;&amp;gt; f 'xc4xe3xbaxc3' &amp;gt;&amp;gt;&amp;gt; g=f.decode('gbk') &amp;gt;&amp;gt;&amp;gt; g u'u4f60u597d' &amp;gt;&amp;gt;&amp;gt; g==b True &amp;gt;&amp;gt;&amp;gt; f.decode('utf-8') Traceback (most recent call last):   File "", line 1, in    File "/usr/lib/python2.7/encodings/utf_8.py", line 16, in decode     return codecs.utf_8_decode(input, errors, True) UnicodeDecodeError: 'utf8' codec can't decode byte 0xc4 in position 0: invalid continuation byte&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;从上面可以看出汉字在不同的编码下，码值是不同的，所以decode时就要传入正确的编码方式，不然就会抛出像上面这样的异常．&lt;/p&gt;
&lt;p&gt;在Python3中str取代了unicode类型，没有了decode方法．这样str类型的变量只能encode了，返回的是bytes类型．&lt;/p&gt;</summary><category term="encode"></category><category term="Python"></category></entry><entry><title>Linux和Nvidia显卡驱动</title><link href="http://blog.junfeng.ca/linuxe5928cnvidiae698bee58da1e9a9b1e58aa8-2.html" rel="alternate"></link><updated>2013-03-10T23:46:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-03-10:linuxe5928cnvidiae698bee58da1e9a9b1e58aa8-2.html</id><summary type="html">&lt;p&gt;由于lxde也用了将近一学期了，虽说lxde比较轻量，但显示效果实在不能说美观！又不想用GNOME或者KDE之流.它们会携带一大堆莫名其妙的软件，也受不了arch下GNOME那个样子，至于KDE,比GNOME好不了哪去.而xfce4也是直追GNOME.于是再次忍不住装上Enlightenment17,上次因为感觉e17CPU占用太多，删了.但这次为了显示效果，下决心把e17装了.跟着网上的教程算是把它配置的满意了.&lt;br /&gt;
但风扇也呼呼的转了起来,top命令下去，果然，Enlightenment
CPU占用率百分之三十几，都是因为我的nvidia显卡没正常工作的缘故！而且貌似还在发热！你说你不工作去就算了，还拖累整个系统.BIOS中也没有关闭n卡的选项.无奈只有自食其力，上网搜解决方法.  &lt;/p&gt;
&lt;p&gt;貌似官方源里有nvidia驱动，但无奈nvidia-utility和mesa-libgl冲突,而后者被我系统里的大部分软件依赖.也就不敢装它了.然后用了aur中的bumblebee软件,但在装nvidia-bumblebee时无法安装，看wiki中说bbswitch可以关闭独显，但我也没装成功,bbswitch-git倒是装
成功了，却不工作！无奈我又去nvidia官网下载驱动，倒是没有依赖问题,但装好之后，X服务器又启动不了了.把由nvidia-xconfig自动生成在/etc/X11/Xorg.conf删了之后才能启动桌面环境！可能是我没配置好什么.于是狠心去装官方源中的n卡驱动，大概把我电脑里的桌面程序都给删了，装上后X还是启动不了，于是删了X,最小安装Xorg,问题依旧，查看X日志发现错误信息中有“Intel”关键字，于是明白要装xf86-video-intel
Intel集显的开源驱动，但它依赖mesa-libgl库，于是我明白怎么回事了：这是Intel和nvidia之间的矛盾.Fuck,可却害苦了我等
草民！&lt;/p&gt;</summary><category term="瞎折腾"></category></entry><entry><title>雪景</title><link href="http://blog.junfeng.ca/e99baae699af.html" rel="alternate"></link><updated>2013-02-19T12:44:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-02-19:e99baae699af.html</id><summary type="html">&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0053.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0053.jpg" title="DSC_0053.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0052.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0052.jpg" title="DSC_0052.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg" title="DSC_0051.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0050.jpg" title="DSC_0050.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0049.jpg" title="DSC_0049.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0048.jpg" title="DSC_0048.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0047.jpg" title="DSC_0047.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0051.jpg"&gt;&lt;img alt="image" src="http://jcodef.com/wp-content/uploads/2013/02/wpid-DSC_0045.jpg" title="DSC_0045.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="雪景"></category></entry><entry><title>signal函数和sigaction函数</title><link href="http://blog.junfeng.ca/signale587bde695b0e5928csigactione587bde695b0.html" rel="alternate"></link><updated>2013-02-16T13:43:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-02-16:signale587bde695b0e5928csigactione587bde695b0.html</id><summary type="html">&lt;p&gt;环境:Linux version 3.6.10-1-ARCH&lt;/p&gt;
&lt;p&gt;当使用系统自带signal函数处理信号时,系统并未把被捕捉到的信号加到信号屏蔽字中.&lt;/p&gt;
&lt;p&gt;使用sigaction函数实现的signal函数(apue),在调用信号处理程序时,捕捉到的信号屏蔽字被加入到信号屏蔽字,处理程序返回后,恢复到原来的屏蔽字.&lt;/p&gt;
&lt;p&gt;看来敲敲代码还是能发现一些东西的.&lt;/p&gt;</summary><category term="signal"></category></entry><entry><title>不是所有的https链接都是利民的</title><link href="http://blog.junfeng.ca/e4b88de698afe68980e69c89e79a84httpse993bee68ea5e983bde698afe588a9e6b091e79a84.html" rel="alternate"></link><updated>2013-02-02T21:23:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-02-02:e4b88de698afe68980e69c89e79a84httpse993bee68ea5e983bde698afe588a9e6b091e79a84.html</id><summary type="html">&lt;p&gt;话说git*hub又不能上了,开着代理,可以打开页面,但无法下载.&lt;/p&gt;
&lt;p&gt;git clone显示:&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #0000ff;"&gt;\$ git clone
https://github.com/bgolub/tornado-blog.git&lt;/span&gt;&lt;br /&gt;
&lt;span style="color: #0000ff;"&gt; 正克隆到 'tornado-blog'...&lt;/span&gt;&lt;br /&gt;
&lt;span style="color: #0000ff;"&gt; error: Could not resolve host: (nil);
Unknown error while accessing
https://github.com/bgolub/tornado-blog.git/info/refs?service=git-upload-pack&lt;/span&gt;&lt;br /&gt;
&lt;span style="color: #0000ff;"&gt; fatal: HTTP request failed&lt;/span&gt;&lt;br /&gt;
&lt;span style="color: #0000ff;"&gt;\$ ping github.com&lt;/span&gt;&lt;br /&gt;
&lt;span style="color: #0000ff;"&gt; \^C&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下载zip文件吧,又出现这种情况:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/2013-02-02-210744_1366x768_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2013/02/2013-02-02-210744_1366x768_scrot-300x168.png" title="2013-02-02-210744_1366x768_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我勒那个心情啊!让我们这些程序员情何以堪啊.&lt;/p&gt;
&lt;p&gt;最后把那个zip文件地址复制出来去掉url前面的https://,竟然成功了.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2013/02/2013-02-02-210744_1366x768_scrot1.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2013/02/2013-02-02-210744_1366x768_scrot1-300x168.png" title="2013-02-02-210744_1366x768_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看来什么都是被逼出来的.&lt;/p&gt;</summary><category term="goagent"></category><category term="https"></category></entry><entry><title>完美的goagent</title><link href="http://blog.junfeng.ca/e5ae8ce7be8ee79a84goagent.html" rel="alternate"></link><updated>2013-01-28T17:30:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2013-01-28:e5ae8ce7be8ee79a84goagent.html</id><summary type="html">&lt;p&gt;给我们这些没钱买vpn又想出去的人带来了很大的方便。&lt;/p&gt;
&lt;p&gt;chromium 设置-&gt;高级设置-&gt; 管理证书-&gt;授权中心-&gt;导入&lt;/p&gt;
&lt;p&gt;选择 goagent/local/CA.crt&lt;/p&gt;
&lt;p&gt;全部打勾，确定。&lt;/p&gt;
&lt;p&gt;ssl证书不受信任得到了解决。&lt;/p&gt;
&lt;p&gt;少部分要求证书的https也可以访问了。&lt;/p&gt;
&lt;p&gt;而在Android手机上，安装GaeProxy软件，打开，修改代理地址改成
https://yourappid.appspot.com/fetch.py&lt;/p&gt;
&lt;p&gt;Google+,facebook,twitter什么的，都可以访问了。&lt;/p&gt;</summary><category term="goagent"></category></entry><entry><title>这个冬天有点冷</title><link href="http://blog.junfeng.ca/e8bf99e4b8aae586ace5a4a9e69c89e782b9e586b7.html" rel="alternate"></link><updated>2012-12-29T13:06:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-12-29:e8bf99e4b8aae586ace5a4a9e69c89e782b9e586b7.html</id><summary type="html">&lt;p&gt;从图书馆出来，走在路上。枯叶快速的来到脚下，又瞬间跑开了，继续它随风飘泊的生活。雷达实验室门上的锁，奋力的敲打着缚束它的铁门，它想离开注定要待一生的地方，随狂风流浪。风嗖嗖的刮着，呼吸都有点困难了。不禁感叹，这个冬天真的有点冷。&lt;/p&gt;</summary><category term="有点冷"></category></entry><entry><title>捉虫记一</title><link href="http://blog.junfeng.ca/e68d89e899abe8aea1e4b880.html" rel="alternate"></link><updated>2012-12-23T18:48:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-12-23:e68d89e899abe8aea1e4b880.html</id><summary type="html">&lt;p&gt;话说今天机考了。最后一道题没过，伤心，最小生成树我以前编过的！但今天再编的时候，却出现了bug。&lt;/p&gt;
&lt;p&gt;BUG1.&lt;/p&gt;
&lt;div&gt;

    for(i=0;i\&lt;G.arcnum;i++)

&lt;/div&gt;

&lt;div&gt;

    {

&lt;/div&gt;

&lt;div&gt;

        scanf("%d%d%d",&amp;i,&amp;j,&amp;w);

&lt;/div&gt;

&lt;div&gt;

        G.a[i][j]=w;

&lt;/div&gt;

&lt;div&gt;

        G.a[j][i]=w;

&lt;/div&gt;

&lt;div&gt;

    }

&lt;/div&gt;

&lt;div&gt;

 i华丽丽的在我眼前突变了，神不知鬼不觉！

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

BUG2.

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

&lt;div&gt;

int wp=INT\_MAX;

&lt;/div&gt;

&lt;div&gt;

......

&lt;/div&gt;

&lt;div&gt;

for(i=1;i\&lt;G.vexnum;++i)

&lt;/div&gt;

&lt;div&gt;

 {

&lt;/div&gt;

&lt;div&gt;

        wp=INT\_MAX;//此前未加

&lt;/div&gt;

&lt;div&gt;

        for(j=0;j\&lt;G.vexnum;++j)

&lt;/div&gt;

&lt;div&gt;

        {

&lt;/div&gt;

&lt;div&gt;

            if(closedge[j].lowcost!=0)

&lt;/div&gt;

&lt;div&gt;

            {

&lt;/div&gt;

&lt;div&gt;

                if(closedge[j].lowcost\&lt;wp)

&lt;/div&gt;

&lt;div&gt;

                {

&lt;/div&gt;

&lt;div&gt;

                    k=j;

&lt;/div&gt;

&lt;div&gt;

                    wp=closedge[j].lowcost;

&lt;/div&gt;

&lt;div&gt;

                }

&lt;/div&gt;

&lt;div&gt;

            }

&lt;/div&gt;

&lt;div&gt;

        }

&lt;/div&gt;

&lt;div&gt;

        ......

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

带注释标记的那行没有加上，就出现了完全不一样的流程。

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;</summary><category term="BUG"></category></entry><entry><title>archlinux下android环境搭建</title><link href="http://blog.junfeng.ca/archlinuxe4b88bandroide78eafe5a283e690ade5bbba.html" rel="alternate"></link><updated>2012-12-10T22:56:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-12-10:archlinuxe4b88bandroide78eafe5a283e690ade5bbba.html</id><summary type="html">&lt;p&gt;由于系统中已有openjdk，就开始安装eclipse&lt;/p&gt;
&lt;p&gt;sudo pacman -S eclipse&lt;/p&gt;
&lt;p&gt;在选择java版本时纠结了，是选择sun-java呢，还是openjava？&lt;/p&gt;
&lt;p&gt;刚开始选择sun-java，但网速过于慢了，就又换回了openjava&lt;/p&gt;
&lt;p&gt;安装android-sdk，android-sdk-platform-tools无法解决依赖：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-192629_740x485_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-192629_740x485_scrot-300x196.png" title="2012-12-09-192629_740x485_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在/etc/pacman.conf中启用multilib源&lt;/p&gt;
&lt;p&gt;sudo vim /etc/pacman.conf&lt;/p&gt;
&lt;p&gt;安装android-sdk，android-sdk-platform-tools&lt;/p&gt;
&lt;p&gt;sudo pacman -S android-sdk android-sdk-platform-tools&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-193119_737x460_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-193119_737x460_scrot-300x187.png" title="2012-12-09-193119_737x460_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;感觉文件好大啊！但到后面装eclipse-android时真的是小巫见大巫了。&lt;/p&gt;
&lt;p&gt;android-sdk默认安装到/opt文件夹下。&lt;/p&gt;
&lt;p&gt;使用yaourt安装eclipse-android 使用pacman无法解决依赖。&lt;/p&gt;
&lt;p&gt;sudo yaourt  -S eclipse-android （非root用户也可以）&lt;/p&gt;
&lt;p&gt;会下载这三个东东eclipse-emf   eclipse-gef    eclipse-wtp-wst。&lt;/p&gt;
&lt;p&gt;平均每个都一百多M。&lt;/p&gt;
&lt;p&gt;cd /opt/android-sdk/tools&lt;/p&gt;
&lt;p&gt;运行android脚本启动android-sdk-manager：&lt;/p&gt;
&lt;p&gt;./android&lt;/p&gt;
&lt;p&gt;若遇到权限问题把/opt/android-sdk/文件夹及其所有内容的所有者改成你自己&lt;/p&gt;
&lt;p&gt;sudo chown -R user：users /opt/android-sdk&lt;/p&gt;
&lt;p&gt;sudo也可以。&lt;/p&gt;
&lt;p&gt;选择android API版本下载安装。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/12/2012-12-10-225726_668x470_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/12/2012-12-10-225726_668x470_scrot-300x211.png" title="2012-12-10-225726_668x470_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;启动eclipse，设置android-sdk路径。&lt;/p&gt;
&lt;p&gt;android开发环境已配置完成。&lt;/p&gt;
&lt;h6&gt;新建android虚拟机，测试环境：&lt;/h6&gt;
&lt;p&gt;在android-sdk-manager中找到tools-&gt;Manage AVDs，启动Android Virtual
Device Manager。&lt;/p&gt;
&lt;p&gt;new新建android虚拟机。&lt;/p&gt;
&lt;p&gt;设置参数&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/12/2012-12-10-223822_470x689_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/12/2012-12-10-223822_470x689_scrot-204x300.png" title="2012-12-10-223822_470x689_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Start启动虚拟机&lt;/p&gt;
&lt;p&gt;若出现问题无法启动，按照提示提供的执行命令。&lt;/p&gt;
&lt;p&gt;若出现“fork(): Cannot allocate memory”错误，把内存调小一点试试。&lt;/p&gt;
&lt;p&gt;启动过程较慢，以为死掉，造成关了重新启动多次。&lt;/p&gt;
&lt;p&gt;最后出现android虚拟机：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-233805_1366x768_scrot.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/12/2012-12-09-233805_1366x768_scrot-300x168.png" title="2012-12-09-233805_1366x768_scrot" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;成功&lt;/p&gt;
&lt;p&gt;时间主要花在下载android-sdk和android-sdk-platform-tools上，学校源中无此软件包，只能在官网上下载，但官网已限速，而且多次出现下载完后，返回莫名错误。&lt;/p&gt;
&lt;p&gt;用yaourt下载eclipse-android依赖包时也是花费较多时间。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href="https://wiki.archlinux.org/index.php/Android_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)"&gt;Android
(简体中文)&lt;/a&gt;&lt;/p&gt;</summary><category term="android-sdk"></category></entry><entry><title>windows or linux ？</title><link href="http://blog.junfeng.ca/windows-or-linux.html" rel="alternate"></link><updated>2012-12-07T22:59:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-12-07:windows-or-linux.html</id><summary type="html">&lt;p&gt;linux在友好度，和普及程度上确实比不上windows。&lt;/p&gt;
&lt;p&gt;但现在感觉ubuntu在图形界面上做的不比windows差，&lt;/p&gt;
&lt;p&gt;而且windows的普及很大程度上是由于人事因素。&lt;/p&gt;
&lt;p&gt;linux的优势在网络，服务器这一块。&lt;/p&gt;
&lt;p&gt;而且linux是开源免费的，更适合学习。&lt;/p&gt;
&lt;p&gt;而windows是收费闭源的。&lt;/p&gt;
&lt;p&gt;总的来说，windows更适合用户使用，linux适合系统，服务器方面的开发者使用。&lt;/p&gt;
&lt;p&gt;不过这一切都看个人爱好，无所谓高低之分。&lt;/p&gt;</summary><category term="系统差别"></category></entry><entry><title>I like ,I don't like</title><link href="http://blog.junfeng.ca/i-like-i-dont-like.html" rel="alternate"></link><updated>2012-12-07T22:24:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-12-07:i-like-i-dont-like.html</id><summary type="html">&lt;p&gt;我喜欢有阳光的窗下，读一些不厌恶的书。&lt;/p&gt;
&lt;p&gt;我喜欢平淡的心情，不因什么外物痴狂，或愤怒。&lt;/p&gt;
&lt;p&gt;我喜欢大家都有自己真正的追求，有不同的路，每人皆有所长，皆有尊敬的地方。&lt;/p&gt;
&lt;p&gt;我不喜欢自己沉迷于什么，不能自拔，或癫或狂。&lt;/p&gt;
&lt;p&gt;我不喜欢统一化的价值追求，被裹挟着，身不由己。&lt;/p&gt;
&lt;p&gt;我不喜欢追逐大家都追逐的东西，太拥挤。
我不喜欢领导他人，也不喜欢被他人领导。&lt;/p&gt;
&lt;p&gt;(感谢睿思版聊)&lt;/p&gt;</summary><category term="like and not like"></category></entry><entry><title>gcc无法编译cpp文件</title><link href="http://blog.junfeng.ca/gcce697a0e6b395e7bc96e8af91cppe69687e4bbb6.html" rel="alternate"></link><updated>2012-11-30T17:49:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-30:gcce697a0e6b395e7bc96e8af91cppe69687e4bbb6.html</id><summary type="html">&lt;p&gt;[junfeng7@junfeng7 shortestpath]\$ gcc shortestpath.cpp  &lt;/p&gt;
&lt;p&gt;/tmp/ccsHwAHv.o:(.eh_frame+0x13)：对‘__gxx_personality_v0’未定义的引用&lt;br /&gt;
collect2: 错误：ld 返回 1&lt;/p&gt;
&lt;p&gt;google之：&lt;/p&gt;
&lt;p&gt;解决方法使用g++编译cpp文件。gcc不会帮你链接c++的运行库，但g++会。（&lt;a href="http://joanscut.blog.163.com/blog/static/2173596020072892740595/"&gt;来源&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;但我在ubuntu环境下，我记得gcc也成功链接了。换了个环境gcc也变脾气了。&lt;/p&gt;
&lt;p&gt;备忘&lt;/p&gt;</summary><category term="编译cpp"></category></entry><entry><title>图的最短路径</title><link href="http://blog.junfeng.ca/e59bbee79a84e69c80e79fade8b7afe5be84.html" rel="alternate"></link><updated>2012-11-24T00:56:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-24:e59bbee79a84e69c80e79fade8b7afe5be84.html</id><summary type="html">&lt;p&gt;迪杰斯特拉算法&lt;/p&gt;
&lt;div&gt;

-----------data.txt-----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

6 8

&lt;/div&gt;

&lt;div&gt;

0 0 100 30 0 10

&lt;/div&gt;

&lt;div&gt;

0 0 0 0 0 5

&lt;/div&gt;

&lt;div&gt;

0 0 0 0 0 0

&lt;/div&gt;

&lt;div&gt;

0 0 60 0 20 0

&lt;/div&gt;

&lt;div&gt;

0 0 10 0 0 0

&lt;/div&gt;

&lt;div&gt;

0 0 0 0 50 0

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

----------code.cpp----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

\#include\&lt;stdio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;stdlib.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;limits.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#define Max\_vnum 50

&lt;/div&gt;

&lt;div&gt;

int final[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

int D[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

typedef struct Path{int adj;struct Path \*next;}Path;

&lt;/div&gt;

&lt;div&gt;

Path \*P[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

typedef struct {

&lt;/div&gt;

&lt;div&gt;

     int arc[Max\_vnum][Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

     int vexnum,arcnum;

&lt;/div&gt;

&lt;div&gt;

}MGraph;

&lt;/div&gt;

&lt;div&gt;

void InitGraph(MGraph &amp;G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     FILE \*fin;

&lt;/div&gt;

&lt;div&gt;

     int t;

&lt;/div&gt;

&lt;div&gt;

     fin=fopen("data.txt","r");

&lt;/div&gt;

&lt;div&gt;

     fscanf(fin,"%d%d",&amp;G.vexnum,&amp;G.arcnum);

&lt;/div&gt;

&lt;div&gt;

     for(int i=0;i\&lt;G.vexnum;++i)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          for(int j=0;j\&lt;G.vexnum;++j)

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

               fscanf(fin,"%d",&amp;t);

&lt;/div&gt;

&lt;div&gt;

               if(t==0)

&lt;/div&gt;

&lt;div&gt;

                    G.arc[i][j]=INT\_MAX;

&lt;/div&gt;

&lt;div&gt;

               else

&lt;/div&gt;

&lt;div&gt;

                    G.arc[i][j]=t;

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void ShortestPath\_DIJ(MGraph G,int v0)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     int min,w,v,isend=-1;

&lt;/div&gt;

&lt;div&gt;

     Path \*p;

&lt;/div&gt;

&lt;div&gt;

     for(v=0;v\&lt;G.vexnum;++v)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          final[v]=0;

&lt;/div&gt;

&lt;div&gt;

          D[v]=G.arc[v0][v];

&lt;/div&gt;

&lt;div&gt;

          P[v]=(Path\*)malloc(sizeof(Path));

&lt;/div&gt;

&lt;div&gt;

          P[v]-\&gt;next=NULL;

&lt;/div&gt;

&lt;div&gt;

          p=(Path\*)malloc(sizeof(Path));

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;adj=v0;

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;next=NULL;

&lt;/div&gt;

&lt;div&gt;

          P[v]-\&gt;next=p;

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     D[v0]=0;

&lt;/div&gt;

&lt;div&gt;

     final[v0]=1;

&lt;/div&gt;

&lt;div&gt;

     for(int i=1;i\&lt;G.vexnum;i++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          min=INT\_MAX;

&lt;/div&gt;

&lt;div&gt;

          for(w=0;w\&lt;G.vexnum;++w)

&lt;/div&gt;

&lt;div&gt;

               if(!final[w])

&lt;/div&gt;

&lt;div&gt;

                    if(D[w]\&lt;min)

&lt;/div&gt;

&lt;div&gt;

                    {

&lt;/div&gt;

&lt;div&gt;

                         min=D[w];

&lt;/div&gt;

&lt;div&gt;

                         v=w;

&lt;/div&gt;

&lt;div&gt;

                    }

&lt;/div&gt;

&lt;div&gt;

           if(isend==v)

&lt;/div&gt;

&lt;div&gt;

                break;

&lt;/div&gt;

&lt;div&gt;

          isend=v;

&lt;/div&gt;

&lt;div&gt;

          final[v]=1;

&lt;/div&gt;

&lt;div&gt;

          for(p=P[v]-\&gt;next;p-\&gt;next;p=p-\&gt;next)

&lt;/div&gt;

&lt;div&gt;

               printf("v%d",p-\&gt;adj)

&lt;/div&gt;

&lt;div&gt;

          printf("v%d",p-\&gt;adj);

&lt;/div&gt;

&lt;div&gt;

          Path \*p2;

&lt;/div&gt;

&lt;div&gt;

          p2=(Path\*)malloc(sizeof(Path));

&lt;/div&gt;

&lt;div&gt;

          p2-\&gt;adj=v;

&lt;/div&gt;

&lt;div&gt;

          p2-\&gt;next=NULL;

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;next=p2;

&lt;/div&gt;

&lt;div&gt;

          printf("v%dn",v);

&lt;/div&gt;

&lt;div&gt;

          for(w=0;w\&lt;G.vexnum;++w)

&lt;/div&gt;

&lt;div&gt;

             
 if(!final[w]&amp;&amp;G.arc[v][w]!=INT\_MAX&amp;&amp;(min+G.arc[v][w]\&lt;D[w]))

&lt;/div&gt;

&lt;div&gt;

               {

&lt;/div&gt;

&lt;div&gt;

                    //printf("%d %d %d n",min,G.arc[v][w],D[w]);

&lt;/div&gt;

&lt;div&gt;

                    D[w]=min+G.arc[v][w];

&lt;/div&gt;

&lt;div&gt;

                    P[w]=P[v];

&lt;/div&gt;

&lt;div&gt;

               }

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

int main()

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     MGraph G;

&lt;/div&gt;

&lt;div&gt;

     InitGraph(G);

&lt;/div&gt;

&lt;div&gt;

     ShortestPath\_DIJ(G,0);

&lt;/div&gt;

&lt;div&gt;

     getchar();

&lt;/div&gt;

&lt;div&gt;

     return 0;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

----------Output----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

v0v5

&lt;/div&gt;

&lt;div&gt;

v0v3

&lt;/div&gt;

&lt;div&gt;

v0v3v4

&lt;/div&gt;

&lt;div&gt;

v0v3v4v2

&lt;/div&gt;

&lt;div&gt;

算是打出正确结果了，改天再认真研究一下。

&lt;/div&gt;

&lt;/div&gt;</summary><category term="图的最短路径"></category></entry><entry><title>和archlinux初接触</title><link href="http://blog.junfeng.ca/e5928carchlinuxe5889de68ea5e8a7a6.html" rel="alternate"></link><updated>2012-11-22T22:49:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-22:e5928carchlinuxe5889de68ea5e8a7a6.html</id><summary type="html">&lt;p&gt;我发现每隔一段时间都想装一下系统。今天在虚拟机里装了archlinux。用的是官方的livecd，确实是livecd，只是没有桌面环境而已。比较一下还是gentoo的livecd做的比较好，那叫一个漂亮，虽然它是最难装的。而arch的livecd就略显粗糙了，只有字符界面。由于是在virtualbox中装的，也就省了配置网络的步骤。直接分区，使用cgdisk把sda分成了两个区，一个做根，一个做home，格式化文件系统，挂载分区。然后设置好源，更新源。&lt;/p&gt;
&lt;p&gt;# pacstrap /mnt base base-devel ／mnt是你挂载的根分区目录。&lt;br /&gt;
# genfstab -p /mnt &gt;&gt; /mnt/etc/fstab
如果忘记这部，重启后文件系统会变成只读，不知道为什么。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;# arch-chroot /mnt 若出现“chroot failed to run command /bin/sh&amp;#39; no such file or directory”

 则再依次键入上面三个命令，就不知道什么时候成功了。

一系列配置后，卸载livecd，重启，登录系统，默认只有字符界面，

#ping www.google.com 若出现unknow host，请继续使用livecd根据archlinux-wiki设置网络。

好像在由chroot进入新系统可能ping的通，但若不配置网络，直接重装好的系统启动，会无法联网（虚拟机选择的是NAT方式联网）。

设置好网络后，开始安装桌面环境。

首先安装X11

# pacman -S xorg-server xorg-xinit xorg-utils xorg-server-utils

我们学校的源总是差几M造成无法安装，

无奈在/etc/pacman.d/mirrorlist加上网易的源才算把X装上。

虚拟机不用装显卡驱动，又省了不少事。

安装输入设备驱动

# pacman -S xf86-input-synaptics （笔记本所需）

安装测试环境

# pacman -S xorg-twm xorg-xclock xterm

启动X 之前删除～／.xinitrc文件

startx

可以看到启动了一些窗口

exit关闭X。

然后苦难的日子就开始了。

#pacman -S gnome gnome-extra 安装gnome，全部都装了下来，占用900多M空间，

键入 vi ~/.xinitrc 创建.xinitrc文件 写入exec gnome-session

startx 如图

无法启动

#pacman -Rsn gnome 删除gnome环境

#pacman -S kde 安装kde，全装，占用1000多M

同样在.xinitc文件中写入 exec startkde 但X提示无法找到startkde

无奈安装openbox窗口管理器试试。

成功启动。

再装e17，没成功，源里没有。

然后装lxde ，xfce4都成功启动，但水平太低，不会配置，深感难看。

在这几个桌面环境，图形窗口都有同样的问题：

在浏览器中，鼠标无法滚动网页，两边都有黑框。

然后从中午一直折腾到现在，选修课也没去上。

再看gentoo livecd 真心叫一个漂亮。

各种桌面环境，软件都装的不少。

觉得自己水平太渣。

然后想把livecd直接复制到硬盘上，直接用。以为自己想到了一个好办法。

一搜索，发现还真行，有教程，是2007年的。

又要一段时间不折腾了。

参考：arch新手指南
&lt;/pre&gt;&lt;/div&gt;</summary><category term="arch安装"></category></entry><entry><title>光影声色</title><link href="http://blog.junfeng.ca/e58589e5bdb1e5a3b0e889b2.html" rel="alternate"></link><updated>2012-11-18T12:43:00+08:00</updated><author><name>LittleFish</name></author><id>tag:blog.junfeng.ca,2012-11-18:e58589e5bdb1e5a3b0e889b2.html</id><summary type="html">&lt;p&gt;by Littlefish&lt;/p&gt;
&lt;p&gt;小小的四方院落，堆满杂物的水泥花池里是和我同岁的石榴树，它一天天老了，每年都会长出新的皱纹和疤痕，有一天当它终于忍受不住虫子年复一年的啃噬，受不了越来越不正常的天气，受不了一辈又一辈的攀爬和掠夺，当它以不在一个新的春天重新发芽的姿态来宣告自己放弃了的时候，我们会可惜地把它移出那个小方坑，补种上其他的树木，可能还会重修打理那个小花池，使它真正的娇艳美丽。这样，就好像要昭示天下：“看，这是新的。”&lt;/p&gt;
&lt;p&gt;可是当老树不在了，我就失去了一个见证。我一直在想，和过去说再见了，就真的是再也不见了。&lt;/p&gt;
&lt;p&gt;幼儿园，出疹子&lt;/p&gt;
&lt;p&gt;流行出风疹的那段时间，身上长了小小痒痒红红的疹子，不用被带去大医院看病，只消得在小诊所里输两瓶配了什么名堂的药水，然后在屋子里呆一个星期，不要见明亮的光，电视也不要看就会自动痊愈。每天早上睡了懒觉，早饭和午饭只隔了两三个小时，中午又被哄去睡觉。下午，往往我还没睡醒时家里的人都是已经离开家了。于是就一个人在爸爸妈妈的大床上醒来，看大红金丝绒窗帘外的日影从高高的外墙顶上慢慢的向下挪，我知道一旦日影由明亮的白色变成暗暗的黄色，由外墙到窗户中间的窗棂上。大门外一定会有解锁开门的声音，大多是奶奶或妈妈回来了，然后然后赶紧闭眼装睡，在心里面细细想一回今天下午的景象。不能让她们怎么知道一个人独处的乐趣。虽然还不识几个字，看不懂报纸和书，看不懂电视也不能看，但我看得到灰尘在空中慢慢地慢慢地飘着，从光亮的“殿堂”到暗暗“平民窟”，灰尘就好像是被打入大牢，脱去了华服谁也找不到它，不知道有没有同伴愿意脱离光亮的“殿堂”和它去黑暗里。我看得到太阳在外墙上先是明亮的刺眼的傲慢的赖在那里，但肥胖残暴自大的它打不过时间，最终还是被时间拖下宝座，看着它从高高的座位上滑下一个又一个窗棂，等滑到了中间那一个，大门开锁的清脆的声音就彻底宣告它在这次战役中失败了。这时回放结束，她们也进屋来看我，嗯哼两声装作刚睡醒的样子睁开眼，等着固定的那句话：“哎呀，你这个小丫头才睡醒啊！”&lt;/p&gt;
&lt;p&gt;书和树&lt;/p&gt;
&lt;p&gt;小县城里窄马路，人多车少不拥挤。有条路两侧栽着高高大大的泡桐。树皮被雨水泡起了苍白色死皮，大大的树节睁着眼睛看着马路上的来来往往，它在等谁给它一次回头一次注视吧。夏日降临，树冠一派鲜绿，大大的手掌叶子挤挤嚷嚷的拥在一起又略略害羞着都欠着身子，不知道是不是因为受不了太阳热烈的注视。刺眼的日光经这日光过滤后碎成了星星点点洒在灰灰的柏油路上，洒在我的脚趾上。我和姐姐就在这绿荫下站着，看着爸爸把自行车停好，然后被领着通过一道神奇的楼梯，推开一扇薄薄的木门，铺面而来的书就在对着我微笑了。很普通的新华书店阅览室，很普通的书架和很普通的书，就这样一天一天的被带来看书，看成了一个两个小书虫。但最喜欢最深刻的书却不是在新华书店里看到的，而是在家啃的武侠小说。飞雪连天射白鹿，笑书神侠倚碧鸳，14本书看的当时的我昏天暗地，爸妈禁止我，那就躲在被窝里打着小手电看，装着上厕所躲在厕所看，把书拿到房顶藏在隔热层里偷空跑去看······偷着看书的最满足。&lt;/p&gt;
&lt;p&gt;窗口与其他&lt;/p&gt;
&lt;p&gt;春末夏初午时悠长，我的窗前的石榴树茂密着。我的初中，黑暗与阳光并存。阳光最令人愿意回想，那是初二下学期的阳光，摆脱了初一的不堪和混乱，被贴着头皮剪短的头发也表现出可喜的样子，乖乖地学习，和一些人交朋友，学他们的沉默，也学会了安静的笑。那时的阳光不清淡也不张扬，空气是透明的，灰尘是可见的，终日裹着长长的裤子，心中将一份小小的幻想压到最低，只在将头埋在胳膊里午睡的时候才会暗暗的让自己喜欢着······那个接踵而至的多雨的暑假，重新将自己交给了书店。有阳光的日子，就在中午街道上空无一人时走在软软的柏油路上朝着那个小小的书店前进；夏雨淫淫时，打着伞走在湿漉漉的气团里却知道我没有发霉，而是在重生，积累着重生的力量，至少，至少不再是混混噩噩的孩子了，学会与大部分人交往的技巧，没有了突兀。&lt;/p&gt;
&lt;p&gt;阳光是不能直入我的屋子，这使得我的屋子稍比外面的酷热令人舒服，刚刚适合睡午觉。可是不能睡啊！初三了，不满两个月后就要中考了，今天刚做的卷子上出错的题目还没记下，从老师那里借来的英语磁带还要再听一个练习，过会儿还要早早的去学校继续看没有看完的数学物理化学······好像好像，整个初中在初三的下学期完成了自己的第一次改变，很清楚自己想要做什么，会按部就班的心无旁骛的学习，与别人的交流更少了，更会观察了，但更漠不关心了，那是成长的初次胜利，只是那种宁静满足的感觉再也没有过了······&lt;/p&gt;
&lt;p&gt;15岁后，流于他人相同，再无故事。时隔4年，没有成长。&lt;/p&gt;</summary><category term="成长和书"></category></entry><entry><title>图的最小生成树</title><link href="http://blog.junfeng.ca/e59bbee79a84e69c80e5b08fe7949fe68890e6a091.html" rel="alternate"></link><updated>2012-11-17T23:34:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-17:e59bbee79a84e69c80e5b08fe7949fe68890e6a091.html</id><summary type="html">&lt;p&gt;普里姆算法&lt;/p&gt;
&lt;p&gt;----------data.txt-----------&lt;/p&gt;
&lt;div&gt;

&lt;div&gt;

6 10

&lt;/div&gt;

&lt;div&gt;

0 6 1 5 0 0

&lt;/div&gt;

&lt;div&gt;

6 0 5 0 3 0

&lt;/div&gt;

&lt;div&gt;

1 5 0 5 6 4

&lt;/div&gt;

&lt;div&gt;

5 0 5 0 0 2

&lt;/div&gt;

&lt;div&gt;

0 3 6 0 0 6

&lt;/div&gt;

&lt;div&gt;

0 0 4 2 6 0

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

----------code.cpp---------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

\#include\&lt;stdio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;limits.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;stdlib.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#define Max\_vnum 50

&lt;/div&gt;

&lt;div&gt;

typedef struct {

&lt;/div&gt;

&lt;div&gt;

     int arcs[Max\_vnum][Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

     int vexnum,arcnum;

&lt;/div&gt;

&lt;div&gt;

}MGraph;

&lt;/div&gt;

&lt;div&gt;

struct Closedge{int adjvex;int weight;};

&lt;/div&gt;

&lt;div&gt;

int weight=0;

&lt;/div&gt;

&lt;div&gt;

void InitGraph(MGraph &amp;G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     FILE \*fin;

&lt;/div&gt;

&lt;div&gt;

     int t;

&lt;/div&gt;

&lt;div&gt;

     fin=fopen("data.txt","r");

&lt;/div&gt;

&lt;div&gt;

     fscanf(fin,"%d%d",&amp;G.vexnum,&amp;G.arcnum);

&lt;/div&gt;

&lt;div&gt;

     for(int i=0;i\&lt;G.vexnum;i++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          for(int j=0;j\&lt;G.vexnum;j++)

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

               fscanf(fin,"%d",&amp;t);

&lt;/div&gt;

&lt;div&gt;

               if(t==0)

&lt;/div&gt;

&lt;div&gt;

                    G.arcs[i][j]=INT\_MAX;

&lt;/div&gt;

&lt;div&gt;

               else

&lt;/div&gt;

&lt;div&gt;

                    G.arcs[i][j]=t;

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     fclose(fin);

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void MiniSpanTree\_PRIM(MGraph G,int u)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     struct Closedge closedge[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

     int i,j,k;

&lt;/div&gt;

&lt;div&gt;

     int t;

&lt;/div&gt;

&lt;div&gt;

     k=u;

&lt;/div&gt;

&lt;div&gt;

     for(j=0;j\&lt;G.vexnum;++j)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          if(j!=k)

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

               closedge[j].weight=G.arcs[k][j];

&lt;/div&gt;

&lt;div&gt;

               closedge[j].adjvex=u;

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     closedge[k].weight=0;

&lt;/div&gt;

&lt;div&gt;

    for(i=1;i\&lt;G.vexnum;++i)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          t=INT\_MAX;

&lt;/div&gt;

&lt;div&gt;

          for(j=0;j\&lt;G.vexnum;++j)

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

              if(closedge[j].weight!=0)

&lt;/div&gt;

&lt;div&gt;

               {

&lt;/div&gt;

&lt;div&gt;

                    if(t\&gt;closedge[j].weight)

&lt;/div&gt;

&lt;div&gt;

                    {

&lt;/div&gt;

&lt;div&gt;

                         t=closedge[j].weight;

&lt;/div&gt;

&lt;div&gt;

                         k=j;

&lt;/div&gt;

&lt;div&gt;

                    }

&lt;/div&gt;

&lt;div&gt;

               }

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

          weight+=t;

&lt;/div&gt;

&lt;div&gt;

          printf("(v%d,v%d)n",closedge[k].adjvex+1,k+1);

&lt;/div&gt;

&lt;div&gt;

        closedge[k].weight=0;

&lt;/div&gt;

&lt;div&gt;

          for(j=0;j\&lt;G.vexnum;++j)

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

               if(G.arcs[k][j]\&lt;closedge[j].weight)

&lt;/div&gt;

&lt;div&gt;

               {

&lt;/div&gt;

&lt;div&gt;

                    closedge[j].adjvex=k;

&lt;/div&gt;

&lt;div&gt;

                    closedge[j].weight=G.arcs[k][j];

&lt;/div&gt;

&lt;div&gt;

               }

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

int main()

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     MGraph G;

&lt;/div&gt;

&lt;div&gt;

     InitGraph(G);

&lt;/div&gt;

&lt;div&gt;

     MiniSpanTree\_PRIM(G,0);

&lt;/div&gt;

&lt;div&gt;

     printf("weight=%dn",weight);

&lt;/div&gt;

&lt;div&gt;

     return 0;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

------------------output----------------

&lt;/div&gt;

&lt;div&gt;

(v1,v3)  
(v3,v6)  
(v6,v4)  
(v3,v2)  
(v2,v5)  
weight=15

&lt;/div&gt;</summary><category term="最小生成树"></category></entry><entry><title>深度优先搜索图</title><link href="http://blog.junfeng.ca/e6b7b1e5baa6e4bc98e58588e6909ce7b4a2e59bbe.html" rel="alternate"></link><updated>2012-11-16T17:36:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-16:e6b7b1e5baa6e4bc98e58588e6909ce7b4a2e59bbe.html</id><summary type="html">&lt;p&gt;邻接矩阵&lt;/p&gt;
&lt;p&gt;------------data.txt-----------&lt;/p&gt;
&lt;div&gt;

&lt;div&gt;

7 12

&lt;/div&gt;

&lt;div&gt;

0 0 1 0 0 0 0

&lt;/div&gt;

&lt;div&gt;

1 0 0 0 0 0 0

&lt;/div&gt;

&lt;div&gt;

0 1 0 0 0 1 0

&lt;/div&gt;

&lt;div&gt;

0 1 1 0 1 0 0

&lt;/div&gt;

&lt;div&gt;

0 1 0 0 0 0 0

&lt;/div&gt;

&lt;div&gt;

0 0 0 1 0 0 0

&lt;/div&gt;

&lt;div&gt;

0 0 0 1 1 1 0

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

------------code.cpp----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

\#include\&lt;stdio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;stdlib.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#define Max\_vnum 50

&lt;/div&gt;

&lt;div&gt;

int visited[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

typedef struct {int vexnum,arcnum;int arcs[Max\_vnum][Max\_vnum];}Graph;

&lt;/div&gt;

&lt;div&gt;

void InitGraph(Graph &amp;G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     FILE \*fin;

&lt;/div&gt;

&lt;div&gt;

     int i,j;

&lt;/div&gt;

&lt;div&gt;

     fin=fopen("data.txt","r");

&lt;/div&gt;

&lt;div&gt;

     fscanf(fin,"%d%d",&amp;G.vexnum,&amp;G.arcnum);

&lt;/div&gt;

&lt;div&gt;

     for(i=1;i\&lt;=G.vexnum;i++)

&lt;/div&gt;

&lt;div&gt;

          for(j=1;j\&lt;=G.vexnum;j++)

&lt;/div&gt;

&lt;div&gt;

               fscanf(fin,"%d",&amp;G.arcs[i][j]);

&lt;/div&gt;

&lt;div&gt;

     fclose(fin);

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void DFS(Graph G,int v)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     int w=0;

&lt;/div&gt;

&lt;div&gt;

     visited[v]=1;

&lt;/div&gt;

&lt;div&gt;

     printf("%dn",v);

&lt;/div&gt;

&lt;div&gt;

     while(w\&lt;=G.vexnum&amp;&amp;!G.arcs[v][++w]);

&lt;/div&gt;

&lt;div&gt;

     while(w\&lt;=G.vexnum)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          if(!visited[w])

&lt;/div&gt;

&lt;div&gt;

               DFS(G,w);

&lt;/div&gt;

&lt;div&gt;

        while(w\&lt;=G.vexnum&amp;&amp;!G.arcs[v][++w]);

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void DFSTraverse(Graph G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     for(int v=1;v\&lt;=G.vexnum;v++) visited[v]=0;

&lt;/div&gt;

&lt;div&gt;

     for(v=1;v\&lt;=G.vexnum;v++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          if(!visited[v])

&lt;/div&gt;

&lt;div&gt;

               DFS(G,v);

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

int main()

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     Graph G;

&lt;/div&gt;

&lt;div&gt;

     InitGraph(G);

&lt;/div&gt;

&lt;div&gt;

     DFSTraverse(G);

&lt;/div&gt;

&lt;div&gt;

     return 0;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

邻接表

&lt;/div&gt;

&lt;div&gt;

----------data.txt-----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

6 9

&lt;/div&gt;

&lt;div&gt;

0 1 20

&lt;/div&gt;

&lt;div&gt;

0 2 16

&lt;/div&gt;

&lt;div&gt;

1 4 13

&lt;/div&gt;

&lt;div&gt;

1 2 15

&lt;/div&gt;

&lt;div&gt;

1 5 28

&lt;/div&gt;

&lt;div&gt;

5 4 12

&lt;/div&gt;

&lt;div&gt;

4 3 12

&lt;/div&gt;

&lt;div&gt;

2 3 14

&lt;/div&gt;

&lt;div&gt;

5 3 12

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

---------code.cpp----------

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

\#include\&lt;stdio.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#include\&lt;stdlib.h\&gt;

&lt;/div&gt;

&lt;div&gt;

\#define Max\_vnum 50

&lt;/div&gt;

&lt;div&gt;

int visited[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

typedef struct ArcNode{

&lt;/div&gt;

&lt;div&gt;

     int adjvex;

&lt;/div&gt;

&lt;div&gt;

     double weight;

&lt;/div&gt;

&lt;div&gt;

     struct ArcNode \*next;

&lt;/div&gt;

&lt;div&gt;

}ArcNode,\*AdjList[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

typedef struct {

&lt;/div&gt;

&lt;div&gt;

     AdjList vertices;

&lt;/div&gt;

&lt;div&gt;

     int vexnum,arcnum;

&lt;/div&gt;

&lt;div&gt;

}ALGraph;

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

void InitGraph(ALGraph &amp;G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

        FILE \*fin;

&lt;/div&gt;

&lt;div&gt;

     int adjvex,index;

&lt;/div&gt;

&lt;div&gt;

     double weight;

&lt;/div&gt;

&lt;div&gt;

     ArcNode \*p,\*ptem[Max\_vnum];

&lt;/div&gt;

&lt;div&gt;

     fin=fopen("data.txt","r");

&lt;/div&gt;

&lt;div&gt;

     fscanf(fin,"%d%d",&amp;G.vexnum,&amp;G.arcnum);

&lt;/div&gt;

&lt;div&gt;

     for(int j=0;j\&lt;G.vexnum;j++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          G.vertices[j]=(ArcNode\*)malloc(sizeof(ArcNode));

&lt;/div&gt;

&lt;div&gt;

          G.vertices[j]-\&gt;next=NULL;

&lt;/div&gt;

&lt;div&gt;

          ptem[j]=G.vertices[j];

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

        for(int i=0;i\&lt;G.arcnum;i++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          fscanf(fin,"%d%d%lf",&amp;adjvex,&amp;index,&amp;weight);

&lt;/div&gt;

&lt;div&gt;

                p=(ArcNode\*)malloc(sizeof(ArcNode));

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;adjvex=adjvex;

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;weight=weight;

&lt;/div&gt;

&lt;div&gt;

          p-\&gt;next=NULL;

&lt;/div&gt;

&lt;div&gt;

          ptem[index]-\&gt;next=p;

&lt;/div&gt;

&lt;div&gt;

          ptem[index]=p;

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

     fclose(fin);

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void DFS(ALGraph G,int v)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     ArcNode \*p;

&lt;/div&gt;

&lt;div&gt;

     visited[v]=1;

&lt;/div&gt;

&lt;div&gt;

     printf("%d n",v);

&lt;/div&gt;

&lt;div&gt;

     p=G.vertices[v]-\&gt;next;

&lt;/div&gt;

&lt;div&gt;

     while(p!=NULL)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          if(!visited[p-\&gt;adjvex])

&lt;/div&gt;

&lt;div&gt;

          {

&lt;/div&gt;

&lt;div&gt;

               printf("weight=%7.2lfn",p-\&gt;weight);

&lt;/div&gt;

&lt;div&gt;

               DFS(G,p-\&gt;adjvex);

&lt;/div&gt;

&lt;div&gt;

          }

&lt;/div&gt;

&lt;div&gt;

        p=p-\&gt;next;

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

void DFSTraverse(ALGraph G)

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     for(int v=0;v\&lt;G.vexnum;v++) visited[v]=0;

&lt;/div&gt;

&lt;div&gt;

     for(v=0;v\&lt;G.vexnum;v++)

&lt;/div&gt;

&lt;div&gt;

     {

&lt;/div&gt;

&lt;div&gt;

          if(!visited[v])

&lt;/div&gt;

&lt;div&gt;

               DFS(G,v);

&lt;/div&gt;

&lt;div&gt;

     }

&lt;/div&gt;

&lt;div&gt;

     return ;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;div&gt;

int main()

&lt;/div&gt;

&lt;div&gt;

{

&lt;/div&gt;

&lt;div&gt;

     ALGraph G;

&lt;/div&gt;

&lt;div&gt;

     InitGraph(G);

&lt;/div&gt;

&lt;div&gt;

     DFSTraverse(G);

&lt;/div&gt;

&lt;div&gt;

     return 0;

&lt;/div&gt;

&lt;div&gt;

}

&lt;/div&gt;

&lt;/div&gt;</summary><category term="深度优先搜索"></category></entry><entry><title>专注</title><link href="http://blog.junfeng.ca/e4b893e6b3a8.html" rel="alternate"></link><updated>2012-11-10T23:51:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-10:e4b893e6b3a8.html</id><summary type="html">&lt;p&gt;专注，一种难能可贵的品质，在我身上正在减少。&lt;/p&gt;
&lt;p&gt;这学期去自习的时间少了，似乎自己能有更多时间来学习自己喜欢的东西，但事实却不是这样的。&lt;/p&gt;
&lt;p&gt;对着电脑，点点这个，点点那个，时间就过去了。总是被一些事情拖住，装了xfce4，又删，装了e17，再删，来来回回好几次，这时间就过去了，最后留在了gnome-classic下，把ubuntu默认的unity删了，已经不想再折腾了。&lt;/p&gt;
&lt;p&gt;我喜欢专注的产品，坚信一种产品只做一种功能的理念。&lt;/p&gt;
&lt;p&gt;mp3只能听歌，电纸书只能用来看书，手机只能打电话，收发短信，而电脑是用来练习和工作的。功能单一，你使用的时候，就会越专注，效率自然变高。而功能越复杂，使用者的效率反而越低（个人之见）。&lt;/p&gt;
&lt;p&gt;但现在电脑功能如此之多，甚至手机，平板都花样百出，我们被各种各样的声音，图像所打扰。&lt;/p&gt;
&lt;p&gt;曾经我以为，电脑可以用来学习新知识，并且接触电脑的很长一段时间内也是这样认为，为此，我怀着美好的期望，下载了将近40G的专业书，希望着自己在电脑上学习。&lt;/p&gt;
&lt;p&gt;但我错了，现在的电脑是如此的功能多样，使我花在那些电子书上的时间不到使用时间的十分之一，然后，我决定使用电纸书来看那些专业书，但我又错了，大多数专业书都是A4纸扫描版的，在kindle上那真的变成了蝇头小字，然后据说，A4可以转6寸pdf的，于是又是一番折腾，什么切边，ocr，虚拟打印机，变换格式的软件都试过了，却对扫描版pdf无可奈何，当然，大多数专业书都能找到mobi格式的电子书，但那是英文原版的。我这种英文不好的人就享受不到那种格式的舒心了，所以说在kindle下看专业书体验并不佳。但我并非说kindle不好，相反，我感觉它很赞，总的来说，kindle适合看一些文学方面的书，这方面适合kindle的书倒是挺多了，抛开mobi不说，6寸的pdf也很好找，如果我能把电脑里那一千多本6寸的pdf书看完，那kindle真的是物超所值了。&lt;/p&gt;
&lt;p&gt;所以说：最好的学习方法就是老老实实的拿起纸质书吧，如果再有个不联网的电脑供练习那就更好了。&lt;/p&gt;
&lt;p&gt;比较我晚上去自习和呆在宿舍，我感觉呆在宿舍更累，而去自习真的给我以快乐,满足。&lt;/p&gt;
&lt;p&gt;而我希望以后能这样：&lt;/p&gt;
&lt;p&gt;mp3只用来听音乐。&lt;/p&gt;
&lt;p&gt;电视用来看电影。&lt;/p&gt;
&lt;p&gt;手机只用来联系。&lt;/p&gt;
&lt;p&gt;kindle用来看文学书和获取资讯。&lt;/p&gt;
&lt;p&gt;纸质书用来学习。&lt;/p&gt;
&lt;p&gt;电脑只是用来工作。&lt;/p&gt;
&lt;p&gt;找回专注，make an effort for life&lt;/p&gt;
&lt;p&gt;专注可以提高效率，可以给人满足感，可以给人以安宁，带给人快乐。&lt;/p&gt;
&lt;p&gt;你又有多久没专注过了呢？？&lt;/p&gt;</summary><category term="lifetyle"></category></entry><entry><title>向往中的午后时光</title><link href="http://blog.junfeng.ca/e59091e5be80e4b8ade79a84e58d88e5908ee697b6e58589.html" rel="alternate"></link><updated>2012-11-03T22:36:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-11-03:e59091e5be80e4b8ade79a84e58d88e5908ee697b6e58589.html</id><summary type="html">&lt;p&gt;秋去冬来，西安的秋天如别人所说那样短暂，穿上了松松的毛衣，准备迎接冬的亲密接触。这时候更显示出了西安一天如四季的奇葩气候。而今天又加了点料：风冷光暖。犹豫再三，终于是去自习去了。来到教室，找了个靠窗的位置，冷天的阳光似乎更珍贵。而对于我这种不经常见阳光的人来说，更是如此。阳光照在身上，心情也一下子变好了。接杯热水，放在阳光下，树叶摇摆着，桌上忽明忽暗。这应该就是我想要的午后时光。近段时间，似乎一直在给自己压力，心情不是很舒畅。想要学各种知识，但却快连必修课都无法搞定了。早已明白，自己已不如去年努力了。心变得有点浮躁了。&lt;/p&gt;</summary><category term="风冷光暖"></category></entry><entry><title>ubuntu 使用mentohust连接校园网</title><link href="http://blog.junfeng.ca/ubuntu-e4bdbfe794a8mentohuste8bf9ee68ea5e6a0a1e59bade7bd91.html" rel="alternate"></link><updated>2012-10-31T18:52:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-10-31:ubuntu-e4bdbfe794a8mentohuste8bf9ee68ea5e6a0a1e59bade7bd91.html</id><summary type="html">&lt;p&gt;环境：XDU+Y470+分到静态IP&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题外话&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;突然间收到了静态IP，windows已无法联网，只好立即装linux，先装的DebianAMD64，启动时出现花屏，以为是版本的问题，重装成i386，依旧花屏，使用mentohust，成功联网，但显卡驱动没装好，显示影响基本浏览，然后nvidia官网下载闭源驱动，总是提示gcc版本不匹配，装成它要求的版本还是不成功。无奈换成ubuntuAMD64，显示正常，也连上了网，但重启后，又是无法联网。于是再换DebianAMD64，依旧花屏，且汉字显示为块状，......又换回ubuntu。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先下载mentohust（见附件）&lt;/p&gt;
&lt;p&gt;sudo tar zxf mentohust.tar.gz -C / 解压到根目录。&lt;/p&gt;
&lt;p&gt;cd /mentohust 进入mentohust目录&lt;/p&gt;
&lt;p&gt;chmod a+x install 加入可执行权限&lt;/p&gt;
&lt;p&gt;sudo ./install 安装&lt;/p&gt;
&lt;p&gt;sudo gedit /etc/mentohust.conf&lt;/p&gt;
&lt;p&gt;填入用户名 密码&lt;/p&gt;
&lt;p&gt;dns设置为114.114.114.114 保存&lt;/p&gt;
&lt;p&gt;为网卡配置静态IP地址&lt;/p&gt;
&lt;p&gt;编辑文件/etc/network/interfaces:&lt;/p&gt;
&lt;p&gt;sudo gdeit /etc/network/interfaces&lt;/p&gt;
&lt;p&gt;并用下面的行来替换有关eth0的行:&lt;/p&gt;
&lt;p&gt;# The primary network interface&lt;/p&gt;
&lt;p&gt;auto eth0&lt;/p&gt;
&lt;p&gt;iface eth0 inet static&lt;/p&gt;
&lt;p&gt;address IP地址&lt;/p&gt;
&lt;p&gt;gateway 网关&lt;/p&gt;
&lt;p&gt;netmask 子网掩码&lt;/p&gt;
&lt;p&gt;dns-nameservers 114.114.114.114&lt;/p&gt;
&lt;p&gt;保持和/etc/mentohust.conf 一致&lt;/p&gt;
&lt;p&gt;sudo /etc/init.d/networking restart 重启网络使配置生效。&lt;/p&gt;
&lt;p&gt;尽量不要在/etc/resolv.conf设置dns，每次重启后该文件都会被重置。&lt;/p&gt;
&lt;p&gt;然后 sudo mentohust，&lt;/p&gt;
&lt;p&gt;出现：&lt;/p&gt;
&lt;p&gt;认证成功!&lt;/p&gt;
&lt;p&gt;发送心跳包以保持在线...&lt;/p&gt;
&lt;p&gt;欢迎来到linux世界。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;a href="http://xdlinux.info/wiki/index.php/Linux%E8%BF%9E%E6%8E%A5%E6%A0%A1%E5%9B%AD%E7%BD%91"&gt;linux连接校园网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;附件：&lt;a href="http://pan.baidu.com/share/link?shareid=114284&amp;amp;uk=2887257007"&gt;mentohust.tar.gz&lt;/a&gt;&lt;/p&gt;</summary><category term="mentohust"></category><category term="ubuntu"></category></entry><entry><title>python创建子进程</title><link href="http://blog.junfeng.ca/pythone5889be5bbbae5ad90e8bf9be7a88b.html" rel="alternate"></link><updated>2012-10-24T19:50:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-10-24:pythone5889be5bbbae5ad90e8bf9be7a88b.html</id><summary type="html">&lt;p&gt;在使用python的subprocess.Popen()创建的子进程死循环时，当设置shell=True时，使用subprocess.popen().kill()无法杀死子进程，然后换成&lt;/p&gt;
&lt;p&gt;os.kill(proc.pid,
signal.SIGKILL),同样无法杀死，郁闷纠结之。在kill()后加上wait(),防止僵尸进程，同样无法结束。看来不是加不加wait()的事情。于是加了一条print
"PID:%d" %
proc.pid(),打印出子进程PID,发现问题了，打印出的进程号，和top显示的不一样，总是相差1，&lt;/p&gt;
&lt;p&gt;RT&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/10/bug.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/10/bug-300x168.png" title="bug" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;于是把改成os.kill(proc.pid+1,signal.SIGKILL), 成功杀死子进程。&lt;/p&gt;
&lt;p&gt;于是很激动以为发现了python的bug，想着跟python社区发个邮件报告一下。&lt;/p&gt;
&lt;p&gt;当我查看subprocess的官方说明时，发现原来人家早有提示啊，&lt;/p&gt;
&lt;blockquote&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Popen.pid&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The process ID of the child process.&lt;span
style="color: #ff0000;"&gt;Note that if you set the &lt;em&gt;shell&lt;/em&gt; argument
to &lt;code&gt;True&lt;/code&gt;, this is the process ID of the spawned shell.&lt;/span&gt;
&lt;/p&gt;
&lt;div&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;还是我看文档不够细心。&lt;span
style="color: #000000;"&gt;这句话的google翻译结果是：&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span
style="color: #000000;"&gt;“需要注意的是，如果你的shell参数设置为True，这是衍生shell的进程ID。”&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但为什么相差总是相差1呢？官方也没给出解释。&lt;/p&gt;
&lt;p&gt;于是去掉shell=True,kill(),和os.kill(pid,signal.SIGKILL)都能工作。&lt;/p&gt;
&lt;p&gt;最终源代码：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/10/Screenshot-from-2012-10-24-195604.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/10/Screenshot-from-2012-10-24-195604-300x215.png" title="Screenshot from 2012-10-24 19:56:04" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;helloworld.c测试代码：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jcodef.com/wp-content/uploads/2012/10/Screenshot-from-2012-10-24-195532.png"&gt;&lt;img alt="" src="http://jcodef.com/wp-content/uploads/2012/10/Screenshot-from-2012-10-24-195532-300x122.png" title="Screenshot from 2012-10-24 19:55:32" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主要是因为自己看文档不够细心，同时早就应该尝试把shell=True去掉的。也不至于浪费那么长时间。&lt;/p&gt;</summary><category term="subprocess"></category></entry><entry><title>linux下成功着陆facebook</title><link href="http://blog.junfeng.ca/linux-e4b88b-e68890e58a9fe79d80e99986facebook.html" rel="alternate"></link><updated>2012-10-24T15:49:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-10-24:linux-e4b88b-e68890e58a9fe79d80e99986facebook.html</id><summary type="html">&lt;p&gt;许久不发日志，今天想发日志来着，发现我进不了我的网站了。生在和谐社会，无奈只好配置一下goagent。因为已换linux，虽然那个插件被google同步过来了，但程序还是要下载滴。简单配置一下，成功着陆facebook。貌似goagent那个软件包还是linux和windows下都可以用啊！看着那些exe文件挺怪异的。&lt;/p&gt;</summary><category term="goagent"></category></entry><entry><title>一周心情（一）</title><link href="http://blog.junfeng.ca/e4b880e591a8e5bf83e68385efbc88e4b880efbc89.html" rel="alternate"></link><updated>2012-10-06T00:49:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-10-06:e4b880e591a8e5bf83e68385efbc88e4b880efbc89.html</id><summary type="html">&lt;ul&gt;
&lt;li&gt;一年前的这个时候我们还是新人，然后我们就老了！&lt;/li&gt;
&lt;li&gt;想学各种技术，还想一下子学完、学会，但我不是天才。有点累&lt;/li&gt;
&lt;li&gt;生活中不应该只有代码，还要有音乐、电影、动漫、摄影。貌似这短时间把这些忽略了。&lt;/li&gt;
&lt;li&gt;苦逼的程序猿，敲代码敲了一天。&lt;/li&gt;
&lt;/ul&gt;</summary><category term="急功近利了"></category></entry><entry><title>熟悉的界面回来了</title><link href="http://blog.junfeng.ca/e7869fe68289e79a84e7958ce99da2e59b9ee69da5e4ba86.html" rel="alternate"></link><updated>2012-10-04T01:59:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-10-04:e7869fe68289e79a84e7958ce99da2e59b9ee69da5e4ba86.html</id><summary type="html">&lt;p&gt;在这将近两点的时刻，我终于把wordpress完整的召唤回来了！&lt;/p&gt;
&lt;p&gt;我不该删服务器上的wordpress文件的，虽然我备份了，但却还原不了！&lt;/p&gt;
&lt;p&gt;之所以没成功，可能是我挂代理太频繁了，然后往服务器上上传不了文件，也没法重新安装！&lt;/p&gt;
&lt;p&gt;Cpanel自带的备份还原真心不好用，可能是我不会用。&lt;/p&gt;
&lt;p&gt;本来是想换成python后台脚本的，可是貌似服务器不支持python-django架设。&lt;/p&gt;
&lt;p&gt;而且我太鲁莽了！应该再测试一下的！&lt;/p&gt;</summary><category term="写后台"></category></entry><entry><title>Python安装MySQLdb</title><link href="http://blog.junfeng.ca/pythone5ae89e8a385mysqldb.html" rel="alternate"></link><updated>2012-09-28T00:02:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-28:pythone5ae89e8a385mysqldb.html</id><summary type="html">&lt;p&gt;本来装的Python2.7.3，后来因为一些原因换成了2.5.2，而在今天装MySQLdb的时候出问题了。在该&lt;a href="http://www.djangoproject.com/r/python-mysql/"&gt;http://www.djangoproject.com/r/python-mysql/&lt;/a&gt;下下载MySQLdbWindows安装包，装完之后，在Python环境下import
 MySQLdb&lt;/p&gt;
&lt;p&gt;出错。然后上网搜，各种教程。都没解决，抱着试一下的态度，重新装了Python2.7.3，再重装MySQLdb，装的时候，识别出Python2.7，就明白弄对了。cmd-&gt;python
import MySQLdb 无异常抛出，成功。&lt;/p&gt;
&lt;p&gt;看来有时更新版本是必须的，这样能节省很多麻烦。但MySQLdb竟然不能识别低版本的Python解释器，这有何尝不是一个小bug呢！&lt;/p&gt;</summary><category term="MySQLdb安装"></category></entry><entry><title>Django Template</title><link href="http://blog.junfeng.ca/django-template.html" rel="alternate"></link><updated>2012-09-27T18:48:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-27:django-template.html</id><summary type="html">&lt;p&gt;跟着《The_Django_Book》敲代码，在第四章创建模版对象的时候遇到了问题，我按着书上的代码，敲了一遍又一遍，还是出错&lt;/p&gt;
&lt;p&gt;RT：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/template1.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/template1-300x184.jpg" title="template1" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;出错信息提示环境变量未设置，然后赶紧把/site-packages/django加入环境变量，再运行，还是不对，但我记得昨天明明成功了，遂上网百度，然后了解到昨天我是从我建立的那个项目进入的，于是试验之，&lt;/p&gt;
&lt;p&gt;RT：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/template2.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/template2-300x168.jpg" title="template2" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从manage.py 进入python的交互式界面，mysite/settings.py
会导入好所需程序的环境变量。然后python就不会抛出异常了&lt;/p&gt;
&lt;p&gt;哎！引以为鉴&lt;/p&gt;</summary><category term="Django_Template"></category></entry><entry><title>python server.py</title><link href="http://blog.junfeng.ca/python-server-py.html" rel="alternate"></link><updated>2012-09-21T23:25:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-21:python-server-py.html</id><summary type="html">&lt;p&gt;server.py源代码：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/serverpy.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/serverpy-300x166.jpg" title="serverpy" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/telnetpy.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/telnetpy.jpg" title="telnetpy" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过服务器实现和本机交互！&lt;/p&gt;</summary><category term="python server"></category></entry><entry><title>Debian下安装Google Chrome</title><link href="http://blog.junfeng.ca/debiane4b88be5ae89e8a385google-chrome.html" rel="alternate"></link><updated>2012-09-21T20:52:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-21:debiane4b88be5ae89e8a385google-chrome.html</id><summary type="html">&lt;p&gt;今天突然发现了一个小问题，wmaker下竟然没有一个可用的浏览器！自带的w3m实在过于奇葩，于是就在软件源里找可用的浏览器，可软件源今天也出问题了！不知怎么的竟然发现了我们学校的源没有公共许可密钥。于是开始自救。网上说在任意文件下新建个名为“key0x07DC563D1F41B907.asc”的文件。我建在home/下，键入命令：nano
key0x07DC563D1F41B907.asc&lt;/p&gt;
&lt;p&gt;输入以下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----&lt;br /&gt;
 Version: PGP Universal 2.0.3&lt;br /&gt;
 mQGiBDf3hHARBAC/pUIb79CHi2b1LdPI1pUgAMMVAcpLk+g+LRUcNnTVWrXBUkLv&lt;br /&gt;
 gjbraraA1jw728X7RE7BCqQc8TO2AkqZu4E16a4hFms58agPRtyXHcQMqRSBjkT2&lt;br /&gt;
 hXC73sO/nookcmtFNeiNSTTvrITcDabhs8rnVNYCJxpUm0yZBwnripzNlwCgl2OZ&lt;br /&gt;
 7W3M0hMahh/nPO/pqkQIO60D/RUoWs5bBZ0BAeTfUJpCjGpE0SiT/cryZSF9sKEx&lt;br /&gt;
 cPN135PURKVytofxc8bv2ZSd9v1CG+iO2JcmQ8ie7CD+qnub6AW9Uf6uFFfDpdgG&lt;br /&gt;
 2k2cZGoHMdiw6mnSb5fbvwCKgi9Nj3AOeDF7WcgFdQFLags28vfypL/RH2XhPfBe&lt;br /&gt;
 4EV+A/9TZ1Kxgk69dn3l5BGpwudmzHiD1142G7eZI1JlM4pJuOw6YY+NRDeVEbcF&lt;br /&gt;
 iP5diGZWdcoRYgwEEfLpgl7ok0ScRN3wPfZtmUl3GACsAZbxh06utkP2X3Lptopd&lt;br /&gt;
 PuoJhlKD6FpK99TDD34TWy76tBmigzm/CkLaTI4gawpWs5D89LQoQ2hyaXN0aWFu&lt;br /&gt;
 IE1hcmlsbGF0IDxtYXJpbGxhdEBkZWJpYW4ub3JnPohGBBARAgAGBQI9GPl1AAoJ&lt;br /&gt;
 ELed76p6J6DMsMwAn2/I4VYcMENSdO/FM+6Yb/1PGv+HAJ4zn+3i7Z+R/iDhx7c+&lt;br /&gt;
 luDpfBTe+IhGBBARAgAGBQI9GWSJAAoJELz2xg9ugWnSt6AAoJPHD0N6LnQMUZxv&lt;br /&gt;
 7MkcUIRE88CMAJwI5lVoJ0TCFHG/49pcjN7Lzbc1RohhBBMRAgAZBAsKBAMDFQMC&lt;br /&gt;
 AxYCAQIXgAUCQRiYygIZAQASB2VHUEcAAQEJEAfcVj0fQbkHn/IAmwahlSO4z8f3&lt;br /&gt;
 YToV+72CX6sWvkehAJ4q9zOytEMKy/Vk08w7h+3mOLR56IkBIgQQAQIADAUCQ7jd&lt;br /&gt;
 6AUDABJ1AAAKCRCXELibyletfNmOB/9V5AMQgN8WCxrToFjWf8aEN3v+6frpfUa/&lt;br /&gt;
 6u88J+31/6jGQI83lK1Kp9fIZQwA9JuZxT+hTwsmc6SiU3NnGQl8ZejupoJwvxex&lt;br /&gt;
 OPSB3CtzmhjB2VDNE5tU9yRq6Qpz9QNK0e4vl8pDvrUjkqHJH3VPz+ORYbPrsCHx&lt;br /&gt;
 afrIosI7alyjqv231i8mriOjFY5JDIXuj+xq4hMzGtFJOC4BNZWqtIH3tkFj2m/f&lt;br /&gt;
 l7SIwUa42YboT9IAfJ+ZVr2FZREOrXmVA9rDJPodAD8ComxS0VUWYxi85mE2KqPw&lt;br /&gt;
 HcARXGri10hmfSpiUBRH4snUZzJozEAgah5W/g/heSyiHYEGsPvtuQGNBDf3hM4Q&lt;br /&gt;
 BgCM2yVxcrBFgwUDOxbBqBbTEfYc5If3POLMRglvOuJ9/H1iEJ5Wk6+zcz21jxPa&lt;br /&gt;
 4FQrk2F/faGeRV1cy0A7qmibmQpvewJwgzeY7wOIulPYlAd23+VQPhN53GYVwO75&lt;br /&gt;
 GA1vst0tI26VRKscpt73PatCcykrgNWHWjvDKmDC4V2T+OFz4okOC1VYc9qfcVvH&lt;br /&gt;
 F1R3lgAnFBTObx49K1+UyGatvWiZTtofETDZ8aHzsd0ObJoLHHmmHye5bgE9yRLj&lt;br /&gt;
 5L8AAwUF/0L/TXmzjtJ3hmXC86OB7Vzqe/n8MVqWElq4OzzEXi0PxzbgLzcEN+KV&lt;br /&gt;
 o4iXaNZ2/oI79dLblYixS6wh/cG2XT6RTG1R1CiubmJXGiFn6xeAw5aiQTKZBjUi&lt;br /&gt;
 nXqFxR/ZtH4p8/ZAzk2SpAOEIp5Gqfg0OCxgHqWmNWR64vfPJKND6qcoQRQ8a+3V&lt;br /&gt;
 77xq0ZurHejwprjaUf7FHOK/u6lc8eW7JdCKisZ7efdGdu8QVFnmkpeHvyCyDpkC&lt;br /&gt;
 rc4mmetj4ohGBBgRAgAGBQI394TOAAoJEAfcVj0fQbkHp0QAnA3/HBLEhjAydk5n&lt;br /&gt;
 Z+PeV+Fxs+h8AJoDew5wFKb477LBOz0qyWxe+byZzg==&lt;br /&gt;
 =oDfT&lt;br /&gt;
 -----END PGP PUBLIC KEY BLOCK-----&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Crtl+o保存，Crtl+x退出nano。&lt;/p&gt;
&lt;p&gt;再在root下输入命令：apt-key add key0x07DC563D1F41B907.asc&lt;/p&gt;
&lt;p&gt;更新源，成功认证！&lt;/p&gt;
&lt;p&gt;但google，firefox，opera在源里都找不到！于是再次上网，由于对google的怀旧，就找装google
chrome的方法：&lt;/p&gt;
&lt;p&gt;nano /etc/apt/sources.list 打开源地址设置文件，追加google的源&lt;/p&gt;
&lt;p&gt;deb http://dl.google.com/linux/deb/ stable main&lt;/p&gt;
&lt;p&gt;同样要设置认证：&lt;/p&gt;
&lt;p&gt;输入：wget -q -O –
https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key
add -&lt;/p&gt;
&lt;p&gt;然后：apt-get update&lt;/p&gt;
&lt;p&gt;安装测试版：apt-get install google-chrome-beta&lt;/p&gt;
&lt;p&gt;不稳定版：apt-get install google-chrome-unstable&lt;/p&gt;
&lt;p&gt;不过貌似装下来比较大需要100多M的硬盘空间，这对爱惜内存、磁盘空间的linux用户可不算好。&lt;/p&gt;
&lt;p&gt;最后秀一下自己的劳动成果&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/igc.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/igc-300x230.jpg" title="igc" /&gt;&lt;/a&gt;&lt;/p&gt;</summary><category term="Debian装google chrome"></category></entry><entry><title>Linux菜鸟瞎折腾</title><link href="http://blog.junfeng.ca/linuxe88f9ce9b89fe79e8ee68a98e885be.html" rel="alternate"></link><updated>2012-09-20T23:37:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-20:linuxe88f9ce9b89fe79e8ee68a98e885be.html</id><summary type="html">&lt;p&gt;昨天在命令行下输入了aptitude
upgrade命令之后不知怎么的，linux内核竟然升级了，升级也挺好的，可关键是旧的版本也还存在。这样在开机时就出现了这种情况：&lt;br /&gt;
RT  &lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo1.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo1.jpg" title="buhuo1" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后我就不爽了，本来一个内核就有两个选项：一个是图形界面，一个是命令行。现在又多了一个内核，也就有四个选项可以选择了。&lt;/p&gt;
&lt;p&gt;实在是看着不舒服，也就一个小小的虚拟机，看着貌似装了四个系统！&lt;/p&gt;
&lt;p&gt;于是就在ChinaUnix论坛询问，感谢网友们的热心回答，我知道了怎么删除那个旧内核的方法:&lt;/p&gt;
&lt;p&gt;在终端或命令行下输入：&lt;/p&gt;
&lt;p&gt;dpkg --get-selections|grep linux&lt;/p&gt;
&lt;p&gt;然后在root权限下输入：&lt;/p&gt;
&lt;p&gt;dpkg --purge --force-remove-essential linux-image-XXX&lt;/p&gt;
&lt;p&gt;XXX为要卸载的旧的版本号&lt;/p&gt;
&lt;p&gt;就这样，成功卸载了旧的linux内核&lt;/p&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo2.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo2.jpg" title="buhuo2" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但是前面还是有那个蓝色的画面。继续请教，得知;&lt;/p&gt;
&lt;p&gt;grub需要升级到grub2。&lt;/p&gt;
&lt;p&gt;我键入命令：&lt;/p&gt;
&lt;p&gt;upgrade-from-grub-legacy&lt;/p&gt;
&lt;p&gt;在让选择安装在哪个文件夹下的时候，我尝试了好几次，就是选不中，按enter键会提示你不装grub会怎么怎么。。。&lt;/p&gt;
&lt;p&gt;我想装上啊，可是选不中！没办法，我只好选否！然后就悲剧了！&lt;/p&gt;
&lt;p&gt;RT&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/buhou3.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/buhou3.jpg" title="buhou3" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;没了操作系统启动程序，然后就Error了！&lt;/p&gt;
&lt;p&gt;我又向高手提问，可能是高手嫌我水平太次了，我也感觉很后悔！要是在服务器下，我这样的话那损失就大了！！&lt;/p&gt;
&lt;p&gt;于是我上网搜解决方法，可网上很多都是删除GRUB的方法！！我无奈，只好重装系统。最笨的一种方法！&lt;/p&gt;
&lt;p&gt;刚开始一切顺利，因为以前也装过几次，这次选的就是图形专家模式，可在选择linux内核版本的时候，我为了最求最新版，选了一个比较新的版本，可是快装成功的时候，竟然提示该内核版本不支持我的CPU，也多次退回去重新操作，可是还是没成功！&lt;/p&gt;
&lt;p&gt;万般无奈，再次重装，这次选的是普通模式（install），在装到选择APT源的时候，发现无法更改APT源，只能从国外的源里下载，十几K的速度，麻木的再次重启、重装。依旧是Install模式，这次选择不从网上下载软件，可是选择之后，进度条却不走了！&lt;/p&gt;
&lt;p&gt;心理哭着再次重装、这次还是坚持第一次的选择吧！选择Advanced-&gt;Graphic
Advanced Install，这次选择较低的linux版本 ，设置了学校的源，安装成功！！&lt;/p&gt;
&lt;p&gt;在安装的时候没选桌面环境，因为不想用默认的Gnome桌面管理环境。自己装了一个wmaker桌面环境，可是我水平比较菜，终端中文输出为乱码。也不知怎么解决，于是只好aptitude
install gnome，然后就装好了！弄了一下午啊&lt;/p&gt;
&lt;p&gt;秀秀自己的桌面，还不怎么会设置，比较难看。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo4.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/09/buhuo4-300x229.jpg" title="buhuo4" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最后得到了几个教训，在Debian linux下慎用aptitude
upgrade！不知道会出现什么东东！&lt;/p&gt;
&lt;p&gt;一定要养成做备份的习惯，关键时候会让你省很多力气的，&lt;/p&gt;
&lt;p&gt;不然有你哭的！&lt;/p&gt;
&lt;p&gt;当然“远离电脑，珍爱生命，没事不要瞎折腾！”是最好的了！！&lt;/p&gt;</summary><category term="Debian安装"></category></entry><entry><title>python-tornado起步</title><link href="http://blog.junfeng.ca/python-tornadoe8b5b7e6ada5.html" rel="alternate"></link><updated>2012-09-19T00:01:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-19:python-tornadoe8b5b7e6ada5.html</id><summary type="html">&lt;p&gt;今天终于在linux、windows下把python tornado web server 搭建好了&lt;/p&gt;
&lt;p&gt;但在linux下编这个程序的时候发现通过不了（windows下可以通过）&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.ioloop&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tornado.web&lt;/span&gt;

 &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tornado&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;web&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestHandler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;{style="padding-left: 30px;"}
def get(self):&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{style="padding-left: 60px;"}
self.write("Hello Python-Tornado！")&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;application = tornado.web.Application([ (r&amp;quot;/&amp;quot;, MainHandler), ])

 if __name__ == &amp;quot;__main__&amp;quot;:
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;{style="padding-left: 30px;"}
 application.listen(8888)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{style="padding-left: 30px;"}
tornado.ioloop.IOLoop.instance().start()&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;按照这个代码敲，提示Application类无listen方法，然后又纠结了半天，

在网上看到了另一种写法，就改成了这样：

 linux下、windows下皆可通过！

可能还是linux下的tornado没装好！！

明天再研究！！
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python-tornado"></category></entry><entry><title>选课记</title><link href="http://blog.junfeng.ca/e98089e8afbee8aeb0.html" rel="alternate"></link><updated>2012-09-16T00:27:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-16:e98089e8afbee8aeb0.html</id><summary type="html">&lt;p&gt;大一时，导员跟我们说：“军训完之后，你们才是真正的大学生。”我要说：“你不经历过大学的选课，怎么好意思说自己是Big
Student！”&lt;/p&gt;
&lt;p&gt;在我们学校，最近流行一句新的问候语:“你今天选课了吗？选上了吗？”那个人就会无精打采的给你说：“通宵刷教务处的网站，却连学习主页都没进去。”而时下最能证明你RP高的就是选上课了！&lt;/p&gt;
&lt;p&gt;本人是个不喜欢熬夜做什么的！所以，见教务处刷不进去，也就顺其自然了！学长说，可以直接去找老师，我们也就决定去找老师了。可是，在星期二的时候，当我回到宿舍，听舍友们说，老师可以帮你登记，但教务处那里不一定认可。听到这句话后，他们不淡定了，决定：十点睡觉，半夜两三点起来刷选课。他们睡这么早在这之前我还没看到过，感到一丝惊讶，可我却不想半夜爬起来，有什么能比得上睡觉重要呢！我还是11点半睡觉，不打算半夜起来......&lt;/p&gt;
&lt;p&gt;然后，在五点多我醒了，本来他们约定要一起，两点多起来的。可结果：闹钟没叫响设置闹钟的人，只叫醒了一个人。我们的胖胖，他一直从两点多开始刷到五点多，终于是选上了。然后他把我们就都叫醒了。我也决定下去试一下。打开电脑，登录教务处，登入，选一门课，再选一门课，一次完成，中间没有出现什么加载失败、页面过期啊！而他们两个，比我起来得早，却没选上！上帝在和我们开玩笑。只能说，我比较幸运，RP高。当然，第二天白天不爽了一天，不过选上课了，也完成了一件事，还可以。&lt;/p&gt;
&lt;p&gt;星期三晚上，他们俩发誓要选上课。然后开始准备各种利器，浏览器换成google，去其他网速比较好的宿舍选。还真的刷了一夜，但悲剧的是，舍友还是没选上。这又让我感觉自己的RP不是一般的高啊！&lt;/p&gt;
&lt;p&gt;最后，看这么多人选不上课，教务处终于优化了他们的服务器！以前，每个人为了选上课，一次开7、8个窗口。这样本来就有五六千人，再乘以7，就更难登上了，大家都抢着要选上课，可是这样谁也选不上。而教务处禁了这种方式，这样相对，服务器负载就不会那么大了，终于今天，舍友们差不多都选上了！&lt;/p&gt;
&lt;p&gt;为选课熬过夜，这才能说是真正的校内人！！！！&lt;/p&gt;</summary><category term="选课"></category></entry><entry><title>短板之音乐</title><link href="http://blog.junfeng.ca/e79fade69dbfe4b98be99fb3e4b990.html" rel="alternate"></link><updated>2012-09-12T13:08:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-12:e79fade69dbfe4b98be99fb3e4b990.html</id><summary type="html">&lt;p&gt;前几天，伟大的选课开始了。同学们使出各种招数，有通宵熬夜的，有逃课去选课的，却仍没选上。然后，我们学校的服务器就挂了！在学长们的指导下，我毅然决然的直接找老师了。&lt;/p&gt;
&lt;p&gt;本着想多学一点东西的原则，选择了电脑音乐制作这门课。去听的时候，这已经是第三节课了，原来一开学课就开始了。“不过没关系，前面没讲什么重要的。”老师说。他就开始讲什么音符、音程、什么八度啊！让我感觉犹如听天书。好久没这种感觉了。我发现在乐理、五线谱、简谱这些方面真的是一窍不通。隔行如隔山啊，教室里应该有一百多人，像我这样的人还不少，也是工科学生的普遍现象。虽说也听一些歌，但完全不懂什么音调，节奏。&lt;/p&gt;
&lt;p&gt;一大短板啊！看来我选择这门课，还真是选对了，至少应该可以学一些基本的乐理知识！&lt;/p&gt;</summary><category term="短板音乐"></category></entry><entry><title>裸考数学竞赛</title><link href="http://blog.junfeng.ca/e8a3b8e88083e695b0e5ada6e7ab9ee8b59b.html" rel="alternate"></link><updated>2012-09-08T23:29:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-08:e8a3b8e88083e695b0e5ada6e7ab9ee8b59b.html</id><summary type="html">&lt;div&gt;

       
上学期不知哪根筋不对了，报了数学竞赛，花了25元报名费，暑假前也得到了一本历年数学竞赛试题。暑假前，计划着每天做一些，应该可以做完。在暑假里，却没心情做，也不太会做，总是觉得剩下的时间还很多。于是到了最后几天，发现一点也没做，慌了，心理安慰自己，竞赛不是在9月吗，还有时间。于是，一个暑假没做什么事情，放假前计划的是多么的好啊，要看这个，要学那个。可是到了暑假，身在其中，就不知道时间的珍贵了。总是以为时间还有很多，把事情一直往后推，最后没时间做了，就破罐子破摔，反正你就是摔了自己，在大学也没人管你。于是乎，明白：上学时不宜计划放假中的事情。

&lt;/div&gt;

&lt;div&gt;

        
到了学校，想着扎在图书馆，埋头做那套试卷，可事实证明，我又做白日梦了。在学校的日子，更身不由己，课要上，作业要写，电脑要玩，书要看，要发呆.......
然后，就到了昨天，学习委员告诉我，明天要竞赛考试。他不说，我都快忘了。我意识到，要裸考了。那套试卷在我书包里进进出出了很多次，可我却没有翻过，真是委屈了她。粗略的看了一下准考证，发现考试竟然要三个小时。额，也没看开考时间，就把准考证塞到书包里了，到睡觉都没拿出来，最后，将要睡觉了，突然意识到，不知道开考时间是一件很严重的事情，祷告了一下不要睡过头，就睡觉了。

&lt;/div&gt;

&lt;div&gt;

        
早上八点醒了，赶紧起床，掏出准考证，万幸，没迟到，九点开考。然后刷牙吃饭，正好九点整来到了考场，一看人还不少，赶紧找到我的座位，坐下，发现我前面竟然是我们班的第一名。呵呵，也没和她说什么话，就开始考试了。可是，高数学的都忘得差不多了，只能凭感觉写了，费了九牛二虎之力，终于把选择填空做完了，看了一题又一题问答题，不会，还是不会，我不知道高斯公式和斯托克斯公式有什么区别了。陆续有人走了，我也有点想走了，可看着，前面那位在认真做的背影，我咬咬牙，继续做了。不会怎么办，我开始胡写了，尽量少留下一片白。最后，还是有三道大题，留白了。考试结束，回头一看，总共还有15个人不到，呵呵。

&lt;/div&gt;

&lt;div&gt;

           走出教室，我这样安慰自己：重在参与！

&lt;/div&gt;</summary><category term="裸考"></category></entry><entry><title>装Win PE的坎坷历程</title><link href="http://blog.junfeng.ca/e8a385win-pee79a84e59d8ee59db7e58e86e7a88b.html" rel="alternate"></link><updated>2012-09-01T23:48:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-09-01:e8a385win-pee79a84e59d8ee59db7e58e86e7a88b.html</id><summary type="html">&lt;div&gt;

买了移动硬盘之后，慌着把数据转存过去。前几天，突然间想给硬盘装个U盘启动工具，我也知道装这个要格式化硬盘，可是硬盘上已经有了500多G的数据，实在不想再移出去，遂上网搜索如何在不格式化硬盘的前提下，装上Win
PE，网上说在移动硬盘下扩展一个新的分区就可以装了，我赶紧这样弄了，下了大白菜U盘启动制作工具，照例要格式化，我以为格式化的只是那个分区，下面就是一般步骤了，等我装完之后，模拟启动一下，没出现那个界面，然后重启电脑准备检测一下，在启动的过程中，电脑报警了几下，就自动关机了，这时已经很晚了，我也就睡觉了。

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

第二天，等我起来后，打开电脑发现，移动硬盘不能用了，盘符打不开了。实在是无奈，提示格式化，这时我就知道，我那500多G的数据多半是保不住了。但当时实在没办法，也就狠心格式化了，期望着通过数据恢复工具能恢复。格式化之后，赶紧找金山数据恢复工具，可现实和理想差距是如此之大，数据恢复工具理论上确实可以恢复我硬盘里的数据，可却不知要等上几年。也只有认命，心疼那些我下了一个学期的数据。

&lt;/div&gt;

&lt;div&gt;

&lt;/div&gt;

&lt;div&gt;

 但我还是没忘记我最初的目的：这次数据没了，装Win PE
就没后顾之忧了。我换另一个叫电脑店的U盘制作工具，却发现它不支持移动硬盘，再次换回大白菜，又把硬盘分了几个区，还设置了活动分区，这次装成功了，我高兴地把电脑从硬盘上启动了，然后发现桌面上有个分区工具，就想给硬盘分一下区，分了之后，我很是高兴，但发现电脑却无法从硬盘启动了，悲催了，硬盘再次被格式化了，刚装好的PE也没了。我还以为不会格式化呢，系统怎么会格式化自己的数据呢？可是我错了，原来从U盘启动后，Win
PE并不是运行在U盘上，而是运行在本机的硬盘上，所以，在Win
PE下U盘、移动硬盘都只是普通的存盘而已，当然可以把它格式化了。最后，又重新做了一个启动盘，带着空空的硬盘来到了学校。

&lt;/div&gt;

&lt;div&gt;

       经过这次意外，让我知道：买硬盘后一定要先装Win
PE。数据恢复工具是浮云。没事不要瞎折腾。呵呵

&lt;/div&gt;</summary><category term="U盘启动"></category></entry><entry><title>路上的路</title><link href="http://blog.junfeng.ca/e8b7afe4b88ae79a84e8b7af.html" rel="alternate"></link><updated>2012-08-24T23:04:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-08-24:e8b7afe4b88ae79a84e8b7af.html</id><summary type="html">&lt;div&gt;

       
鲁迅曾说过：世界上本没有路，走的人多了，也就成了路。但世界上如此多人，走出了那么多的路，我到底应该走哪条？一年前，我就这样纠结着。美国诗人弗罗斯特在两条路之间选择了芳草萋萋，十分幽寂的路。他认为这条路显得更诱人，更美丽。但我却不是诗人，没有他的勇气，仅仅选择了一条，看似极其普通的路，并且就算我想走人少的路，中国的路很多，可是由于人口众多，我发现我想到的每条路都有很多人走过了！还为自己如此普通而郁闷过。

&lt;/div&gt;

&lt;div&gt;

        一年过去了，大学过了四分之一。未上大学前，对大学期望是如此美好，每天不再做作业，跟着社团一起玩，学校有很多女生让我们欣赏。可是，上了一年大学后发现，做作业时间基本和高中差不多，仅仅是没有高中紧张了；开学后也去面试了两个社团，可人家却把我踢了，也因为生病不得已在国庆节提前一星期回家，等到回来时发现，社团们都已经招完新了。功课也落下了一大截。无奈我只好每天都去自习，由于，在高中习惯体制化了，所以每天自习也并不感到苦逼，相反也慢慢喜欢上去自习了，这样成绩还说得过去，就是英语还是那么烂，没办法，对英语要求低了，每天也想着学英语，可是总是不自觉的把英语放在最后，经常自习结束也没看上几分钟英语，并且，也不知道怎么去学英语！大一上学期因为不让带电脑，不去学习也没什么事可做，故而顺理成章的养成了自习的好习惯！每天准时9点半回宿舍，因为没网可上，手机慢慢也玩烦了，就慢慢听起流行音乐了，这样到还不经意间学会了几首歌。以前，根本就不会唱歌，现在不能说会唱歌，只是在KTV里面也能拿着麦克风吼几首，不管唱的好听不好听吧，总算还是能听，这也是一年之内的改变吧！到了下学期，虽然学校依然要求不准带电脑，可是我们宿舍12个人都带了电脑，有了电脑，发现听歌的时间变少了！慢慢的脖子也疼了，但真正用电脑编程的时间却是少之又少！

&lt;/div&gt;

&lt;div&gt;

&lt;div&gt;

一年前，第一次离开家，我的心情是忐忑而又激动的！由于在高中随意惯了，到了大学还带着这种随意的心态。可是军训却给了我下马威，没有集体意识，什么都做不好，军队又是纪律严明，时间观念非常强的地方，让我这种天性懒散的人感到格外不好过。以前的从容心态荡然无存，只有尽全力去做，我感觉我军训那段比高三都上心，可真的没有运动细胞。再加上作息时间和舍友们冲突，上大学前从来都是10点之前睡觉的，但大学11点半熄灯，我们大都是12点左右休息的。当时，我真的是无法接受，我认为我不能熬夜。熬夜的话第二天就会痛不欲生，就这样，让我很不爽。最后不知怎的，一军训完就病倒了，在学校门诊看了很长时间都不好，最终提前回家了，在家打了半个月的点滴，才算是好了！再回到学校，真的是元气大伤！

&lt;/div&gt;

&lt;div&gt;

        后来，我明白了，不能熬夜只是我臆想出来的，有时候，我总是消极的看待问题，把问题想的总是那么坏，自己虐待自己。现在的我，基本上已习惯了这种作息，甚至于让我十点睡觉，我反而睡不着了，这难道不是对当时的我的一种讽刺！任何局面，看似没有出路，但可能真的是你自己把路封死了。当我真的接受了，恍然发现，熬夜真的没有那么可怕，噩梦只是我臆想出来的。

&lt;/div&gt;

&lt;div&gt;

        由于没有参加社团，平时没什么事可做，无聊的只有自习了！我们学校本来女生就少，再加上我没有机会，也不敢创造机会和女生说话，导致大一下学期，和女孩说话的次数，手加上脚就可以数过来，不过现在也习惯了，我性格就那样，也没办法。不知道这学期会和女生说几句话，这次我一定要记下来！

&lt;/div&gt;

&lt;div&gt;

        不管怎样，这一年，确实是增长了不少见识（虽然也很少去市区），算下来，这学期，读了几本书，看了几部动漫，观了几场电影，和高三相比，可能只有情商下降了（貌似高三情商也不高）。总而言之，胸怀是有所拓宽吧，以前很多不能接受的事情，现在看来，可以一笑了之！关于玩的本领，却是没有增加多少，我承认我不是一个会玩的人，这方面应该加强，万一以后有可能交了女朋友，不能让她感觉我不解风情啊！

&lt;/div&gt;

&lt;div&gt;

        我们走过的路，大多都是前人走过的，但因为是我们自己走，这就不同于我们听到的关于这条路的传闻，我们亲身体会其中的酸甜苦辣，这条路影响着我们。我们走在前人走过的路上，创造着自己的人生之路，终有一天，我们走的这条路会因我们走过而有所改变！

&lt;/div&gt;

&lt;/div&gt;</summary><category term="大一总结"></category></entry><entry><title>微博们的同步</title><link href="http://blog.junfeng.ca/109.html" rel="alternate"></link><updated>2012-08-22T21:56:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-08-22:109.html</id><summary type="html">&lt;p&gt;楼主偏爱新浪微博，可是我的好友大都在QQ空间、腾讯微博，本来是想推广自己的新浪微博的，无奈一月下来，也没接几个人过来，在新浪微博有点寂寞，于是决定重新打理QQ空间，腾讯微博，但我又不想相同的内容同时发几遍（比较懒）。再看，各大权贵网站的微博却不互联，没什么合作，但天无绝人之路，终于找到了提供微博之间同步服务的网站，看来和我有相同需求的人还不少。&lt;/p&gt;
&lt;p&gt;我在网上找到了几个这样的网站，在此说一下：&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #000000; position: relative; left: -2em;"&gt;微博通（原名亨拍微博通，不知怎么改名了），网址：&lt;a href="http://www.wbto.cn/"&gt;&lt;span
style="color: #000000;"&gt;http://www.wbto.cn&lt;/span&gt;&lt;/a&gt;&lt;strong&gt;。&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首页设计感觉良好，支持的平台号称最多，其实也是最多。让我意外的是竟然支持QQ空间（看来QQ空间也放松了权限，开源了他们的部分接口，想分一杯羹了）。&lt;/li&gt;
&lt;li&gt;营销手段不错，感觉应该是一个团队在做。&lt;/li&gt;
&lt;li&gt;同时提供微博通手机版、微博通桌面客户端、微博通iPhone版、微博通Android版、微博通S60V5版、微博通S60V3版、微博通webOS版、享拍iPad版、享拍iPhone版、享拍Android版、享拍S60版手机客户端和chrome插件、微博通网页版，难能可贵的是还有塞班。现在做手机应用的能考虑到塞班系统，真的是不容易啊。对于该网站的客户端，S60V5用户不建议装微博通，建议装亨拍客户端。因为在我装微博通的时候，提示让装QT平台，这个平台装下来，要20多M的空间，装完之后，微博通还不能用，让我郁闷的。后来装的亨拍客户端比较精简，只提供发微博的功能，没有浏览功能！挺省流量的。&lt;/li&gt;
&lt;li&gt;但抓取内容稍微有点慢了，可以理解，毕竟是从其他网站采集过来的。还有一个不大不小的bug，当我浏览一张比较长的图片时，看到头再缩小，发现不在原来读的那条微博上，而是略过了一些内容，这就有点让用户感到麻烦了！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span
style="color: #000000; position: relative; ; left: -2em;"&gt;其他还有诸如&lt;/span&gt;：  &lt;/p&gt;
&lt;p&gt;另一个也叫微博通的网站（界面不是很漂亮，比较简洁），玛莎网（名字起得很好，功能和亨拍微博通也差不多，但不支持QQ空间的同步），这些算是比较出名的。提供微博同步的还有很多网站，找到你感觉顺眼、顺手的就可以了！&lt;/p&gt;</summary><category term="微博同步"></category></entry><entry><title>校园风光</title><link href="http://blog.junfeng.ca/e6a0a1e59bade9a38ee58589.html" rel="alternate"></link><updated>2012-08-18T15:56:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-08-18:e6a0a1e59bade9a38ee58589.html</id><summary type="html">&lt;p&gt;一学期下来，也拍了不少照片，特选几张来和大家分享！&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/75/b2/e3/227509d8bf24efefee730c38ed3faa7e.jpg" title="世园会吉祥物" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="text-align: center; color: #ff9900;"&gt;萌到自然呆的世园会吉祥物&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/c3/f2/30/a5c6310c4cb277277e4a2a3e18618117.jpg" title="红花" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;拍的不好，多亏美景帮衬&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/2e/9c/0b/01b7ab6f9b9d2c0646bf90edc0fd423a.jpg" title="白花" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #ff9900;"&gt;春天，每天都要经过的地方。在我们学校，什么样的植物都会开花&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/da/e9/78/24cec76ee7bba7f777bed48e5db04fc4.jpg" title="立体的花" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #ff9900;"&gt;在上完某一次体育课回来时，见到的，忍不住拍了下来。好惬意的蜜蜂&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/10/4b/ec/0df938f86af2fd6ae270e90f51e6fc93.jpg" title="旷远" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #ff9900;"&gt;难得在西安见到这么蓝的天空，那几根柱子我也不知道是干什么，只知道这是雷达实验室&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/a8/9d/c0/e5a66f3dc405f9f11f829ef9a2f39716.jpg" title="天空" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;空旷的天空却不缺乏韵味&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/f0/8b/bd/95f21ced2645619242e7a2c7f6e897d6.jpg" title="教学楼" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span
style="color: #ff9900;"&gt;刚开始以为是亚洲最长的教学楼，一百度，原来是最长的教学楼群。把所有教学楼建成一排，还真亏他们想起出来&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/8a/9a/53/63f92467c52ee00d2d77330803eb087c.jpg" title="相接" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;好像有一种江南水乡的味道&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/ef/ba/84/17c6f1a38836e6694c2602a8438a0e8f.jpg" title="夕阳" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;夕阳下的火烧云&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/fb/e8/48/b13580b171d4382344cc2f0bb2d453be.jpg" title="宿舍" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;有点像寺庙哦&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/f7/ca/bc/7d881afbffc07f1bfa7c009e846ef5ab.jpg" title="鎏金" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;鎏金的天空，房屋只剩剪影&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/16/0b/30/149fa65eea1dbd9299faef7fb0153d96.jpg" title="篮球场上" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;惬意，充满朝气的大学生活&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.6.cn/cvbnm/99/ee/26/6f7ff4b678994dc8e3e67010abf5d9ca.jpg" title="A楼" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;算不上巍峨的教学楼吧&lt;/span&gt;&lt;/p&gt;</summary><category term="校园风景"></category></entry><entry><title>驾校怪谈</title><link href="http://blog.junfeng.ca/e9a9bee6a0a1e680aae8b088.html" rel="alternate"></link><updated>2012-08-06T22:37:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-08-06:e9a9bee6a0a1e680aae8b088.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;前奏&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;要不是我昨天打电话问了一下，就会错过今天传说中的驾考第一试，虽然电话服务员态度不好，不过总算告诉我让今天早上六点半之前到驾校集合，我等了20多天终于有了进展（回来的时候，听见一哥们说等了1个多月才排到这次考试，我顿时感觉我太幸运了）。她当记一大功！可哪位神人让我们这么早就去集合啊！人家公务员八点才上班啊！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;起床&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了我能够在六点半之前起床，特意设了六点的闹铃！可我今天才发现我的手机竟然快了一个小时，闹铃当然没听到了！幸亏老妈准时在六点叫醒了我！困得要了我的命了。到了驾校发现已经来了这么多人！赶巧，我刚到，教练就叫我们考科目一的集合了，当时一阵高兴！但还是有点迷糊、犯困。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;讲话&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;传说中的车前讲话开始了！我面对着很有经验的教练听着他说什么小五项，“总共有九项，货车五项，小车三项”。听到这句话，我顿时不困了！一会儿，久违的校长来了，校长就是校长，气场十足！把我们前三排全给镇蹲下了（这不是军训啊\~）！她把教练的话进行了不简练的概括！同时又加上了一句：“由于国家财政困难，考场的电脑系统比较落后，无法显示动画！你们只能靠运气猜了。”啊,校长，亲，我们这不是考六级啊!再说这和我们国家财政有一毛钱的关系啊！因为对这句话联想的比较多，我竟然精神多了！校长就是xiaozhang！我们买了坑人的学员卡，被拐进了驾校官方黑车，终于来到了考点！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;故人&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下车后，我经历了今天最有价值的事情！两年不见，她变漂亮了！刚开始她一定没认出我来。我们如今更是两个世界的人了！我从来都不想在乎外表，但我知道我还是在乎自己的外表的，但我想看看自己能忍受的最低限度，故而把头发剪成了3mm，确实挺难看！她应该也发现了我。但我们却都很有默契的没有打招呼，都已在对方的人海里。虽说男人应该大气一点。但我很害怕，不知道，如果突然向你打招呼，会不会让你不高兴。更不敢想象如果她不认识我的话.......而且她有朋友陪伴！我就是一个人。有时候老天就是如此作弄人。让一个不喜欢寂寞的人，终生与寂寞为舞！我想下次如果还有机会遇见的话，她身边应该不止女生陪伴了吧？！这些已和我无关，但我心里必须要面对，可笑我当初是如此不成熟。更神奇的是我竟然碰到了另外的熟人。真是缘分啊！上天还真是“眷顾”我啊&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;等待&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在候考室，我坐了一个小时后，不行了，饿的我肚子疼！果断下去买了一包法式小面包。我一天吃了一袋小面包，喝瓶农夫山泉。就这么过去了！我不饿了但过了一个小时后，让我等的有肚子疼了！不敢上厕所啊！害怕在去厕所的这段时间，叫到了我的名字，那我不是倒霉透了！这样想，去个厕所，都要犹豫半天！更可气的是，我的手机竟然在11点的时候罢工了！这就像上帝把鲁滨逊扔到了那个岛，但却忘记了把枪给他了！那种无聊的感觉岂能用人类的文字来表达！我只能瞪天（貌似看不到天，只能看到天花板）看地。到了12点的时候，我无聊的只能思考人生了。同时校长做了一个“英明”的决定。女士优先，她让女生全部先考完之后，我们这些剩下的男生才能考。的确很对，等到所有的女生走完之后，才轮到我们这些男生！可是我却郁闷了，我等的连思考人生的兴趣都没有了，想欣赏一下漂亮一点的美女，陶冶一下情操。可是悲催的才发现女生都走完了！只剩下，校长，和那个服务员是女的。一屋子全是大老爷们，校长乃是大姨级别的，那个服务员，长的不是我欣赏的类型！悲乎，无聊乎？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;世故&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;等到两点的时候终于念到了我的名字，该我考试了，但老天今天精神特别好，和我开起了玩笑！两点半的时候，按照估计本来就该我考试了！却来了一群社会大考的人，何为社会大考呢？就是违章到一定程度重考科目一交通理论知识的！参加社会大考的人都是些社会上的人，他们懒散惯了，哪像我们学生这么听话，让你几点到，肯定只早不晚。但他们却很悠闲，到了三点，还有三三两两踱步而来。起初有位很彪悍的哥们不满，像校长问起话来了，当然他被无情镇压了！校长说：“你们先出去休息一下，过了40分钟后再回来考试。”她又对那位服务生说：“参加社会大考的人准考证只收到2点半!之后来的六点以后再考试!”想法确实很好！可是三点以后，交通局长的儿子的朋友来了，三点半以后，局长的朋友来了！四点的时候，考官的儿子来了。无奈，我们的校长只能亲自迎到考场。就这样，本来该是40分钟结束的社会大考，一直持续到4点半！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10小时和20分钟&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我等啊，等啊，到最后连等的力气都没有了！终于，佛祖休息去了，轮到我考试了。我走进考场，遇到了几个教材上没有的题，全蒙错了，顿时有点慌了我。不过佛祖真的睡着了！我以微弱优势过了驾考科目一。我等了十个小时，仅用了不到20分钟考试，呵呵。经过这次经历真心明白，组织考试是个技术活，不是什么急购都能弄好的！还是学校组织考试靠谱。&lt;/p&gt;
&lt;p&gt;真是多姿多彩的一天啊！&lt;/p&gt;</summary><category term="驾照考试"></category></entry><entry><title>我为什么关了QQ空间？</title><link href="http://blog.junfeng.ca/e68891e4b8bae4bb80e4b988e585b3e4ba86qqe7a9bae997b4efbc9f.html" rel="alternate"></link><updated>2012-07-23T16:28:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-23:e68891e4b8bae4bb80e4b988e585b3e4ba86qqe7a9bae997b4efbc9f.html</id><summary type="html">&lt;p&gt;QQ空间是腾讯2006年开发出的具有博客功能的个性空间。我用QQ空间也三年了。按说我不应该关了QQ空间，放在那即使不更新内容也没什么影响，但本人认为既然不用了，放在那里碍眼，遂关闭了QQ空间。&lt;/p&gt;
&lt;p&gt;再说我为什么不用QQ空间？&lt;/p&gt;
&lt;p&gt;QQ空间的确很好，但它给用户的权限太低。我想自定义一下背景音乐，就要掏钱；我想自己定义一下空间的界面，也要掏钱；而我想自己编辑一下空间的的代码，但却没有权限。有时候什么东西都给你做好了，反而感觉不爽。即使QQ空间里的那些漂亮的主题免费给我用，我还是会离开QQ空间的！因为我相信，如果用着自己设计的主题，即使它不那么漂亮，但这种感觉是用现成的主题永远比不了的！我现在虽然设计不了完整的主题，但前几天我改了一下自己网站的代码，让它的排版感觉更漂亮一点，我就高兴地不得了！&lt;/p&gt;
&lt;p&gt;再说在内容上，大多是好友心情的发表，原创的blog文章少之又少！一篇文章能被多个好友转发，有次看到一篇文章出现了7、8次，我都崩溃了！我认为现在我们使用的QQ空间的功能，微博完全可以胜任。&lt;/p&gt;
&lt;p&gt;还有一点我忍受了很久。QQ空间的黄钻服务。现实中大家都爱特权阶级，特权阶级也无可避免。但腾讯抓住了中国人的这点心理。在网络上也搞这些特权服务，网络的精神应该是分享和平等。虽然我建这个网站一年也要花个100多元，但这个网站全权属于我，这种感觉很好。我可以每年花费相同的钱去开通QQ空间的黄钻服务，这样也不用自己去考虑网站的维护，只要点点鼠标就能享受和别人不一样的待遇。但我却无福消受这种待遇。我享受着自己创造一切的快乐！&lt;/p&gt;
&lt;p&gt;我现在已经处于大学阶段，需要更广的阔世界。QQ空间已不适合我，它应该属于面向中学生的一项web应用，仅仅在好友圈子里面玩，故挥泪离别QQ空间，虽然我无法再查看好友们的近况。再说即使我天天看QQ空间十遍，我和朋友们也已处于不同的世界了。他们说的人名、地名我都已不再熟悉。我们走上了不同的道路，一遍一遍的看好友们的状态，也仅仅是幻想自己还在他们的世界里的自欺欺人而已。我们都有自己的路要走，不必缅怀，不必伤感，相信终有一天会再相遇。还会是好朋友的。&lt;/p&gt;
&lt;p&gt;因此我告别QQ空间，告别我们青涩的过去。开始自己的独立blog之旅。我相信，我将收获良多。&lt;/p&gt;
&lt;p&gt;
&lt;object width="257" height="33" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"&gt;
&lt;param name="src" value="http://www.xiami.com/widget/0_1770127756/singlePlayer.swf"&gt;&lt;/param&gt;&lt;param name="wmode" value="transparent"&gt;&lt;/param&gt;

&lt;embed width="257" height="33" type="application/x-shockwave-flash" src="http://www.xiami.com/widget/0_1770127756/singlePlayer.swf" wmode="transparent"&gt;
&lt;/embed&gt;
&lt;/object&gt;
&lt;/p&gt;</summary><category term="关闭QQ空间"></category></entry><entry><title>浅解电脑掉线</title><link href="http://blog.junfeng.ca/e6b585e8a7a3e68e89e7babf.html" rel="alternate"></link><updated>2012-07-21T21:31:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-21:e6b585e8a7a3e68e89e7babf.html</id><summary type="html">&lt;p&gt;近日，研究起TCP/IP协议来了，话说那本《TCP/IP协议•卷一》真乃神书也，看的我是晕头雾里的！不过在我看那本书的时候，突然想起一个现象：我们都遇到过电脑不知怎么的突然掉线了的情况！这是为什么呢？看这本书的时候，大脑被刺激的突然想到一个可以解释的说法。&lt;/p&gt;
&lt;p&gt;以前刚接触电脑的时候，家里用的是拨号上网（那本书上叫SLIP），  &lt;/p&gt;
&lt;p&gt;开机时总要等一些时间才能连上网络。当时，不想等，遂请问高手，懂得手动设置一个IP地址，就能取消开机是要等的那段时间。果然这样上网速度快了很多。过不久，又经人提醒，明白手动设置IP地址的话，很容易被黑客攻击。这就相当于把你电脑在网络上的地址给公布了出去，如果网络遵循黑暗森林法则的话，这样不知死了多少次了！所幸，网络不处于黑暗森林状态，对于普通用户，黑客也不屑于去攻击。所以手动设置本机IP的人可以放心一些。&lt;/p&gt;
&lt;p&gt;那这件事又和网络掉线有什么关系呢？&lt;/p&gt;
&lt;p&gt;首先，A用户手动设置自己的本机IP后，假如是125.252.12.7，那么这个IP地址就变的特殊了。因为当A上线时，他的电脑一定会用这个IP地址的！。而当A下线后，这个IP是否还为A独有呢？当然不，网络运营商不可能这样浪费IP的，这样的话，这个IP就会被其他用户获取，作为他们电脑的地址。而掉线的发生，就是假如B的电脑在A不在线的情况下，获取了125.252.12.7这个IP，而当B玩地下城正玩得高兴的时候，这时A上线了，因为A把这个IP地址作为了他电脑的唯一地址，自然这个IP也就被A抢走了。而B的电脑就要重新获取新的IP，这样就造成B的电脑掉线了。&lt;/p&gt;
&lt;p&gt;假如在一个网段上有很多人，都手动设置了IP地址的话。那么自由的IP地址就会很少，因为IP地址始终是有限的。这样的话，掉线的情况就会经常发生在这个网络上。&lt;/p&gt;</summary><category term="电脑掉线"></category></entry><entry><title>无"家"可归的窘迫</title><link href="http://blog.junfeng.ca/e697a0e5aeb6e58fafe5bd92e79a84e7aa98e8bfab.html" rel="alternate"></link><updated>2012-07-17T22:32:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-17:e697a0e5aeb6e58fafe5bd92e79a84e7aa98e8bfab.html</id><summary type="html">&lt;p&gt;年前回家，自己的屋子被弟弟占了，电脑也成了他私有的了！前几天回来，看着他像房间的主人一样安然的立在我住过的房间里，而我就像一个客人一样。突然间发现我成了无家可归的人了！虽然说这样的话，好像有点不知好歹。我每天待的地方叫什么!?我在这个家里天天什么事不做，整天就玩玩电脑，看看电视，实在是惬意的很！这一切不都是这个家提供个你的吗？&lt;/p&gt;
&lt;p&gt;你怎么能说无家可归了呢？&lt;/p&gt;
&lt;p&gt;是的，我也喜欢这个家，老妈也把这个家整理的很干净。她把这里真的当成了家来维护。当然对她来说这里的确是她的家。但这里不是我的家。我在这个家里是作为儿子的角色的！老妈总是说我不干一点家务，她说要是她不帮我兄弟俩打扫房间，我们的房间两天地上就能蒙上一层灰！她说：“你就不能把你房间打扫打扫吗？”而每次我也没打扫，我也在想，为什么我不愿打扫？应该是我感觉这里不是我的家吧,老家才是我的家，但现在我也回不去了，老家已没人住，回不去了！现在这个家也慢慢地变得陌生，但我和弟弟吵架时，他已能理直气壮地说这是他的家！是啊！我已不属于这个家，我终究是要走的！但他还要在这个家呆很长时间！当然把它当成家了！我们一年也就呆在家里三、四个月，这里当然也对我们生疏了，同时我们也期望着建立属于自己的家，无奈在求学路上，无经济实力建立属于自己的家！故而我发现竟然无“家”可归了！&lt;/p&gt;
&lt;p&gt;我们真的来到了这样一个年龄，我们正在慢慢的被时间拽离我们所心爱的家，在这个家里生活，我们不用担心生计，即使什么事都不做，父母顶多说说我们，也无碍大事！可是我们不得不承认我们真的已经是成年人了，面对成年人我们也叫起大哥大姐了，而我们被叫做叔叔阿姨的次数也越来越多，从第一次被这样叫的惶恐，但最后的理所当然。我们应经到了该承担责任的年龄，虽然割舍注定会痛苦，但新的创造也在吸引着我们。让我们走出一直庇护我们的家，去创造属于我们自己的家吧！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ladies and Gentlemen ，Go！&lt;/strong&gt;&lt;/p&gt;</summary><category term="成长之路"></category></entry><entry><title>《钢之炼金术师》小评</title><link href="http://blog.junfeng.ca/e3808ae992a2e4b98be782bce98791e69cafe5b888e3808be5b08fe8af84.html" rel="alternate"></link><updated>2012-07-15T22:03:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-15:e3808ae992a2e4b98be782bce98791e69cafe5b888e3808be5b08fe8af84.html</id><summary type="html">&lt;p&gt;与这部动漫相遇首先得感谢舍友，他向我推荐这部动漫。&lt;/p&gt;
&lt;p&gt;《钢炼》无疑是一部好的作品，不靠画面，不靠后宫元素，仅仅主打剧情，就能让你深陷其中。虽连载了64集，但跟着剧情走，也不会感觉亢长。真的很佩服荒川弘的想象力，虚构出了“贤者之石”这种东西，其材料竟然是活人，而她又将其取名为“贤者之石”，真的不能不说是一种讽刺。那个世界是炼金术盛行的世界。炼金术师都要遵循的的基本法则是等价交换原则。但贤者之石却可以打破这个法则，同时贤者之石又可以使人长生不老（以人的生命能源为材料的贤者之石有此功效也合情合理）。&lt;/p&gt;
&lt;p&gt;主人公是爱德华，和阿尔两兄弟，他们都是炼金术师。为了见到他们已死去的母亲，而年少无知的触犯了禁忌，进行人体炼成，为此爱德华失去了一只脚，而阿尔则失去身体，灵魂只能固定在空空的铠甲上。因此他们踏上了寻找让自己身体恢复的“贤者之石”的旅程。在旅途中，爱德华加入了军队，成为国家炼金术师，名为“钢之炼金术师”。但国家炼金术师因为在伊修巴尔歼灭战中被军队作为人形兵器大肆屠杀伊修巴尔人，名声不那么好。在旅途过程中，他们遇到了一系列事情，有伊修巴尔武僧专门针对国家炼金术师的杀戮，也有一个终极阴谋围绕着他们。当一个个善良的人无辜而死后，他们发誓，再也不会让任何一个人在他们面前死去，爱德华两兄弟决定再也不会逃避，就是拼了自己的命，也要保护身边的人。而当他们知道贤者之石是由活人炼出来的的时候，他们也发誓不用贤者之石来恢复自己的身体。&lt;/p&gt;
&lt;p&gt;最后在与烧瓶中的小人决斗时，阿尔为了救危难中的哥哥爱德。用自己的灵魂交换了留在真理那边的哥哥的胳膊。而作为代价，他则永远留在真理之门的那边。当爱德打败人造人时，他又为救阿尔，以自己的真理之门和真理做交换，救回了阿尔，但自己却无法再使用炼金术。因为爱德华明白不论什么贤者之石啊，炼金术啊都比不上有亲人，朋友在身边好。&lt;/p&gt;
&lt;p&gt;爱德华和阿尔两兄弟无疑是目标明确的。他们为了身体能恢复，一直在努力寻找。而他们那种不牺牲任何人包括是敌人的人生观，却是令人敬佩，和以人造人父亲为首的人造人们肆意杀戮无辜人的行为形成了鲜明的对比。人造人只把人当做贤者之石的才料的观点确实令我难以接受。但在他们看来可能我们人可能就是他们的食物，这和我们以其他植物和动物为食的观点是一样的！但我们有自己的思想意识，有自己灿烂的的文化，有温暖的感情，这些好像也是以人为标准来考虑的。当然以人为本的思想绝对要坚持，谁叫我是人呢！只是期盼我们能善待其他种族，貌似矫情了。跑题了\~&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #ff9900;"&gt;欣赏一下主题曲吧&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
&lt;object width="480" height="400" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"&gt;
&lt;param name="src" value="http://www.tudou.com/v/-KUp0duwI88/&amp;amp;resourceId=0_05_05_99&amp;amp;bid=05/v.swf"&gt;&lt;/param&gt;&lt;param name="allowscriptaccess" value="always"&gt;&lt;/param&gt;&lt;param name="allowfullscreen" value="true"&gt;&lt;/param&gt;&lt;param name="wmode" value="opaque"&gt;&lt;/param&gt;

&lt;embed width="480" height="400" type="application/x-shockwave-flash" src="http://www.tudou.com/v/-KUp0duwI88/&amp;amp;resourceId=0_05_05_99&amp;amp;bid=05/v.swf" allowscriptaccess="always" allowfullscreen="true" wmode="opaque"&gt;
&lt;/embed&gt;
&lt;/object&gt;
&lt;/p&gt;</summary><category term="钢炼"></category></entry><entry><title>九牧王与九牧士</title><link href="http://blog.junfeng.ca/e4b99de789a7e78e8be4b88ee4b99de789a7e5a3ab.html" rel="alternate"></link><updated>2012-07-09T11:23:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-09:e4b99de789a7e78e8be4b88ee4b99de789a7e5a3ab.html</id><summary type="html">&lt;p&gt;走在街上，无意间看到九牧王的一家店，上面挂着一条横幅，说来也巧，这条幅上“九牧王”中的“王”字少了上面的一横，变成了“九牧士”。感觉“九牧士”这个名字更好一点，“九牧王”虽霸气，但“九牧士”更有韵味一点。&lt;/p&gt;
&lt;p&gt;而在生活中，我们一味的追寻着成为王，想方设法的往上爬，想要成为指挥他人的领导，可又有多少人能成功呢？很多人没成为了王，却把本身的“士”的气质给丢了！！悲乎？！&lt;/p&gt;</summary><category term="“王”与“士”"></category></entry><entry><title>HTML新手之旅之表格</title><link href="http://blog.junfeng.ca/htmle696b0e6898be4b98be69785e4b98be8a1a8e6a0bc.html" rel="alternate"></link><updated>2012-07-08T18:44:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-08:htmle696b0e6898be4b98be69785e4b98be8a1a8e6a0bc.html</id><summary type="html">&lt;p&gt;做了一个很简单的课程表表格。&lt;/p&gt;
&lt;p&gt;html代码如下：&lt;/p&gt;
&lt;p&gt;\&amp;lt;html&gt;&lt;br /&gt;
\&amp;lt;body&gt;&lt;br /&gt;
\&amp;lt;p&gt;课堂练习:\&amp;lt;/p&gt;&lt;br /&gt;
\&amp;lt;table align="center" border="3px" width="500px" height="250px"
bordercolor="#35a2f3"&gt;&lt;br /&gt;
\&amp;lt;caption&gt;课程表 \&amp;lt;/caption&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;/p&gt;
&lt;p&gt;\&amp;lt;td&gt;项目\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td colspan="5"&gt;上课\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td colspan="2"&gt;休息\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期一\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期二\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期三\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期四\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期五\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期六\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;星期日\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td rowspan="4"&gt;上午\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;语文\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;物理\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td rowspan="4"&gt;休息\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;地理\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;历史\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;化学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td&gt;化学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;语文\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;体育\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td&gt;政治\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;体育\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;历史\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;地理\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td rowspan="2"&gt;下午\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;语文\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;英语\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;物理\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td rowspan="2"&gt;休息\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;tr&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;数学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;地理\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;历史\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;化学\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;td&gt;计算机\&amp;lt;/td&gt;&lt;br /&gt;
\&amp;lt;/tr&gt;&lt;br /&gt;
\&amp;lt;/table&gt;&lt;br /&gt;
\&amp;lt;/body&gt;&lt;br /&gt;
\&amp;lt;/html&gt;&lt;/p&gt;
&lt;p&gt;效果如图：&lt;/p&gt;
&lt;table width="500px" border="3px" align="center"&gt;
&lt;caption&gt;
课程表

&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;
项目

&lt;/td&gt;
&lt;td colspan="5"&gt;
上课

&lt;/td&gt;
&lt;td colspan="2"&gt;
休息

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
星期

&lt;/td&gt;
&lt;td&gt;
星期一

&lt;/td&gt;
&lt;td&gt;
星期二

&lt;/td&gt;
&lt;td&gt;
星期三

&lt;/td&gt;
&lt;td&gt;
星期四

&lt;/td&gt;
&lt;td&gt;
星期五

&lt;/td&gt;
&lt;td&gt;
星期六

&lt;/td&gt;
&lt;td&gt;
星期日

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="4"&gt;
上午

&lt;/td&gt;
&lt;td&gt;
语文

&lt;/td&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
物理

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;td rowspan="4"&gt;
休息

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
地理

&lt;/td&gt;
&lt;td&gt;
历史

&lt;/td&gt;
&lt;td&gt;
化学

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
化学

&lt;/td&gt;
&lt;td&gt;
语文

&lt;/td&gt;
&lt;td&gt;
体育

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
政治

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
体育

&lt;/td&gt;
&lt;td&gt;
历史

&lt;/td&gt;
&lt;td&gt;
地理

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td rowspan="2"&gt;
下午

&lt;/td&gt;
&lt;td&gt;
语文

&lt;/td&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
英语

&lt;/td&gt;
&lt;td&gt;
物理

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;td rowspan="2"&gt;
休息

&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
数学

&lt;/td&gt;
&lt;td&gt;
地理

&lt;/td&gt;
&lt;td&gt;
历史

&lt;/td&gt;
&lt;td&gt;
化学

&lt;/td&gt;
&lt;td&gt;
计算机

&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</summary><category term="html表格"></category></entry><entry><title>Hello，World</title><link href="http://blog.junfeng.ca/helloefbc8cworld.html" rel="alternate"></link><updated>2012-07-07T16:58:00+08:00</updated><author><name>algu</name></author><id>tag:blog.junfeng.ca,2012-07-07:helloefbc8cworld.html</id><summary type="html">&lt;p&gt;爱科学，爱文学，爱艺术，爱编程；&lt;/p&gt;
&lt;p&gt;码农的世界你们永远不懂；&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.jcodef.com/wp-content/uploads/2012/07/image.jpg"&gt;&lt;img alt="" src="http://www.jcodef.com/wp-content/uploads/2012/07/image.jpg" title="image" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="color: #00ccff;"&gt;（图片来自果壳）&lt;/span&gt;&lt;/p&gt;</summary><category term="码农"></category></entry></feed>